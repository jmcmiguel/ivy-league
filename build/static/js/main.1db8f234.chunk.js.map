{"version":3,"sources":["components/Copyright.jsx","pages/Home.jsx","components/styles/useStylesTeacherHome.js","components/ListItems.jsx","components/StudentListItems.jsx","components/HomeDrawer.jsx","components/StudentBottomNav.jsx","components/ControlledTextField.jsx","components/JoinClassDialog.jsx","services/classes.js","services/users.js","services/exams.js","components/StudentClassCard.jsx","components/DashboardStudent.jsx","components/styles/useStylesTeacherExam.js","components/StudentExamsCard.jsx","components/StudentExams.jsx","components/AccountStudent.jsx","components/StudentExamHistory.jsx","components/StudentAppBar.jsx","components/ControlledRadioButton.jsx","components/RenderExamQuestions.jsx","components/StudentExamPage.jsx","pages/Student.jsx","pages/SignIn.jsx","pages/SignUp.jsx","components/HomeAppBar.jsx","components/ExamsCard.jsx","components/Title.jsx","components/ExamScoresTable.jsx","components/ExamScoresDialog.jsx","components/ExamQuestionsDialog.jsx","components/ExamStatsDialog.jsx","components/ExamTeacher.jsx","components/SectionsCard.jsx","components/AddSectionDialog.jsx","components/EnrolledStudentsTable.jsx","components/EnrolledStudentsDialog.jsx","components/SectionRecords.jsx","components/StudentsTeacher.jsx","components/styles/useStylesForgotPassword.js","components/ControlledSelect.jsx","components/ControlledDateTimePicker.jsx","components/ExamDetailsForm.jsx","components/QuestionAdderDialog.jsx","components/ExamPool.jsx","components/ExamQuestionsForm.jsx","components/VerifyQuestions.jsx","components/VerifyExamQuestions.jsx","pages/CreateExam.jsx","components/TeacherBottomNav.jsx","components/AverageScoreChart.jsx","components/TopScorer.jsx","components/RankingBoard.jsx","components/DashboardCharts.jsx","components/DashboardTeacher.jsx","pages/TeacherHome.jsx","components/ForgotPasswordForm.jsx","components/EmailVerificationForm.jsx","pages/ForgotPassword.jsx","pages/Error404.jsx","components/Router.jsx","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","to","style","textDecoration","Date","getFullYear","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","type","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","footers","title","description","Home","classes","Fragment","CssBaseline","AppBar","position","elevation","className","Toolbar","noWrap","Button","Container","maxWidth","component","gutterBottom","Grid","container","justify","map","item","xs","sm","key","Link","href","Box","mt","useStylesTeacherHome","root","paddingRight","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","height","overflow","paper","flexDirection","fixedHeight","ListItems","match","Divider","List","ListSubheader","inset","url","all","ListItem","button","ListItemIcon","ListItemText","primary","onClick","localStorage","clear","window","location","replace","StudentListItems","HomeDrawer","open","handleDrawerClose","listItems","Drawer","clsx","IconButton","minWidth","bottom","StudentBottomNav","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","ControlledTextField","name","error","control","rules","required","InputProps","multiline","rows","autoFocus","FormControl","Boolean","as","TextField","fullWidth","defaultValue","FormHelperText","message","JoinClassDialog","setOpen","handleAdd","useForm","handleSubmit","errors","handleClose","Dialog","onClose","aria-labelledby","onSubmit","form","classCode","DialogTitle","id","DialogContent","DialogContentText","DialogActions","getAll","a","request","axios","get","response","data","getAllClass","section","courseCode","courseDesc","getClasses","getClass","newSection","post","getProfClass","email","filter","prof","getProfClasses","sections","getAllProfClasses","deleteClass","delete","params","request2","response2","status","addStudent","put","getStudents","studentEnrolled","getStudentClass","clas","includes","getClassAndExams","exams","exam","users","signup","newUser","signin","user","getUser","firstName","middleName","lastName","idNumber","contactNumber","isTeacher","newExam","getProfExams","getUpcomingExams","classcode","isAfter","parseISO","deadline","submittedExam","some","submission","getItem","getAllClasses","getStudentExams","studentClasses","classCodes","allExams","addExamSubmission","examUUID","examSubmission","uuid","getNotSubmittedExams","getSubmittedExams","deleteExam","card","cardDetails","cardMedia","SectionsCard","profName","setProfName","setExams","useEffect","userServices","then","catch","err","console","log","examServices","md","Card","CardActionArea","CardContent","paragraph","Skeleton","length","Hidden","xsDown","CardMedia","image","DashboardStudent","openJoinClass","setOpenJoinClass","snackbarSeverity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","openSnackbar","setOpenSnackbar","setStudentClasses","handleSnackbarClose","reason","getStudentClasses","classServices","newStudentClasses","minHeight","Snackbar","autoHideDuration","severity","Fab","aria-label","size","top","right","students","returnedData","heroButtons","cardGrid","slice","reverse","i","StudentClassCard","pt","role","CircularProgress","useStylesTeacherExam","background","cardContent","StudentExamsCard","totalScore","score","setSection","alreadySubmitted","rightSched","now","sched","isBefore","questions","examName","examDesc","format","CardActions","disabled","pathname","path","examProps","StudentExams","AccountStudent","StudentExamHistory","getTotalScore","reduce","acc","cur","points","parseInt","getScore","question","answer","answers","submittedBy","answerUUIDs","Object","keys","ii","toUpperCase","HomeAppBar","handleDrawerOpen","edge","ControlledRadioButton","choices","RadioGroup","target","choice","FormControlLabel","Radio","RenderExamQuestions","handleDialogOpen","examQuestions","index","push","Paper","noValidate","formData","qstn","lg","StudentExamPage","props","examAnswers","setExamAnswers","setExamUUID","differenceInSeconds","addSeconds","counter","setCounter","backdropOpen","setBackdropOpen","openCloseDialog","setOpenCloseDialog","backdrop","setTimeout","timer","setInterval","clearInterval","Backdrop","aria-describedby","seconds","helperDate","formattedTime","submissionDate","Student","useRouteMatch","StudentAppBar","mdUp","exact","Dashboard","Account","avatar","secondary","main","submit","backdropUseStyles","SignIn","reset","showPassword","setShowPassword","backdropClasses","Avatar","success","password","setItem","token","endAdornment","InputAdornment","onMouseDown","clientId","buttonText","render","renderProps","onSuccess","res","profileObj","onFailure","cookiePolicy","SignUp","setIsTeacher","showRePassword","setReShowPassword","history","useHistory","repassword","onCheckChange","Checkbox","checked","ExamsCard","handleDialogOpenStats","handleDelete","handleViewExam","totalExaminees","Title","children","ExamScoresTable","setUsers","studentEmail","dateSubmitted","Table","TableHead","TableRow","TableCell","TableBody","row","fullName","forEach","getName","ExamScoresDialog","textAlign","ExamQuestionsDialog","displayQuestion","ExamStatsDialog","left","strokeDasharray","dataKey","entry","fill","ExamTeacher","openExamDetailsDialog","setOpenExamDetailsDialog","setExam","openConfirmDialog","setOpenConfirmDialog","openExamQuestions","setOpenExamQuestions","openExamStats","setOpenExamStats","handleConfirmDialogOpen","handleViewExamOpen","getExams","marghandleDialogOpeninBottom","handleStudentsOpen","handleRecordsOpen","classCapacity","shortid","require","AddSectionDialog","generate","EnrolledStudentsTable","EnrolledStudentsDialog","enrolledStudents","enrolledStudent","direction","SectionRecords","usersLength","columns","column","renderStudentsEnrolled","StudentsTeacher","openAddSection","setOpenAddSection","setSections","setClassCode","setEnrolledStudents","openEnrolledStudentsDialog","setOpenEnrolledStudentsDialog","openRecords","setOpenRecords","handleClickOpen","handleStudentsDialogOpen","sectionServices","useStylesForgotPassword","layout","stepper","buttons","ControlledSelect","menu","InputLabel","Select","MenuItem","ControlledDateTimePicker","selectedDate","handleDateChange","maxDate","disableFuture","openTo","utils","DateFnsUtils","DateTimePicker","inputVariant","showTodayButton","disablePast","ForgotPasswordForm","submitExamDetails","handleNext","DateAdd","days","selectedDateSched","setSelectedDateSched","hours","minutes","selectedDateDeadline","setSelectedDateDeadline","Section","formatISO","uuidv4","months","IsAfter","DateSub","QuestionAdderDialog","ExamPool","noitems","questionItem","ExamQuestionsForm","submitExamQuestions","setQuestions","openQuestionAdder","setOpenQuestionAdder","newQuestion","totalItems","transformedQuestions","formDataClone","dummyObj","dummyIndex","dummyI","outerloop","hasOwnProperty","VerifyQuestions","submitQuestions","steps","ForgotPassword","examDetails","setExamDetails","setExamQuestions","activeStep","setActiveStep","openBackdrop","setOpenBackdrop","handleSubmitExamDetails","examDetail","handleSubmitExamQuestions","examQuestion","classess","handleSubmitQuestions","isChecked","Stepper","Step","StepLabel","step","ExamDetailsForm","VerifyExamQuestions","Error","getStepContent","TeacherBottomNav","AverageScoreChart","chartData","useTheme","examname","avgscore","stroke","text","angle","textAnchor","dot","depositContext","flex","TopScorer","highestScore","subject","seeMore","RankingBoard","tableData","tbl","rank","avgScore","ttlScore","DashboardCharts","desc","highestScorer","topScore","fixedHeightPaper","DashboardTeacher","Data","setData","getIdNumber","getTableData","classs","scores","newData","curVal","toFixed","sort","b","newSampleData","examsAndAvg","examTopScore","pop","TeacherHome","CreateExam","autoComplete","PaymentForm","placeholder","helperText","EmailVerificationForm","Error404","Router","loggedIn","redirectURL","App","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1db8f234.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <RouterLink\n        to=\"/\"\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        BPSU Online Examination System\n      </RouterLink>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  CssBaseline,\n  Grid,\n  Toolbar,\n  Typography,\n  Link,\n  makeStyles,\n  Container,\n  Box,\n} from \"@material-ui/core\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\",\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst footers = [\n  {\n    title: \"Developers  \",\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\n  },\n  {\n    title: \"Features\",\n    description: [\n      \"Cool stuff\",\n      \"Random feature\",\n      \"Team feature\",\n      \"Developer stuff\",\n      \"Another one\",\n    ],\n  },\n  {\n    title: \"Resources\",\n    description: [\n      \"Resource\",\n      \"Resource name\",\n      \"Another resource\",\n      \"Final resource\",\n    ],\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"],\n  },\n];\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}>\n            BPSU Online Examination System\n          </Typography>\n          <Button color=\"primary\" variant=\"outlined\" className={classes.link}>\n            <BrowserLink\n              to=\"signin\"\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              Login\n            </BrowserLink>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      {/* Hero unit */}\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          New Normal of Taking Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Our goal with this system is to make the examination experience easier\n          for both the teacher and students in this tough times.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n\n      {/* Footer */}\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map(footer => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map(item => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStylesTeacherHome = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default useStylesTeacherHome;\n","import React from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst ListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Student Management</ListSubheader>\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link>\n          <Link to={`${match.url}/exams`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/students`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Classes\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default ListItems;\n","import React from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst StudentListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Menu</ListSubheader>\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <Link to={`${match.url}/exams`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/examhistory`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HistoryIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"History\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default StudentListItems;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\nimport { Drawer, IconButton } from \"@material-ui/core\";\nimport ListItems from \"../components/ListItems\";\nimport StudentListItems from \"../components/StudentListItems\";\n\nconst HomeDrawer = ({ open, handleDrawerClose, match, listItems }) => {\n  const classes = useStylesTeacherHome();\n  return (\n    <Drawer\n      variant=\"temporary\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n      }}\n      open={open}>\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      {listItems === \"Student\" ? (\n        <StudentListItems match={match} />\n      ) : (\n        <ListItems match={match} />\n      )}\n    </Drawer>\n  );\n};\n\nexport default HomeDrawer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function StudentBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      <BottomNavigationAction\n        label=\"Home\"\n        icon={<HomeIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}/exams`}\n      />\n      <BottomNavigationAction\n        label=\"History\"\n        icon={<HistoryIcon />}\n        component={Link}\n        to={`${match.url}/examhistory`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { FormControl, TextField, FormHelperText } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledTextField = ({\n  name,\n  error,\n  label,\n  control,\n  rules,\n  variant = \"outlined\",\n  required = false,\n  type = \"text\",\n  InputProps = null,\n  multiline = false,\n  rows = null,\n  autoFocus = null,\n}) => {\n  return (\n    <FormControl style={{ minWidth: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <TextField\n            autoFocus={autoFocus}\n            type={type}\n            required={required}\n            name={name}\n            label={label}\n            fullWidth\n            variant={variant}\n            error={Boolean(error[name])}\n            InputProps={InputProps}\n            multiline={multiline}\n            rows={rows}\n          />\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={required ? { required: `${label} is required` } : {}}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledTextField;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst JoinClassDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    handleAdd(form.classCode);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Join a Class</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To enroll in a class, ask your professor for a classcode\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Class Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                autoFocus={true}\n                name=\"classCode\"\n                label=\"Class Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Join\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default JoinClassDialog;\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getAllClass = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClass = async courseCode => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  for (const section of response.data) {\n    if (section.classCode === courseCode) return section;\n  }\n};\n\nconst create = async newSection => {\n  const request = axios.post(`${baseURL}/api/class`, newSection);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfClass = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.filter(section => section.prof === email);\n};\n\nconst getProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getAllProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst deleteClass = async classCode => {\n  const request = axios.delete(`${baseURL}/api/class`, {\n    params: { classCode: classCode },\n  });\n  const response = await request;\n\n  const request2 = axios.delete(`${baseURL}/api/exam`, {\n    params: { classCode: classCode },\n  });\n  const response2 = await request2;\n\n  return `Class Deletion:${response.status} Exam Deletion:${response2.status}`;\n};\n\nconst addStudent = async (classCode, email) => {\n  const request = axios.put(`${baseURL}/api/class`, {\n    classCode: classCode,\n    email: email,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getStudents = async classCode => {\n  const classes = await getClass(classCode);\n  return classes.studentEnrolled;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAll();\n\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nconst getClassAndExams = async email => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  const exams = response.data.filter(exam => exam.prof === email);\n\n  const request2 = axios.get(`${baseURL}/api/user`);\n  const response2 = await request2;\n  const users = response2.data;\n\n  const classes = await getProfClass(email);\n\n  return {\n    classes: classes,\n    exams: exams,\n    users: users,\n  };\n};\n\nexport default {\n  create,\n  getAll,\n  getAllClass,\n  getClasses,\n  getClass,\n  getProfClass,\n  getProfClasses,\n  getAllProfClasses,\n  deleteClass,\n  addStudent,\n  getStudents,\n  getStudentClass,\n  getClassAndExams,\n};\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst signup = async newUser => {\n  const request = axios.post(`${baseURL}/api/signup`, newUser);\n  const response = await request;\n  return response.data;\n};\n\nconst signin = async user => {\n  const request = axios.post(`${baseURL}/api/signin`, user);\n  const response = await request;\n  return response.data;\n};\n\nconst getUser = async email => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  const data = response.data.filter(user => user.email === email);\n  return {\n    firstName: data[0].firstName,\n    middleName: data[0].middleName,\n    lastName: data[0].lastName,\n    idNumber: data[0].idNumber,\n    contactNumber: data[0].contactNumber,\n    email: data[0].email,\n    isTeacher: data[0].isTeacher,\n  };\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  return response.data;\n};\n\nexport default { signup, signin, getUser, getAll };\n","import axios from \"axios\";\nimport isAfter from \"date-fns/isAfter\";\nimport { parseISO } from \"date-fns\";\n\nconst baseURL = \"\";\n\nconst create = async newExam => {\n  const request = axios.post(`${baseURL}/api/exam`, newExam);\n  const response = await request;\n  return response.data;\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfExams = async email => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(exam => exam.prof === email);\n};\n\nconst getUpcomingExams = async classcode => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(\n    exam =>\n      exam.classCode === classcode &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getAllClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAllClasses();\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nconst getStudentExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date())\n  );\n};\n\nconst addExamSubmission = async (examUUID, examSubmission) => {\n  const request = axios.put(`${baseURL}/api/exam`, {\n    uuid: examUUID,\n    examSubmission: examSubmission,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getNotSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst deleteExam = async examUUID => {\n  const request = axios.delete(`${baseURL}/api/examm`, {\n    params: { uuid: examUUID },\n  });\n  const response = await request;\n\n  return response.status;\n};\n\nexport default {\n  create,\n  getAll,\n  getProfExams,\n  getUpcomingExams,\n  getStudentExams,\n  addExamSubmission,\n  getNotSubmittedExams,\n  getSubmittedExams,\n  deleteExam,\n};\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../services/users\";\nimport examServices from \"../services/exams\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({ section }) => {\n  const classes = useStyles();\n  const [profName, setProfName] = useState();\n  const [exams, setExams] = useState();\n\n  useEffect(() => {\n    // Get Prof Name\n    userServices\n      .getUser(section.prof)\n      .then(user => {\n        setProfName(`${user.firstName} ${user.middleName} ${user.lastName}`);\n      })\n      .catch(err => console.log(err.message));\n\n    // Get Upcoming Exams\n    examServices\n      .getUpcomingExams(section.classCode)\n      .then(exams => {\n        setExams(exams);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, [section]);\n\n  const renderUpcomingExams = examsLength => {\n    if (examsLength) return `Upcoming Exams: ${exams.length}`;\n    else return \"No Upcoming Exams\";\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {`${section.courseCode} (${section.section})`}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph>\n                {section.courseDesc}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {profName ? `Professor: ${profName}` : <Skeleton />}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {exams ? renderUpcomingExams(exams.length) : <Skeleton />}\n              </Typography>\n            </CardContent>\n          </div>\n        </CardActionArea>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport JoinClassDialog from \"../components/JoinClassDialog\";\nimport classServices from \"../services/classes\";\nimport StudentClassCard from \"../components/StudentClassCard\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Divider,\n  Fab,\n  Snackbar,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst DashboardStudent = () => {\n  const [openJoinClass, setOpenJoinClass] = useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [studentClasses, setStudentClasses] = useState();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const getStudentClasses = () => {\n    classServices\n      .getStudentClass(localStorage.getItem(\"email\"))\n      .then(newStudentClasses => {\n        setStudentClasses(newStudentClasses);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  };\n\n  const handleAdd = classCode => {\n    classServices.getStudents(classCode).then(students => {\n      if (students.includes(localStorage.getItem(\"email\"))) {\n        setSnackbarSeverity(\"error\");\n        setSnackbarMessage(\"Already enrolled in that class\");\n        setOpenSnackbar(!openSnackbar);\n      } else {\n        classServices\n          .addStudent(classCode, localStorage.getItem(\"email\"))\n          .then(returnedData => {\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Class enrolled succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            getStudentClasses();\n          })\n          .catch(err => {\n            console.log(\"Error :>> \", err.message);\n          });\n      }\n    });\n  };\n\n  const renderDashboard = studentsClassesLength => {\n    if (studentsClassesLength) {\n      return studentClasses\n        .slice()\n        .reverse()\n        .map((section, i) => {\n          return <StudentClassCard key={i} section={section} />;\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            Heeey, why haven't you joined a class yet?{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😟\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Join a class using the join class button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentClasses();\n  }, []);\n\n  useEffect(() => {}, [studentClasses]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenJoinClass(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Join Class Dialog */}\n      <JoinClassDialog\n        open={openJoinClass}\n        setOpen={setOpenJoinClass}\n        handleAdd={handleAdd}\n      />\n\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Home\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee your statistics and enrolled classes here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenJoinClass(true);\n                }}>\n                Join New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {studentClasses ? (\n            renderDashboard(studentClasses.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default DashboardStudent;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesTeacherExam = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default useStylesTeacherExam;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../services/classes\";\nimport { format, parseISO, isAfter, isBefore } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentExamsCard = ({ exam, match, totalScore, score }) => {\n  const [section, setSection] = useState();\n\n  const alreadySubmitted = () => {\n    return exam.submittedExam.some(\n      submission => submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n    );\n  };\n\n  const rightSched = () => {\n    return (\n      isAfter(Date.now(), parseISO(exam.sched)) &&\n      isBefore(Date.now(), parseISO(exam.deadline))\n    );\n  };\n\n  const renderExamStatus = () => {\n    if (alreadySubmitted()) {\n      return `Exam has already been submitted`;\n    } else if (!rightSched()) {\n      return \"Exam will be available on scheduled date\";\n    } else {\n      return \"Take Exam\";\n    }\n  };\n\n  const renderButtonText = () => {\n    if (alreadySubmitted() || !rightSched()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam.classCode, exam.questions]);\n\n  useEffect(() => {}, [section]);\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Desc */}\n          <Typography gutterBottom align=\"center\">\n            {section ? `${section.courseDesc}` : <Skeleton />}\n          </Typography>\n\n          {/* Course Code & Section */}\n          <Typography\n            variant=\"body2\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-0.5rem\" }}>\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Description */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\" paragraph>\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n\n          <Divider variant=\"middle\" style={{ marginTop: \"1rem\" }} />\n\n          {/* Exam Score  */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            color=\"secondary\"\n            style={{ marginTop: \"1rem\", marginBottom: \"-1rem\" }}>\n            {alreadySubmitted() ? `Score: ${score} / ${totalScore}` : null}\n          </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\", marginBottom: \"1rem\" }}>\n          <Button size=\"small\" color=\"primary\" disabled={renderButtonText()}>\n            <Link\n              to={{\n                pathname: `${match.path}/studentexampage`,\n                examProps: { exam: exam },\n              }}\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              {renderExamStatus()}\n            </Link>\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default StudentExamsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExams = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getNotSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard key={exam.uuid} exam={exam} match={match} />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            Wooohoooooo{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              🙌🎉🍻\n            </span>\n            ! You have no upcoming exams{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😂\n            </span>\n            !\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Previous exam records can be reviewed instead{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              🤓\n            </span>\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee incoming exams here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExams;\n","import React from \"react\";\nimport { Container, Typography, Divider } from \"@material-ui/core\";\n\nconst AccountStudent = () => {\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Account\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your account settings here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n    </div>\n  );\n};\n\nexport default AccountStudent;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExamHistory = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = exam => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === localStorage.getItem(\"email\")\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (answers[answerUUIDs[ii]]) {\n            if (questions[i].type === \"essayType\") {\n              points += parseInt(questions[i].points);\n            } else if (\n              questions[i].answer.toUpperCase() ===\n              answers[answerUUIDs[ii]].toUpperCase()\n            ) {\n              points += parseInt(questions[i].points);\n            }\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard\n            key={exam.uuid}\n            exam={exam}\n            match={match}\n            totalScore={getTotalScore(exam)}\n            score={getScore(exam)}\n          />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            It's empty out here{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              👻\n            </span>\n            , you have no exam records yet{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😴\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Answered exams will be sent here\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exam History\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Review previous exam records\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExamHistory;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Student ${localStorage.getItem(\"lastName\")}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormHelperText,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledRadioButton = ({\n  error,\n  control,\n  name,\n  label,\n  required = false,\n  choices,\n}) => {\n  const [value, setValue] = React.useState(\"a\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl error={Boolean(error[name])} component=\"fieldset\">\n      {/* <FormLabel id={`${name}Label`}>{label}</FormLabel> */}\n      <Controller\n        as={\n          <RadioGroup required={required} value={value} onChange={handleChange}>\n            {choices.map((choice, i) => {\n              return (\n                <FormControlLabel\n                  key={i}\n                  value={choice.value}\n                  label={choice.label}\n                  control={<Radio />}\n                />\n              );\n            })}\n          </RadioGroup>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledRadioButton;\n","import React from \"react\";\nimport ControlledTextField from \"./ControlledTextField\";\nimport ControlledRadioButton from \"./ControlledRadioButton\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport { useForm } from \"react-hook-form\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\n\nconst RenderExamQuestions = ({ exam, handleDialogOpen }) => {\n  const { handleSubmit, errors, control } = useForm();\n  let examQuestions = [];\n\n  // Form Submit Handler\n  const submitHandle = formData => {\n    formData.submittedBy = localStorage.getItem(\"email\");\n    handleDialogOpen(formData, exam.uuid);\n  };\n\n  for (let index = 0; index < exam.questions.length; index++) {\n    // Multiple Choice\n    if (exam.questions[index].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <div>\n            <Typography variant=\"body1\" display=\"inline\" gutterBottom>\n              {`${index + 1}.) ${exam.questions[index].question} `}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              {`(${exam.questions[index].points} ${\n                exam.questions[index].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </div>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={exam.questions[index].choices}\n          />\n        </Paper>\n      );\n\n      // True or False\n    } else if (exam.questions[index].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <div>\n            <Typography variant=\"body1\" display=\"inline\" gutterBottom>\n              {`${index + 1}.) ${exam.questions[index].question} `}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              {`(${exam.questions[index].points} ${\n                exam.questions[index].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </div>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={[\n              { value: \"t\", label: \"True\" },\n              { value: \"f\", label: \"False\" },\n            ]}\n          />\n        </Paper>\n      );\n\n      // Identification\n    } else if (exam.questions[index].type === \"identification\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <div>\n            <Typography variant=\"body1\" display=\"inline\" gutterBottom>\n              {`${index + 1}.) ${exam.questions[index].question} `}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              {`(${exam.questions[index].points} ${\n                exam.questions[index].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </div>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n\n      // Essay Type\n    } else if (exam.questions[index].type === \"essayType\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <div>\n            <Typography variant=\"body1\" display=\"inline\" gutterBottom>\n              {`${index + 1}.) ${exam.questions[index].question} `}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              {`(${exam.questions[index].points} ${\n                exam.questions[index].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </div>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            multiline\n            rows={8}\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n    }\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit(submitHandle)}>\n      <Grid container spacing={2} justify=\"center\">\n        {examQuestions.map((qstn, i) => (\n          <Grid key={i} item xs={12} md={10} lg={8}>\n            {qstn}\n          </Grid>\n        ))}\n      </Grid>\n\n      <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit Exam\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </form>\n  );\n};\n\nexport default RenderExamQuestions;\n","import React, { useState, useEffect } from \"react\";\nimport RenderExamQuestions from \"./RenderExamQuestions\";\nimport examServices from \"../services/exams\";\nimport { differenceInSeconds, parseISO, addSeconds, format } from \"date-fns\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  CircularProgress,\n  Backdrop,\n  makeStyles,\n  DialogContent,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nconst StudentExamPage = props => {\n  const exam = props.location.examProps.exam;\n  const [open, setOpen] = useState(false);\n  const [examAnswers, setExamAnswers] = useState();\n  const [examUUID, setExamUUID] = useState();\n  const [counter, setCounter] = useState(\n    differenceInSeconds(parseISO(exam.deadline), addSeconds(new Date(), 1))\n  );\n  const [backdropOpen, setBackdropOpen] = useState(false);\n  const [openCloseDialog, setOpenCloseDialog] = useState(false);\n\n  const useStyles = makeStyles(theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const formattedTime = seconds => {\n    var helperDate = addSeconds(new Date(0), seconds);\n    return format(helperDate, \"mm:ss\");\n  };\n\n  const handleClickOpen = (formData, examUUID) => {\n    formData.submissionDate = new Date();\n    setExamAnswers(formData);\n    setExamUUID(examUUID);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    setBackdropOpen(true);\n\n    examServices\n      .addExamSubmission(examUUID, examAnswers)\n      .then(returnedData => {\n        setBackdropOpen(false);\n        window.location.replace(\"/\");\n      })\n      .catch(err => console.log(err.message));\n    handleClose();\n  };\n\n  useEffect(() => {\n    if (counter === 0) {\n      setOpenCloseDialog(true);\n      setTimeout(() => {\n        setOpenCloseDialog(false);\n        window.location.replace(\"/\");\n      }, 5000);\n    }\n\n    const timer =\n      counter > 0 &&\n      setInterval(() => {\n        setCounter(counter - 1);\n      }, 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  return (\n    <div style={{ minHeight: \"100vh\", marginBottom: \"3rem\" }}>\n      {/* Backdrop */}\n      <Backdrop className={classes.backdrop} open={backdropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {/* Exam is closed dialog */}\n      <Dialog\n        open={openCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Exam is closed\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Your exam is not submitted because you have not submitted before\n            deadline.\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n\n      {/* Yes/No Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit Exam?\"}</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Container maxWidth=\"sm\">\n        {/* Exam Title */}\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          {`${exam.examName}`}\n        </Typography>\n      </Container>\n\n      {/* Exam Desc */}\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n        paragraph>\n        {`${exam.examDesc}`}\n      </Typography>\n\n      {/* Exam Timer */}\n      <Typography\n        variant=\"body1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\">\n        {`Exam will close in: ${formattedTime(counter)}`}\n      </Typography>\n\n      {/* Divider */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Render Exam Questions */}\n      <RenderExamQuestions\n        exam={exam}\n        style={{ marginBottom: \"3rem\" }}\n        handleDialogOpen={handleClickOpen}\n      />\n    </div>\n  );\n};\n\nexport default StudentExamPage;\n","import React from \"react\";\nimport { CssBaseline, Container, Hidden } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport StudentBottomNav from \"../components/StudentBottomNav\";\nimport Dashboard from \"../components/DashboardStudent\";\nimport Exams from \"../components/StudentExams\";\nimport Account from \"../components/AccountStudent\";\nimport History from \"../components/StudentExamHistory\";\nimport StudentAppBar from \"../components/StudentAppBar\";\nimport StudentExamPage from \"../components/StudentExamPage\";\n\nconst Student = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <StudentAppBar open={open} handleDrawerOpen={handleDrawerOpen} />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n        listItems=\"Student\"\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Hidden mdUp>\n          <StudentBottomNav match={match} />\n        </Hidden>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            <Route path={`${match.path}`} exact component={Dashboard} />\n            <Route path={`${match.path}/exams`} exact>\n              <Exams match={match} />\n            </Route>\n            <Route path={`${match.path}/examhistory`} exact>\n              <History match={match} />\n            </Route>\n            <Route path={`${match.path}/account`} exact component={Account} />\n            <Route\n              path={`${match.path}/studentexampage`}\n              exact\n              component={StudentExamPage}\n            />\n          </Switch>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Student;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport users from \"../services/users\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  makeStyles,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst backdropUseStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst SignIn = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const backdropClasses = backdropUseStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    setOpen(!open);\n    users\n      .signin(formData)\n      .then(returnedData => {\n        if (returnedData.success) {\n          reset({ email: \"\", password: \"\" });\n          localStorage.setItem(\"jwtCookie\", returnedData.token);\n          localStorage.setItem(\"email\", returnedData.email);\n          localStorage.setItem(\"isTeacher\", returnedData.isTeacher);\n          localStorage.setItem(\"lastName\", returnedData.lastName);\n          window.location.replace(\"/\");\n        } else {\n          handleClose();\n          reset({ email: \"\", password: \"\" });\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"Invalid Credentials\");\n          setOpenSnackbar(!openSnackbar);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  };\n\n  const onSuccess = res => {\n    console.log(`[Login Success] Current User: ${res.profileObj}`);\n  };\n\n  const onFailure = res => {\n    console.log(`[Login Failed] ${res}`);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <Backdrop\n        className={backdropClasses.backdrop}\n        open={open}\n        onClick={handleClose}>\n        <CircularProgress color=\"secondary\" />\n      </Backdrop>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign In\n          </Button>\n\n          {/* Google Sign-in */}\n          <GoogleLogin\n            clientId=\"551384499965-sq5c2de5hccm99ovllhr3ecob6d39o2h.apps.googleusercontent.com\"\n            buttonText=\"Sign in with Google\"\n            render={renderProps => (\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                style={{ marginTop: \"0\" }}>\n                Sign in with Google\n              </Button>\n            )}\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n\n          <Grid container>\n            {/* Forgot Password */}\n            <Grid item xs>\n              <BrowserLink\n                to=\"forgotpassword\"\n                style={{ textDecoration: \"inherit\" }}>\n                Forgot password?\n              </BrowserLink>\n            </Grid>\n\n            {/* Sign up */}\n            <Grid item>\n              <BrowserLink to=\"/signup\" style={{ textDecoration: \"inherit\" }}>\n                Don't have an account? Sign Up\n              </BrowserLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport users from \"../services/users\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  Container,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [isTeacher, setIsTeacher] = useState(false);\n  const handleCheckboxChange = e => {\n    setIsTeacher(!isTeacher);\n    return isTeacher ? false : true;\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [showRePassword, setReShowPassword] = useState(false);\n  const handleClickReShowPassword = () => setReShowPassword(!showRePassword);\n  const handleMouseDownRePassword = () => setReShowPassword(!showRePassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  let history = useHistory();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    if (formData.password !== formData.repassword) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Password does not match\");\n      setOpenSnackbar(!openSnackbar);\n    } else {\n      users\n        .signup(formData)\n        .then(returnedData => {\n          if (returnedData === \"email already in use\") {\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(\"Email is already in use\");\n            setOpenSnackbar(!openSnackbar);\n          } else {\n            reset();\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Signed up succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            setTimeout(() => {\n              history.push(\"signin\");\n            }, 1000);\n          }\n        })\n        .catch(error => {\n          console.log(\"Error: \", error);\n        });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            {/* First Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"firstName\"\n                label=\"First Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Middle Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"middleName\"\n                label=\"Middle Name\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Last Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"lastName\"\n                label=\"Last Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* ID Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"idNumber\"\n                label=\"ID Number\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Email Address */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Contact Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"contactNumber\"\n                label=\"Contact Number\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n\n            {/* Re:Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"repassword\"\n                label=\"Retype Password\"\n                required={true}\n                type={showRePassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickReShowPassword}\n                        onMouseDown={handleMouseDownRePassword}>\n                        {showRePassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Controller\n                    name=\"isTeacher\"\n                    defaultValue={false}\n                    render={({ onChange: onCheckChange }) => {\n                      return (\n                        <Checkbox\n                          checked={isTeacher}\n                          onChange={() => onCheckChange(handleCheckboxChange())}\n                        />\n                      );\n                    }}\n                    control={control}\n                  />\n                }\n                key={\"isTeacher\"}\n                label={\"Sign up as teacher?\"}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign in\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <RouterLink to=\"/signin\" style={{ textDecoration: \"inherit\" }}>\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Professor ${name}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../services/classes\";\nimport { format, parseISO } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst ExamsCard = ({\n  exam,\n  handleDialogOpenStats,\n  handleDialogOpen,\n  handleDelete,\n  handleViewExam,\n}) => {\n  const [section, setSection] = useState();\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam]);\n\n  const renderExamTotalExaminees = (totalExaminees, studentEnrolled) => {\n    if (+totalExaminees === 0) {\n      return \"No one has taken this exam yet\";\n    } else if (totalExaminees === studentEnrolled) {\n      return \"Everyone has taken this exam\";\n    } else {\n      return `${totalExaminees}/${studentEnrolled} has taken this exam`;\n    }\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card} elevation={3}>\n        <CardContent className={classes.cardContent}>\n          {/* Exam Name */}\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Code and Section */}\n          <Typography gutterBottom align=\"center\">\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Desc */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\">\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n          <div>\n            <Divider\n              variant=\"middle\"\n              style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n            />\n            <Typography gutterBottom color=\"secondary\" align=\"center\">\n              {section ? (\n                renderExamTotalExaminees(\n                  exam.submittedExam.length,\n                  section.studentEnrolled.length\n                )\n              ) : (\n                <Skeleton />\n              )}\n            </Typography>\n          </div>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => handleDialogOpenStats(exam)}>\n            Stats\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => handleDialogOpen(exam)}>\n            Submissions\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => handleViewExam(exam)}>\n            View\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              handleDelete(exam.uuid);\n            }}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ExamsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Title = props => {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport userServices from \"../services/users\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { format, parseISO } from \"date-fns\";\n\nconst ExamScoresTable = ({ title, exam }) => {\n  const [users, setUsers] = useState();\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = (exam, studentEmail) => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === studentEmail\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (answers[answerUUIDs[ii]]) {\n            if (questions[i].type === \"essayType\") {\n              points += parseInt(questions[i].points);\n            } else if (\n              questions[i].answer.toUpperCase() ===\n              answers[answerUUIDs[ii]].toUpperCase()\n            ) {\n              points += parseInt(questions[i].points);\n            }\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const getName = email => {\n    let fullName = \"\";\n\n    users.forEach(user => {\n      if (user.email === email) {\n        fullName = `${user.lastName}, ${user.firstName} ${user.middleName}`;\n      }\n    });\n\n    return fullName;\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => setUsers(users))\n      .catch(err => console.log(err.message));\n  }, []);\n\n  const rows = exam.submittedExam.map((submission, i) => {\n    const id = i;\n    const name = submission.submittedBy;\n    const score = getScore(exam, submission.submittedBy);\n    const totalScore = getTotalScore(exam);\n    const dateSubmitted = format(\n      parseISO(submission.submissionDate),\n      \"hh:mm:ss aaa MMMM dd, yyyy\"\n    );\n    return { id, name, score, totalScore, dateSubmitted };\n  });\n\n  return (\n    <div>\n      <Title>{title}</Title>\n      <Table size=\"medium\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Score</TableCell>\n            <TableCell>Date Submitted</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{users ? getName(row.name) : <Skeleton />}</TableCell>\n              <TableCell>{`${row.score} / ${row.totalScore}`}</TableCell>\n              <TableCell>{`${row.dateSubmitted}`}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ExamScoresTable;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport ExamScoresTable from \"./ExamScoresTable\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\n\nconst ExamScoresDialog = ({ open, setOpen, exam }) => {\n  const classes = useStylesTeacherHome();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderStudentScores = examSubmissionLength => {\n    if (examSubmissionLength) {\n      return (\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <ExamScoresTable title=\"Submissions\" exam={exam} />\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Typography>No submissions yet</Typography>\n        </Grid>\n      );\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"md\"\n      fullWidth={true}>\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\n        {exam ? exam.examName : <Skeleton />}\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {exam ? renderStudentScores(exam.submittedExam.length) : <Skeleton />}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Back\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExamScoresDialog;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\n\nconst ExamQuestionsDialog = ({ open, setOpen, exam }) => {\n  const classes = useStylesTeacherHome();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderQuestions = questionsLength => {\n    if (questionsLength) {\n      return (\n        <Grid item xs={12}>\n          {exam.questions.map((question, i) => {\n            let displayQuestion = \"\";\n\n            switch (question.type) {\n              case \"multipleChoice\":\n                displayQuestion = (\n                  <>\n                    {question.choices.map((choice, i) => {\n                      if (choice.value === question.answer) {\n                        return (\n                          <Typography variant=\"body2\" color=\"secondary\" key={i}>\n                            {`${choice.value.toUpperCase()}.) ${choice.label}`}\n                          </Typography>\n                        );\n                      } else {\n                        return (\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            key={i}>\n                            {`${choice.value.toUpperCase()}.) ${choice.label}`}\n                          </Typography>\n                        );\n                      }\n                    })}\n                  </>\n                );\n                break;\n\n              case \"trueOrFalse\":\n                displayQuestion = (\n                  <Typography variant=\"body2\" color=\"secondary\">\n                    Answer: {question.answer === \"f\" ? \"False\" : \"True\"}\n                  </Typography>\n                );\n                break;\n\n              case \"identification\":\n                displayQuestion = (\n                  <Typography variant=\"body2\" color=\"secondary\">\n                    {`Answer: ${question.answer}`}\n                  </Typography>\n                );\n                break;\n\n              case \"essayType\":\n                displayQuestion = (\n                  <Typography variant=\"body2\" color=\"secondary\">\n                    Essay Type\n                  </Typography>\n                );\n                break;\n              default:\n                break;\n            }\n\n            return (\n              <Paper\n                key={i}\n                className={classes.paper}\n                style={{ marginBottom: \"0.5rem\" }}>\n                <div>\n                  <Typography variant=\"body1\" display=\"inline\">{`${i + 1}.) ${\n                    question.question\n                  } `}</Typography>\n                  <Typography\n                    variant=\"caption\"\n                    color=\"textSecondary\">{`${question.points} points`}</Typography>\n                </div>\n                {displayQuestion}\n              </Paper>\n            );\n          })}\n        </Grid>\n      );\n    } else {\n      return <Typography>No questions</Typography>;\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"sm\"\n      fullWidth={true}>\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\n        {exam ? `${exam.examName} Questions` : <Skeleton />}\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {exam ? renderQuestions(exam.questions.length) : <Skeleton />}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Back\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExamQuestionsDialog;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Cell,\n} from \"recharts\";\n\nconst ExamStatsDialog = ({ open, setOpen, exam }) => {\n  const classes = useStylesTeacherHome();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderStatistics = questionsLength => {\n    if (questionsLength) {\n      return (\n        <Grid item xs={12}>\n          {exam.questions.map((question, i) => {\n            let displayQuestion = \"\";\n            let data = [];\n\n            switch (question.type) {\n              case \"multipleChoice\":\n                data = [\n                  {\n                    name: \"A\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"A\"\n                    ).length,\n                  },\n                  {\n                    name: \"B\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"B\"\n                    ).length,\n                  },\n                  {\n                    name: \"C\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"C\"\n                    ).length,\n                  },\n                  {\n                    name: \"D\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"D\"\n                    ).length,\n                  },\n                ];\n\n                displayQuestion = (\n                  <Grid container spacing={2} style={{ marginTop: \"0.5rem\" }}>\n                    {/* Choices */}\n                    <Grid item>\n                      {question.choices.map((choice, i) => {\n                        if (choice.value === question.answer) {\n                          return (\n                            <Typography\n                              variant=\"body2\"\n                              color=\"secondary\"\n                              key={i}>\n                              {`${choice.value.toUpperCase()}.) ${\n                                choice.label\n                              }`}\n                            </Typography>\n                          );\n                        } else {\n                          return (\n                            <Typography\n                              variant=\"body2\"\n                              color=\"textSecondary\"\n                              key={i}>\n                              {`${choice.value.toUpperCase()}.) ${\n                                choice.label\n                              }`}\n                            </Typography>\n                          );\n                        }\n                      })}\n                    </Grid>\n\n                    {/* Bar Chart */}\n                    <Grid item>\n                      <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                          top: 5,\n                          right: 30,\n                          left: 20,\n                          bottom: 5,\n                        }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <YAxis />\n                        <XAxis dataKey=\"name\" />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"answer\">\n                          {data.map((entry, index) => (\n                            <Cell\n                              key={`cell-${index}`}\n                              fill={\n                                entry.name.toUpperCase() ===\n                                question.answer.toUpperCase()\n                                  ? \"#82ca9d\"\n                                  : \"#db4c4c\"\n                              }\n                            />\n                          ))}\n                        </Bar>\n                      </BarChart>\n                    </Grid>\n                  </Grid>\n                );\n                break;\n\n              case \"trueOrFalse\":\n                data = [\n                  {\n                    name: \"True\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"T\"\n                    ).length,\n                  },\n                  {\n                    name: \"False\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() === \"T\"\n                    ).length,\n                  },\n                ];\n\n                displayQuestion = (\n                  <Grid container spacing={2} style={{ marginTop: \"0.5rem\" }}>\n                    {/* Answer */}\n                    <Grid item>\n                      <Typography variant=\"body2\" color=\"secondary\">\n                        Answer: {question.answer === \"f\" ? \"False\" : \"True\"}\n                      </Typography>\n                    </Grid>\n\n                    {/* Bar Chart */}\n                    <Grid item>\n                      <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                          top: 5,\n                          right: 30,\n                          left: 20,\n                          bottom: 5,\n                        }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <YAxis />\n                        <XAxis dataKey=\"name\" />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"answer\">\n                          {data.map((entry, index) => (\n                            <Cell\n                              key={`cell-${index}`}\n                              fill={\n                                entry.name.slice(0, 1).toUpperCase() ===\n                                question.answer.toUpperCase()\n                                  ? \"#82ca9d\"\n                                  : \"#db4c4c\"\n                              }\n                            />\n                          ))}\n                        </Bar>\n                      </BarChart>\n                    </Grid>\n                  </Grid>\n                );\n                break;\n\n              case \"identification\":\n                data = [\n                  {\n                    name: question.answer,\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() ===\n                        question.answer.toUpperCase()\n                    ).length,\n                  },\n                  {\n                    name: \"Others\",\n                    answer: exam.submittedExam.filter(\n                      submission =>\n                        submission[question.uuid].toUpperCase() !==\n                        question.answer.toUpperCase()\n                    ).length,\n                  },\n                ];\n                displayQuestion = (\n                  <Grid container spacing={2} style={{ marginTop: \"0.5rem\" }}>\n                    {/* Answer */}\n                    <Grid item>\n                      <Typography variant=\"body2\" color=\"secondary\">\n                        {`Answer: ${question.answer}`}\n                      </Typography>\n                    </Grid>\n\n                    {/* Bar Chart */}\n                    <Grid item>\n                      <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                          top: 5,\n                          right: 30,\n                          left: 20,\n                          bottom: 5,\n                        }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <YAxis />\n                        <XAxis dataKey=\"name\" />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"answer\">\n                          {data.map((entry, index) => (\n                            <Cell\n                              key={`cell-${index}`}\n                              fill={\n                                entry.name === question.answer\n                                  ? \"#82ca9d\"\n                                  : \"#db4c4c\"\n                              }\n                            />\n                          ))}\n                        </Bar>\n                      </BarChart>\n                    </Grid>\n                  </Grid>\n                );\n                break;\n\n              case \"essayType\":\n                displayQuestion = (\n                  <Typography variant=\"body2\" color=\"secondary\">\n                    Essay Type\n                  </Typography>\n                );\n                break;\n              default:\n                break;\n            }\n\n            return (\n              <Paper\n                key={i}\n                className={classes.paper}\n                style={{ marginBottom: \"0.5rem\" }}>\n                <div>\n                  <Typography variant=\"body1\" display=\"inline\">{`${i + 1}.) ${\n                    question.question\n                  } `}</Typography>\n                  <Typography\n                    variant=\"caption\"\n                    color=\"textSecondary\">{`${question.points} points`}</Typography>\n                </div>\n                {displayQuestion}\n              </Paper>\n            );\n          })}\n        </Grid>\n      );\n    } else {\n      return <Typography>No questions</Typography>;\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"md\"\n      fullWidth={true}>\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\n        {exam ? `${exam.examName} Statistics` : <Skeleton />}\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {exam ? renderStatistics(exam.questions.length) : <Skeleton />}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Back\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExamStatsDialog;\n","import React, { useEffect, useState } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport ExamsCard from \"./ExamsCard\";\nimport { Link } from \"react-router-dom\";\nimport examServices from \"../services/exams\";\nimport ExamScoresDialog from \"./ExamScoresDialog\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Button,\n  Box,\n  Fab,\n  Grid,\n  Typography,\n  Container,\n  Divider,\n  CircularProgress,\n  Snackbar,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport ExamQuestionsDialog from \"./ExamQuestionsDialog\";\nimport ExamStatsDialog from \"./ExamStatsDialog\";\n\nconst ExamTeacher = ({ match }) => {\n  const [exams, setExams] = useState();\n  const [openExamDetailsDialog, setOpenExamDetailsDialog] = useState(false);\n  const [exam, setExam] = useState();\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n  const [examUUID, setExamUUID] = useState();\n  const [openExamQuestions, setOpenExamQuestions] = useState(false);\n  const handleDialogOpen = exam => {\n    setExam(exam);\n    setOpenExamDetailsDialog(true);\n  };\n  const [openExamStats, setOpenExamStats] = useState(false);\n\n  const handleConfirmDialogOpen = examUUID => {\n    setExamUUID(examUUID);\n    setOpenConfirmDialog(true);\n  };\n\n  const handleViewExamOpen = exam => {\n    setExam(exam);\n    setOpenExamQuestions(true);\n  };\n\n  const handleDialogOpenStats = exam => {\n    setExam(exam);\n    setOpenExamStats(true);\n  };\n\n  const handleClose = () => {\n    setOpenConfirmDialog(false);\n  };\n\n  const getExams = () => {\n    examServices\n      .getProfExams(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  const handleDelete = examUUID => {\n    examServices\n      .deleteExam(examUUID)\n      .then(returnedData => {\n        getExams();\n        setSnackbarSeverity(\"success\");\n        setSnackbarMessage(\"Exam Deleted\");\n        setOpenSnackbar(!openSnackbar);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const handleYes = () => {\n    handleDelete(examUUID);\n    handleClose();\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map((exam, i) => (\n          <ExamsCard\n            key={i}\n            exam={exam}\n            handleDialogOpen={handleDialogOpen}\n            handleDelete={handleConfirmDialogOpen}\n            handleViewExam={handleViewExamOpen}\n            handleDialogOpenStats={handleDialogOpenStats}\n          />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marghandleDialogOpeninBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            Yikes! you haven't created an exam yet{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😦\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create an exam using the add button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Floating Icon Button */}\n      <Link\n        to={`${match.url}/createexam`}\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          size=\"medium\"\n          style={{\n            margin: 0,\n            top: \"auto\",\n            right: \"2rem\",\n            bottom: \"5rem\",\n            position: \"fixed\",\n          }}>\n          <CreateIcon />\n        </Fab>\n      </Link>\n\n      {/* Exam Stats Dialog */}\n      <ExamStatsDialog\n        open={openExamStats}\n        setOpen={setOpenExamStats}\n        exam={exam}\n      />\n\n      {/* Exam Questions Dialog */}\n      <ExamQuestionsDialog\n        open={openExamQuestions}\n        setOpen={setOpenExamQuestions}\n        exam={exam}\n      />\n\n      {/* Exam Scores Dialog */}\n      <ExamScoresDialog\n        open={openExamDetailsDialog}\n        setOpen={setOpenExamDetailsDialog}\n        exam={exam}\n      />\n\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openConfirmDialog}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Delete Exam?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This process is unreversible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Create and manage exam for your students here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\">\n                <Link\n                  to={`${match.url}/createexam`}\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n                  Create New Exam\n                </Link>\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      {/* End hero unit */}\n\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ExamTeacher;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({\n  section,\n  handleDialogOpen,\n  handleStudentsOpen,\n  handleRecordsOpen,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card} elevation={3}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {`${section.courseCode} (${section.section})`}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {section.courseDesc}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              {section.studentEnrolled ? section.studentEnrolled.length : 0}\n              {` / ${section.classCapacity} students enrolled`}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {`Class Code: ${section.classCode}`}\n            </Typography>\n          </CardContent>\n\n          <CardActions style={{ marginTop: \"-1.5rem\" }}>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleStudentsOpen(section.studentEnrolled);\n              }}>\n              View\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleRecordsOpen(section.studentEnrolled, section.classCode);\n              }}>\n              Report\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleDialogOpen(section.classCode);\n              }}>\n              Delete\n            </Button>\n          </CardActions>\n        </div>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst shortid = require(\"shortid\");\n\nconst AddSectionDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    const classCode = shortid.generate();\n\n    handleAdd(\n      form.courseCode.toUpperCase(),\n      form.courseDesc.toUpperCase(),\n      form.section.toUpperCase(),\n      form.classCapacity,\n      classCode,\n      (form.image = `https://picsum.photos/seed/${classCode}/166/244`)\n    );\n\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Create new section</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a new section, please enter the subject, section and\n            amount of students\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Course Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseCode\"\n                label=\"Course Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Course Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseDesc\"\n                label=\"Course Name\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Section */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"section\"\n                label=\"Section\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Max Students */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"classCapacity\"\n                label=\"Max students allowed\"\n                variant=\"standard\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddSectionDialog;\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst EnrolledStudentsTable = ({ users }) => {\n  const rows = users.map((user, i) => {\n    const id = i;\n    const name = `${user.lastName}, ${user.firstName} ${user.middleName}`;\n    const idNumber = user.idNumber;\n    const email = user.email;\n    const contactNumber = user.contactNumber ? user.contactNumber : \"N/A\";\n    return { id, name, idNumber, email, contactNumber };\n  });\n\n  return (\n    <div>\n      <Table size=\"medium\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID Number</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Contact Number</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{users ? row.name : <Skeleton />}</TableCell>\n              <TableCell>{row.idNumber}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.contactNumber}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default EnrolledStudentsTable;\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../services/users\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport EnrolledStudentsTable from \"./EnrolledStudentsTable\";\n\nconst EnrolledStudentsDialog = ({ open, setOpen, enrolledStudents }) => {\n  const [users, setUsers] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n    setUsers();\n  };\n\n  const renderStudentsEnrolled = usersLength => {\n    if (usersLength) {\n      return (\n        <Grid item xs={12}>\n          <Paper>\n            <EnrolledStudentsTable users={users} />\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return <Typography variant=\"body1\">No students enrolled yet</Typography>;\n    }\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => {\n        setUsers(\n          users.filter(user =>\n            enrolledStudents.some(\n              enrolledStudent => enrolledStudent === user.email\n            )\n          )\n        );\n      })\n      .catch(err => console.log(err.message));\n  }, [enrolledStudents]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"md\"\n      fullWidth={true}>\n      <DialogTitle id=\"form-dialog-title\">Enrolled Students</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2} direction=\"column\">\n          {users ? (\n            renderStudentsEnrolled(users.length)\n          ) : (\n            <Skeleton width=\"100%\" />\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Back\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EnrolledStudentsDialog;\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../services/users\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst SectionRecords = ({\n  open,\n  setOpen,\n  enrolledStudents,\n  exams,\n  classCode,\n}) => {\n  const [users, setUsers] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n    setUsers();\n  };\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = (exam, studentEmail) => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === studentEmail\n    )[0];\n\n    const answerUUIDs = answers ? Object.keys(answers) : null;\n\n    if (!answerUUIDs) {\n      return \"N/A\";\n    }\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (answers[answerUUIDs[ii]]) {\n            if (questions[i].type === \"essayType\") {\n              points += parseInt(questions[i].points);\n            } else if (\n              questions[i].answer.toUpperCase() ===\n              answers[answerUUIDs[ii]].toUpperCase()\n            ) {\n              points += parseInt(questions[i].points);\n            }\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const renderStudentsEnrolled = usersLength => {\n    if (usersLength) {\n      const columns = exams\n        .filter(exam => exam.classCode === classCode)\n        .map((exam, i) => {\n          const id = i;\n          const examName = `${exam.examName}`;\n          return { id, examName, exam };\n        });\n\n      const rows = users.map((user, i) => {\n        const id = i;\n        const name = `${user.lastName}, ${user.firstName} ${user.middleName}`;\n        const email = user.email;\n        const idNumber = user.idNumber;\n\n        return { id, name, email, idNumber };\n      });\n\n      return (\n        <Grid item xs={12}>\n          <Paper>\n            <div>\n              <Table size=\"medium\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>ID Number</TableCell>\n                    {columns.map((column, i) => (\n                      <TableCell key={i}>{column.examName}</TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map(row => (\n                    <TableRow key={row.id}>\n                      <TableCell>{users ? row.name : <Skeleton />}</TableCell>\n                      <TableCell>\n                        {users ? row.idNumber : <Skeleton />}\n                      </TableCell>\n                      {columns.map((column, i) => (\n                        <TableCell key={i}>\n                          {getScore(column.exam, row.email) === \"N/A\"\n                            ? \"N/A\"\n                            : `${getScore(\n                                column.exam,\n                                row.email\n                              )} / ${getTotalScore(column.exam)}`}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return <Typography variant=\"body1\">No students enrolled yet</Typography>;\n    }\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => {\n        setUsers(\n          users.filter(user =>\n            enrolledStudents.some(\n              enrolledStudent => enrolledStudent === user.email\n            )\n          )\n        );\n      })\n      .catch(err => console.log(err.message));\n  }, [enrolledStudents]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}>\n      <DialogTitle id=\"form-dialog-title\">Students Records</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2} direction=\"column\">\n          {users ? (\n            renderStudentsEnrolled(users.length)\n          ) : (\n            <Skeleton width=\"100%\" />\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Back\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default SectionRecords;\n","import React, { useEffect, useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport SectionsCard from \"../components/SectionsCard\";\nimport AddSectionDialog from \"../components/AddSectionDialog\";\nimport sectionServices from \"../services/classes\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Fab,\n  Divider,\n  Box,\n  Snackbar,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport EnrolledStudentsDialog from \"./EnrolledStudentsDialog\";\nimport SectionRecords from \"../components/SectionRecords\";\nimport examServices from \"../services/exams\";\n\nconst StudentsTeacher = () => {\n  const [openAddSection, setOpenAddSection] = useState(false);\n  const [sections, setSections] = useState();\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [classCode, setClassCode] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [enrolledStudents, setEnrolledStudents] = useState();\n  const [openEnrolledStudentsDialog, setOpenEnrolledStudentsDialog] = useState(\n    false\n  );\n  const [exams, setExams] = useState();\n  const [openRecords, setOpenRecords] = useState(false);\n\n  const handleDelete = classCode => {\n    sectionServices\n      .deleteClass(classCode)\n      .then(returnedData => {\n        getClasses();\n        setSnackbarSeverity(\"success\");\n        setSnackbarMessage(\"Class succesfully deleted\");\n        setOpenSnackbar(!openSnackbar);\n      })\n      .catch(err => {\n        console.log(\"Error :>> \", err.message);\n      });\n  };\n\n  const handleClickOpen = classCode => {\n    setOpen(true);\n    setClassCode(classCode);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    handleDelete(classCode);\n    handleClose();\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const handleStudentsDialogOpen = enrolledStudents => {\n    setEnrolledStudents(enrolledStudents);\n    setOpenEnrolledStudentsDialog(true);\n  };\n\n  const handleRecordsOpen = (enrolledStudents, classCode) => {\n    setEnrolledStudents(enrolledStudents);\n    setClassCode(classCode);\n    setOpenRecords(true);\n  };\n\n  const handleAdd = (\n    courseCode,\n    courseDesc,\n    section,\n    classCapacity,\n    classCode,\n    image\n  ) => {\n    const newSection = {\n      courseCode: courseCode,\n      courseDesc: courseDesc,\n      section: section,\n      classCapacity: classCapacity,\n      classCode: classCode,\n      image: image,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    sectionServices\n      .create(newSection)\n      .then(returnedData => {\n        if (returnedData === \"section already exists\") {\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"A section with that subject already exists\");\n          setOpenSnackbar(!openSnackbar);\n        } else {\n          setSnackbarSeverity(\"success\");\n          setSnackbarMessage(\"Section created\");\n          setOpenSnackbar(!openSnackbar);\n          setSections([...sections, newSection]);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  const getClasses = () => {\n    sectionServices\n      .getProfClass(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  const getExams = () => {\n    examServices\n      .getProfExams(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getClasses();\n    getExams();\n  }, []);\n\n  useEffect(() => {}, [sections]);\n\n  const renderClasses = classesLength => {\n    if (classesLength) {\n      return sections\n        .slice(0)\n        .reverse()\n        .map((section, i) => {\n          return (\n            <SectionsCard\n              key={i}\n              section={section}\n              handleDialogOpen={handleClickOpen}\n              handleStudentsOpen={handleStudentsDialogOpen}\n              handleRecordsOpen={handleRecordsOpen}\n            />\n          );\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            Awwww. You haven't created a class yet{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😞\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create a class using the add button to get started\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenAddSection(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete class?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This wil delete this class and all its exams. This process is\n            unreversible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Records Dialog */}\n      <SectionRecords\n        open={openRecords}\n        setOpen={setOpenRecords}\n        exams={exams}\n        classCode={classCode}\n        enrolledStudents={enrolledStudents}\n      />\n\n      {/* Add section Dialog */}\n      <AddSectionDialog\n        open={openAddSection}\n        setOpen={setOpenAddSection}\n        handleAdd={handleAdd}\n      />\n\n      {/* Enrolled Students Dialog */}\n      <EnrolledStudentsDialog\n        open={openEnrolledStudentsDialog}\n        setOpen={setOpenEnrolledStudentsDialog}\n        enrolledStudents={enrolledStudents}\n      />\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Classes\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your students here by creating classes in which they can enroll\n          in\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenAddSection(true);\n                }}>\n                Create New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      {/* End hero unit */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {sections ? (\n            renderClasses(sections.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentsTeacher;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesForgotPassword = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStylesForgotPassword;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledSelect = ({\n  error,\n  control,\n  name,\n  label,\n  menu,\n  variant = \"outlined\",\n  required = false,\n}) => {\n  return (\n    <FormControl\n      style={{ minWidth: \"100%\", maxWidth: \"100%\" }}\n      error={Boolean(error[name])}\n      variant={variant}>\n      <InputLabel id={`${name}Label`}>{label}</InputLabel>\n      <Controller\n        as={\n          <Select required={required}>\n            <MenuItem value=\"\">None</MenuItem>\n            {menu.map((menu, i) => {\n              return (\n                <MenuItem key={i} value={menu.value}>\n                  {menu.label}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledSelect;\n","import React from \"react\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport { Controller } from \"react-hook-form\";\nimport { FormControl, FormHelperText } from \"@material-ui/core\";\n\nconst ControlledDateTimePicker = ({\n  selectedDate,\n  handleDateChange,\n  name,\n  error,\n  control,\n  label,\n  rules = {},\n  maxDate = null,\n  disableFuture = false,\n  openTo = \"date\",\n}) => {\n  return (\n    <FormControl style={{ width: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              name={name}\n              label={label}\n              value={selectedDate}\n              onChange={handleDateChange}\n              maxDate={maxDate}\n              inputVariant=\"outlined\"\n              showTodayButton\n              disablePast\n              disableFuture={disableFuture}\n              openTo={openTo}\n            />\n          </MuiPickersUtilsProvider>\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={rules}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledDateTimePicker;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"./ControlledSelect\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport Section from \"../services/classes\";\nimport ControlledDateTimePicker from \"../components/ControlledDateTimePicker\";\nimport DateAdd from \"date-fns/add\";\nimport DateSub from \"date-fns/sub\";\nimport IsAfter from \"date-fns/isAfter\";\nimport formatISO from \"date-fns/formatISO\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ForgotPasswordForm = ({ submitExamDetails, handleNext }) => {\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const [sections, setSections] = useState([]);\n  const [selectedDateSched, setSelectedDateSched] = useState(\n    DateAdd(new Date(), { days: 1 })\n  );\n  const [selectedDateDeadline, setSelectedDateDeadline] = useState(\n    DateAdd(new Date(), { days: 1, hours: 1, minutes: 30 })\n  );\n\n  const handleDateChangeSched = sched => {\n    setSelectedDateSched(sched);\n    setSelectedDateDeadline(DateAdd(sched, { hours: 1, minutes: 30 }));\n  };\n\n  const handleDateChangeDeadline = deadline => {\n    if (IsAfter(selectedDateSched, deadline)) {\n      setSelectedDateDeadline(deadline);\n      setSelectedDateSched(DateSub(deadline, { hours: 1, minutes: 30 }));\n    } else {\n      setSelectedDateDeadline(deadline);\n    }\n  };\n\n  const submitHandle = formData => {\n    formData.sched = formatISO(selectedDateSched);\n    formData.deadline = formatISO(selectedDateDeadline);\n    formData.uuid = uuidv4();\n\n    submitExamDetails(formData);\n    handleNext();\n  };\n\n  useEffect(() => {\n    Section.getAllProfClasses(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(submitHandle)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Basic Exam Details\n        </Typography>\n        <Grid container spacing={3}>\n          {/* Exam name */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examName\"\n              label=\"Exam Name\"\n              error={errors}\n              control={control}\n              required={true}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Exam description */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examDesc\"\n              label=\"Exam Description\"\n              error={errors}\n              control={control}\n              required={true}\n              multiline={true}\n              rows={3}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Section */}\n          <Grid item xs={12}>\n            <ControlledSelect\n              name=\"classCode\"\n              error={errors}\n              control={control}\n              label=\"Class\"\n              menu={sections}\n            />\n          </Grid>\n\n          {/* Exam Date */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateSched}\n              handleDateChange={handleDateChangeSched}\n              name=\"sched\"\n              error={errors}\n              control={control}\n              label=\"Start of Examination\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n\n          {/* Exam Deadline */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateDeadline}\n              handleDateChange={handleDateChangeDeadline}\n              name=\"deadline\"\n              error={errors}\n              control={control}\n              label=\"Deadline of Examination\"\n              openTo=\"hours\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n        </Grid>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst QuestionAdderDialog = ({ open, setOpen, handleAdd }) => {\n  const { control, handleSubmit, errors } = useForm();\n\n  const onSubmit = formData => {\n    handleAdd(formData);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Add Questions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a set of questions please specify what type of questions\n            you would like\n          </DialogContentText>\n\n          <Grid container spacing={2}>\n            {/* Question Type */}\n            <Grid item xs={12}>\n              <ControlledSelect\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                name=\"type\"\n                label=\"Question Type\"\n                required={true}\n                menu={[\n                  { value: \"multichoice\", label: \"Multiple Choice\" },\n                  { value: \"trueorfalse\", label: \"True or False\" },\n                  { value: \"identification\", label: \"Identification\" },\n                  { value: \"essaytype\", label: \"Essay Type\" },\n                ]}\n              />\n            </Grid>\n\n            {/* Number of items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"noitems\"\n                label=\"Number of items\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n\n            {/* Points per items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"points\"\n                label=\"Points per item\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default QuestionAdderDialog;\n","import React from \"react\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst ExamPool = ({ question, errors, control, index }) => {\n  let questions = [];\n\n  switch (question.type) {\n    case \"multichoice\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (Multiple Choice)`}</Typography>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Question${i}-multichoice`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Choice${i}-c1`}\n                label={`Choice A`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Choice${i}-c2`}\n                label={`Choice B`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Choice${i}-c3`}\n                label={`Choice C`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Choice${i}-c4`}\n                label={`Choice D`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}-Answer${i}-multichoice`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"a\", label: \"A\" },\n                  { value: \"b\", label: \"B\" },\n                  { value: \"c\", label: \"C\" },\n                  { value: \"d\", label: \"D\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"trueorfalse\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (True or False)`}</Typography>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Question${i}-trueorfalse`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}-Answer${i}-trueorfalse`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"t\", label: \"True\" },\n                  { value: \"f\", label: \"False\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"identification\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Identification)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Question${i}-identification`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Answer${i}-identification`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"enumeration\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Question${i}-enumeration`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}></Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"essaytype\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Essay Type)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}-Question${i}-essaytype`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    default:\n      return <div>Nothing rendered</div>;\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item>\n        <Typography\n          variant=\"h4\"\n          style={{\n            marginTop: \"2rem\",\n            marginLeft: \"1rem\",\n            marginBottom: \"-1rem\",\n          }}>\n          {`Set ${index + 1} [${question.points} points per item]`}\n        </Typography>\n      </Grid>\n      {questions.map((question, index) => {\n        return (\n          <Grid key={index} item xs={12}>\n            {question}\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default ExamPool;\n","import React, { useState } from \"react\";\nimport { Button, Typography, Fab, Divider } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport QuestionAdderDialog from \"../components/QuestionAdderDialog\";\nimport ExamPool from \"./ExamPool\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ExamQuestionsForm = ({ submitExamQuestions, handleNext }) => {\n  const [questions, setQuestions] = useState([]);\n  const [openQuestionAdder, setOpenQuestionAdder] = useState(false);\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const handleAddQuestions = () => {\n    setOpenQuestionAdder(true);\n  };\n\n  const handleAdd = newQuestion => {\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const onSubmit = formData => {\n    const totalItems = questions.reduce(\n      (acc, question) => parseInt(acc) + parseInt(question.noitems),\n      0\n    );\n\n    let transformedQuestions = [];\n    let formDataClone = formData;\n\n    for (let ii = 0; ii < totalItems; ii++) {\n      let dummyObj = {};\n      let choices = [];\n      let dummyIndex = 0;\n      let dummyI = 0;\n\n      outerloop: for (const key in formDataClone) {\n        if (formDataClone.hasOwnProperty(key)) {\n          for (let index = 0; index < questions.length; index++) {\n            for (let i = 1; i <= questions[index].noitems; i++) {\n              // Multiple choice\n              if (key === `Set${index}-Question${i}-multichoice`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.choices = choices;\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"multipleChoice\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}-Answer${i}-multichoice`];\n                choices[0] = {\n                  label: formDataClone[`Set${index}-Choice${i}-c1`],\n                  value: \"a\",\n                };\n                choices[1] = {\n                  label: formDataClone[`Set${index}-Choice${i}-c2`],\n                  value: \"b\",\n                };\n                choices[2] = {\n                  label: formDataClone[`Set${index}-Choice${i}-c3`],\n                  value: \"c\",\n                };\n                choices[3] = {\n                  label: formDataClone[`Set${index}-Choice${i}-c4`],\n                  value: \"d\",\n                };\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[\n                  `Set${dummyIndex}-Question${dummyI}-multichoice`\n                ];\n                delete formDataClone[`Set${dummyIndex}-Answer${dummyI}-Answer`];\n                delete formDataClone[`Set${dummyIndex}-Choice${dummyI}-c1`];\n                delete formDataClone[`Set${dummyIndex}-Choice${dummyI}-c2`];\n                delete formDataClone[`Set${dummyIndex}-Choice${dummyI}-c3`];\n                delete formDataClone[`Set${dummyIndex}-Choice${dummyI}-c4`];\n\n                break outerloop;\n              } // True or False\n              else if (key === `Set${index}-Question${i}-trueorfalse`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"trueOrFalse\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}-Answer${i}-trueorfalse`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}-Question${i}-trueorfalse`];\n                delete formDataClone[`Set${index}-Answer${i}-trueorfalse`];\n\n                break outerloop;\n              } // Identification\n              else if (key === `Set${index}-Question${i}-identification`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"identification\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}-Answer${i}-identification`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}-Question${i}-identification`];\n                delete formDataClone[`Set${index}-Answer${i}-identification`];\n\n                break outerloop;\n              } // Essay Type\n              else if (key === `Set${index}-Question${i}-essaytype`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"essayType\";\n                dummyObj.question = formDataClone[key];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}-Question${i}-essaytype`];\n\n                break outerloop;\n              }\n            }\n          }\n        }\n      }\n      transformedQuestions.push(dummyObj);\n    }\n\n    submitExamQuestions(transformedQuestions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <Fab\n        onClick={() => handleAddQuestions()}\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"large\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}>\n        <AddIcon />\n      </Fab>\n\n      <QuestionAdderDialog\n        handleAdd={handleAdd}\n        open={openQuestionAdder}\n        setOpen={setOpenQuestionAdder}\n      />\n\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Question Pool\n        </Typography>\n        <Divider />\n        <div>\n          {questions.map((question, i) => {\n            return (\n              <ExamPool\n                key={i}\n                question={question}\n                errors={errors}\n                control={control}\n                index={i}\n              />\n            );\n          })}\n        </div>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React from \"react\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\n\nconst VerifyQuestions = ({ questions }) => {\n  let examQuestions = [];\n\n  for (let i = 0; i < questions.length; i++) {\n    if (questions[i].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Paper\n            style={{\n              minWidth: \"100%\",\n              padding: \"1rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n            }}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={{ display: \"inline\" }}>\n                {`${i + 1}.) ${questions[i].question}`}\n              </Typography>\n              <Typography variant=\"caption\">{` ${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              }`}</Typography>\n            </Grid>\n\n            {/* Choices */}\n            {questions[i].choices.map((choice, i) => {\n              return (\n                <Grid item key={i}>\n                  <Typography variant=\"caption\">\n                    {`${choice.value.toUpperCase()}.) ${choice.label}`}\n                  </Typography>\n                </Grid>\n              );\n            })}\n\n            {/* Answer */}\n            <Grid item xs={12}>\n              <Typography\n                color=\"secondary\"\n                variant=\"body1\"\n                gutterBottom>{`Answer: ${questions[i].answer}`}</Typography>\n            </Grid>\n          </Paper>\n        </Grid>\n      );\n    } else if (questions[i].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Paper\n            style={{\n              minWidth: \"100%\",\n              padding: \"1rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n            }}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={{ display: \"inline\" }}>\n                {`${i + 1}.) ${questions[i].question}`}\n              </Typography>\n              <Typography variant=\"caption\">{` ${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              }`}</Typography>\n            </Grid>\n\n            {/* Answer */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" color=\"secondary\" gutterBottom>\n                {`Answer: ${questions[i].answer === \"t\" ? \"True\" : \"False\"}`}\n              </Typography>\n            </Grid>\n          </Paper>\n        </Grid>\n      );\n    } else if (questions[i].type === \"identification\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Paper\n            style={{\n              minWidth: \"100%\",\n              padding: \"1rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n            }}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={{ display: \"inline\" }}>\n                {`${i + 1}.) ${questions[i].question}`}\n              </Typography>\n              <Typography variant=\"caption\">{` ${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              }`}</Typography>\n            </Grid>\n\n            {/* Answer */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" color=\"secondary\" gutterBottom>\n                {`Answer: ${questions[i].answer}`}\n              </Typography>\n            </Grid>\n          </Paper>\n        </Grid>\n      );\n    } else if (questions[i].type === \"essayType\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Paper\n            style={{\n              minWidth: \"100%\",\n              padding: \"1rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n            }}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={{ display: \"inline\" }}>\n                {`${i + 1}.) ${questions[i].question}`}\n              </Typography>\n              <Typography variant=\"caption\">{` ${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              }`}</Typography>\n            </Grid>\n          </Paper>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {examQuestions.map((qstn, i) => (\n        <Grid container spacing={2} key={i}>\n          {qstn}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default VerifyQuestions;\n","import React from \"react\";\nimport { Button, Typography, Divider } from \"@material-ui/core\";\nimport useStylesForgotPassword from \"./styles/useStylesForgotPassword\";\nimport VerifyQuestions from \"./VerifyQuestions\";\n\nconst ExamQuestionsForm = ({ questions, handleNext, submitQuestions }) => {\n  const classes = useStylesForgotPassword();\n\n  const handleSubmit = () => {\n    submitQuestions(questions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>\n          Verify Questions\n        </Typography>\n\n        <Divider style={{ marginBottom: \"2rem\" }} />\n\n        <VerifyQuestions questions={questions} />\n\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React, { useState } from \"react\";\nimport ExamDetailsForm from \"../components/ExamDetailsForm\";\nimport ExamQuestionsForm from \"../components/ExamQuestionsForm\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport VerifyExamQuestions from \"../components/VerifyExamQuestions\";\nimport examServices from \"../services/exams\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  makeStyles,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter exam details\", \"Input question pool\", \"Verify exam \"];\n\nconst ForgotPassword = () => {\n  const [examDetails, setExamDetails] = useState({});\n  const [examQuestions, setExamQuestions] = useState([]);\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = useState(0);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n\n  const handleSubmitExamDetails = examDetail => {\n    setExamDetails(examDetail);\n  };\n\n  const handleSubmitExamQuestions = examQuestion => {\n    setExamQuestions(examQuestion);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  }));\n\n  const classess = useStyles();\n\n  const handleSubmitQuestions = questions => {\n    setOpenBackdrop(true);\n\n    const newExam = {\n      uuid: examDetails.uuid,\n      examName: examDetails.examName,\n      examDesc: examDetails.examDesc,\n      classCode: examDetails.classCode,\n      sched: examDetails.sched,\n      deadline: examDetails.deadline,\n      submittedExam: [],\n      isChecked: false,\n      questions: examQuestions,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    examServices\n      .create(newExam)\n      .then(returnedData => {\n        if (returnedData !== \"exam uuid already exists\") {\n          setOpenBackdrop(false);\n        }\n      })\n      .catch(error => {\n        console.log(\"error :>> \", error);\n      });\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <ExamDetailsForm\n            submitExamDetails={handleSubmitExamDetails}\n            handleNext={handleNext}\n          />\n        );\n      case 1:\n        return (\n          <ExamQuestionsForm\n            submitExamQuestions={handleSubmitExamQuestions}\n            handleNext={handleNext}\n          />\n        );\n\n      case 2:\n        return (\n          <VerifyExamQuestions\n            submitQuestions={handleSubmitQuestions}\n            questions={examQuestions}\n            handleNext={handleNext}\n          />\n        );\n      default:\n        throw new Error(\"Unknown step\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Exam Creation\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Backdrop className={classess.backdrop} open={openBackdrop}>\n                  <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                <Typography variant=\"h5\" gutterBottom>\n                  Exam has been uploaded to database\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  It is available for students to be taken at specified time.{\" \"}\n                  <Link to=\"/teacher\">Click here to return to dashboard</Link>\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>{getStepContent(activeStep)}</React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function TeacherBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      <BottomNavigationAction\n        label=\"Dashboard\"\n        icon={<DashboardIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}/exams`}\n      />\n      <BottomNavigationAction\n        label=\"Classes\"\n        icon={<PeopleIcon />}\n        component={Link}\n        to={`${match.url}/students`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Title from \"./Title\";\n\nconst AverageScoreChart = ({ title, chartData }) => {\n  const theme = useTheme();\n\n  const data = chartData.map(data => {\n    const examname = data.examname;\n    const avgscore = data.avgscore;\n    return { examname, avgscore };\n  });\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <XAxis dataKey=\"examname\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{\n                textAnchor: \"middle\",\n                fill: theme.palette.text.primary,\n              }}>\n              Scores\n            </Label>\n          </YAxis>\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"avgscore\"\n            stroke={theme.palette.primary.main}\n            dot={true}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n};\n\nexport default AverageScoreChart;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nconst TopScorer = ({ name, section, subject, highestScore, examName }) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>{`Top Scorer`}</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {`${name}`}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        {examName === \"No exams yet\"\n          ? \"No exams yet\"\n          : `Highest in ${examName}`}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        {examName === \"No exams yet\"\n          ? \"No Score yet\"\n          : `Score: ${highestScore}`}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default TopScorer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst RankingBoard = ({ title, tableData }) => {\n  const classes = useStyles();\n  let tbl = \"\";\n\n  if (tableData) {\n    const rows = tableData.map((data, i) => {\n      const id = i;\n      const rank = data.rank;\n      const idNumber = data.idNumber;\n      const name = data.name;\n      const avgScore = data.avgScore;\n      const ttlScore = data.ttlScore;\n      return { id, rank, idNumber, name, avgScore, ttlScore };\n    });\n\n    tbl = (\n      <>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Ranking</TableCell>\n              <TableCell>ID Number</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Average Score</TableCell>\n              <TableCell align=\"right\">Total Score</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.rank}</TableCell>\n                <TableCell>{row.idNumber}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell align=\"right\">{row.avgScore}</TableCell>\n                <TableCell align=\"right\">{row.ttlScore}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <div className={classes.seeMore}>\n          {/* <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n            See full ranking\n          </Link> */}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      {tableData ? tbl : <Typography>No students records yet</Typography>}\n    </React.Fragment>\n  );\n};\n\nexport default RankingBoard;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport AverageScoreChart from \"../components/AverageScoreChart\";\nimport TopScorer from \"../components/TopScorer\";\nimport RankingBoard from \"../components/RankingBoard\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\n\nconst DashboardCharts = ({\n  section,\n  subject,\n  desc,\n  chartData,\n  highestScorer,\n  topScore,\n  tableData,\n}) => {\n  const classes = useStylesTeacherHome();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div>\n      <Grid container spacing={3} justify={\"center\"}>\n        <Grid item>\n          <Typography\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>{`${subject} (${section})`}</Typography>\n          <Typography\n            variant=\"h6\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            {desc}\n          </Typography>\n        </Grid>\n        {/* Chart */}\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper className={fixedHeightPaper} elevation={5}>\n            <AverageScoreChart title={`Average Score`} chartData={chartData} />\n          </Paper>\n        </Grid>\n        {/* Top Scorer */}\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} elevation={5}>\n            <TopScorer\n              name={highestScorer}\n              section={section}\n              subject={subject}\n              highestScore={topScore}\n              examName={chartData[chartData.length - 1].examname}\n            />\n          </Paper>\n        </Grid>\n        {/* Ranking Board */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper} elevation={5}>\n            <RankingBoard title={`Ranking Board`} tableData={tableData} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default DashboardCharts;\n","import React, { useState } from \"react\";\nimport classServices from \"../services/classes\";\nimport DashboardCharts from \"../components/DashboardCharts\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport clsx from \"clsx\";\n\nimport {\n  Box,\n  Typography,\n  Paper,\n  Container,\n  Divider,\n  CircularProgress,\n  Grid,\n} from \"@material-ui/core\";\n\nconst DashboardTeacher = () => {\n  const [Data, setData] = useState();\n\n  const getScore = (exam, studentEmail) => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === studentEmail\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (answers[answerUUIDs[ii]]) {\n            if (questions[i].type === \"essayType\") {\n              points += parseInt(questions[i].points);\n            } else if (\n              questions[i].answer.toUpperCase() ===\n              answers[answerUUIDs[ii]].toUpperCase()\n            ) {\n              points += parseInt(questions[i].points);\n            }\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const getName = (email, users) => {\n    const user = users.filter(user => user.email === email).slice(0, 1);\n\n    if (user.length) {\n      return `${user[0].lastName}, ${user[0].firstName} ${user[0].middleName}`;\n    } else {\n      return \"No submission yet\";\n    }\n  };\n\n  const getIdNumber = (email, users) => {\n    const user = users.filter(user => user.email === email).slice(0, 1);\n    return user[0].idNumber;\n  };\n\n  const renderDashboard = dataLength => {\n    if (dataLength) {\n      return Data.map((data, i) => {\n        return (\n          <div key={i}>\n            <Paper\n              elevation={2}\n              className={fixedHeightPaper}\n              style={{ marginBottom: \"3.5rem\" }}>\n              <DashboardCharts\n                section={data.section}\n                subject={data.subject}\n                desc={data.desc}\n                highestScorer={data.highestScorer}\n                topScore={data.topScore}\n                chartData={data.chartData}\n                tableData={data.tableData}\n              />\n            </Paper>\n          </div>\n        );\n      });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            Yikes! No data to show yet{\" \"}\n            <span role=\"img\" aria-label=\"emoji\">\n              😬\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            To show data, add students and exams\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  const getTableData = (classs, exams, users) => {\n    let tableData = [];\n\n    if (!classs) {\n      return;\n    }\n\n    classs.studentEnrolled.forEach((email, i) => {\n      const getTotalScore = exams\n        .filter(exam => exam.classCode === classs.classCode)\n        .map((exam, i) => {\n          let scores = [];\n\n          exam.submittedExam.length\n            ? exam.submittedExam.forEach(submission => {\n                if (submission.submittedBy === email) {\n                  scores.push(getScore(exam, submission.submittedBy));\n                }\n              })\n            : scores.push(0);\n\n          return scores;\n        });\n\n      let newData = {\n        idNumber: getIdNumber(email, users),\n        name: getName(email, users),\n        avgScore: (\n          getTotalScore.reduce(\n            (acc, curVal) => parseInt(acc) + parseInt(curVal),\n            0\n          ) / getTotalScore.length\n        ).toFixed(2),\n        ttlScore: getTotalScore\n          .reduce((acc, curVal) => parseInt(acc) + parseInt(curVal), 0)\n          .toFixed(2),\n      };\n      tableData.push(newData);\n    });\n\n    // Sorts the table data\n    tableData.sort((a, b) => a.ttlScore - b.ttlScore);\n    // Add ranks to each data\n    tableData.forEach((data, i) => (data.rank = i + 1));\n\n    return tableData;\n  };\n\n  useState(() => {\n    classServices\n      .getClassAndExams(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        let newSampleData = [];\n\n        returnedData.classes.forEach(classs => {\n          const examsAndAvg = returnedData.exams\n            .filter(exam => exam.classCode === classs.classCode)\n            .map((exam, i) => {\n              let scores = [];\n\n              exam.submittedExam.length\n                ? exam.submittedExam.forEach(submission => {\n                    scores.push(getScore(exam, submission.submittedBy));\n                  })\n                : scores.push(0);\n\n              return {\n                examname: exam.examName,\n                avgscore: `${\n                  scores.reduce((a, b) => a + b, 0) / scores.length\n                }`,\n              };\n            });\n\n          const examTopScore = returnedData.exams\n            .filter(exam => exam.classCode === classs.classCode)\n            .map((exam, i) => {\n              let scores = [];\n\n              exam.submittedExam.length\n                ? exam.submittedExam.forEach(submission => {\n                    scores.push({\n                      score: getScore(exam, submission.submittedBy),\n                      email: submission.submittedBy,\n                    });\n                  })\n                : scores.push({ score: 0, email: \"\" });\n\n              scores.sort((a, b) => a.score - b.score);\n\n              return scores.pop();\n            });\n\n          newSampleData.push({\n            section: classs.section,\n            subject: classs.courseCode,\n            desc: classs.courseDesc,\n            highestScorer: examTopScore.length\n              ? getName(\n                  examTopScore[examTopScore.length - 1].email,\n                  returnedData.users\n                )\n              : \"No Submission yet\",\n            topScore: examTopScore.length\n              ? examTopScore[examTopScore.length - 1].score\n              : 0,\n            chartData: examsAndAvg.length\n              ? examsAndAvg\n              : [{ examname: \"No exams yet\", avgscore: 0 }],\n            tableData: getTableData(\n              classs,\n              returnedData.exams,\n              returnedData.users\n            ).length\n              ? getTableData(classs, returnedData.exams, returnedData.users)\n              : null,\n          });\n        });\n        setData(newSampleData);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, []);\n\n  const classes = useStylesTeacherHome();\n  const fixedHeightPaper = clsx(classes.paper);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Home\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          View Exam Statistics for each classes\n        </Typography>\n      </Container>\n\n      {/* End hero unit */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {Data ? (\n        renderDashboard(Data.length)\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ marginTop: \"5rem\" }}>\n          <CircularProgress />\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardTeacher;\n","import React from \"react\";\nimport { CssBaseline, Container, Hidden } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport HomeAppBar from \"../components/HomeAppBar\";\nimport ExamTeacher from \"../components/ExamTeacher\";\nimport StudentsTeacher from \"../components/StudentsTeacher\";\nimport CreateExam from \"../pages/CreateExam\";\nimport BottomNav from \"../components/TeacherBottomNav\";\nimport DashboardTeacher from \"../components/DashboardTeacher\";\n\nconst TeacherHome = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <HomeAppBar\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n        name={localStorage.getItem(\"lastName\")}\n      />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Hidden mdUp>\n          <BottomNav match={match} />\n        </Hidden>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            <Route path={`${match.path}`} exact component={DashboardTeacher} />\n            <Route path={`${match.path}/exams`} exact>\n              <ExamTeacher match={match} />\n            </Route>\n            <Route\n              path={`${match.path}/students`}\n              exact\n              component={StudentsTeacher}\n            />\n            <Route\n              path={`${match.path}/createexam`}\n              exact\n              component={CreateExam}\n            />\n          </Switch>\n        </Container>\n        {/* <Box pt={8}>\n          <Copyright />\n        </Box> */}\n      </main>\n    </div>\n  );\n};\n\nexport default TeacherHome;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ForgotPasswordForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Account Details\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"E-Mail Address\"\n            fullWidth\n            autoComplete=\"shipping address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"idNumber\"\n            name=\"idNumber\"\n            label=\"ID Number\"\n            fullWidth\n            autoComplete=\"idNumber\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst PaymentForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        An email has been sent to your account\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"code\"\n            label=\"Enter verification code\"\n            placeholder=\"XXX-XXX\"\n            helperText=\"Please wait at least a minute before resending verification\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} md={6}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PaymentForm;\n","import React from \"react\";\nimport ForgotPasswordForm from \"../components/ForgotPasswordForm\";\nimport EmailVerificationForm from \"../components/EmailVerificationForm\";\nimport Copyright from \"../components/Copyright\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter account details\", \"Wait for email verification\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <ForgotPasswordForm />;\n    case 1:\n      return <EmailVerificationForm />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nconst ForgotPassword = () => {\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Account Recovery\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Your account has been restored\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  You have succesfully restored your account\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}>\n                    {activeStep === steps.length - 1 ? \"Confirm\" : \"Next\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nconst Error404 = () => {\n  return (\n    <div>\n      <h1>404 ERROR</h1>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Student from \"../pages/Student\";\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport TeacherHome from \"../pages/TeacherHome\";\nimport ForgotPassword from \"../pages/ForgotPassword\";\nimport Error404 from \"../pages/Error404\";\n\nconst Router = () => {\n  let loggedIn = false;\n  let redirectURL = \"\";\n\n  if (localStorage.getItem(\"jwtCookie\")) {\n    loggedIn = true;\n    if (localStorage.getItem(\"isTeacher\") === \"true\") {\n      redirectURL = \"/teacher\";\n    } else {\n      redirectURL = \"/student\";\n    }\n  }\n\n  return (\n    <MemoryRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          {loggedIn ? <Redirect to={redirectURL} /> : <Home />}\n        </Route>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/student\" component={Student} />\n        <Route path=\"/teacher\" component={TeacherHome} />\n        <Route path=\"\" component={Error404} />\n      </Switch>\n    </MemoryRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport \"./App.css\";\nimport Router from \"./components/Router\";\n\nfunction App() {\n  return <Router></Router>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
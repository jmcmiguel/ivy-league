{"version":3,"sources":["components/Copyright.jsx","pages/Home.jsx","components/styles/useStylesTeacherHome.js","components/ListItems.jsx","components/StudentListItems.jsx","components/HomeDrawer.jsx","components/StudentBottomNav.jsx","components/ControlledTextField.jsx","components/JoinClassDialog.jsx","services/classes.js","services/users.js","services/exams.js","components/StudentClassCard.jsx","components/DashboardStudent.jsx","components/styles/useStylesTeacherExam.js","components/StudentExamsCard.jsx","components/StudentExams.jsx","components/AccountStudent.jsx","components/StudentExamHistory.jsx","components/StudentAppBar.jsx","components/ControlledRadioButton.jsx","components/RenderExamQuestions.jsx","components/StudentExamPage.jsx","pages/Student.jsx","pages/SignIn.jsx","pages/SignUp.jsx","components/HomeAppBar.jsx","components/ExamsCard.jsx","components/Title.jsx","components/ExamScoresTable.jsx","components/ExamScoresDialog.jsx","components/ExamTeacher.jsx","components/SectionsCard.jsx","components/AddSectionDialog.jsx","components/EnrolledStudentsDialog.jsx","components/StudentsTeacher.jsx","components/styles/useStylesForgotPassword.js","components/ControlledSelect.jsx","components/ControlledDateTimePicker.jsx","components/ExamDetailsForm.jsx","components/QuestionAdderDialog.jsx","components/ExamPool.jsx","components/ExamQuestionsForm.jsx","components/VerifyQuestions.jsx","components/VerifyExamQuestions.jsx","pages/CreateExam.jsx","components/TeacherBottomNav.jsx","pages/TeacherHome.jsx","components/ForgotPasswordForm.jsx","components/EmailVerificationForm.jsx","pages/ForgotPassword.jsx","pages/Error404.jsx","components/Router.jsx","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","to","style","textDecoration","Date","getFullYear","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","type","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","footers","title","description","Home","classes","Fragment","CssBaseline","AppBar","position","elevation","className","Toolbar","noWrap","Button","Container","maxWidth","component","gutterBottom","Grid","container","justify","map","item","xs","sm","Link","href","Box","mt","useStylesTeacherHome","root","paddingRight","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","height","overflow","paper","flexDirection","fixedHeight","ListItems","match","Divider","List","ListSubheader","inset","url","all","ListItem","button","ListItemIcon","ListItemText","primary","onClick","localStorage","clear","window","location","replace","StudentListItems","HomeDrawer","open","handleDrawerClose","listItems","Drawer","clsx","IconButton","minWidth","bottom","StudentBottomNav","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","ControlledTextField","name","error","control","rules","required","InputProps","multiline","rows","autoFocus","FormControl","Boolean","as","TextField","fullWidth","defaultValue","FormHelperText","message","JoinClassDialog","setOpen","handleAdd","useForm","handleSubmit","errors","handleClose","Dialog","onClose","aria-labelledby","onSubmit","form","classCode","DialogTitle","id","DialogContent","DialogContentText","DialogActions","baseURL","getAll","a","request","axios","get","response","data","getAllClass","section","courseCode","courseDesc","getClasses","getClass","newSection","post","getProfClass","email","filter","prof","getProfClasses","sections","getAllProfClasses","deleteClass","delete","params","request2","response2","status","addStudent","put","getStudents","studentEnrolled","getStudentClass","clas","includes","signup","newUser","signin","user","getUser","firstName","middleName","lastName","idNumber","contactNumber","isTeacher","newExam","getProfExams","exam","getUpcomingExams","classcode","isAfter","parseISO","deadline","submittedExam","some","submission","getItem","getAllClasses","getStudentExams","studentClasses","classCodes","allExams","addExamSubmission","examUUID","examSubmission","uuid","getNotSubmittedExams","getSubmittedExams","card","cardDetails","cardMedia","SectionsCard","profName","setProfName","exams","setExams","useEffect","userServices","then","catch","err","console","log","examServices","examsLength","md","Card","CardActionArea","CardContent","paragraph","Skeleton","length","Hidden","xsDown","CardMedia","image","DashboardStudent","studentsClassesLength","openJoinClass","setOpenJoinClass","snackbarSeverity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","openSnackbar","setOpenSnackbar","setStudentClasses","handleSnackbarClose","reason","getStudentClasses","classServices","newStudentClasses","minHeight","Snackbar","autoHideDuration","severity","Fab","aria-label","size","top","right","students","returnedData","heroButtons","cardGrid","slice","reverse","i","StudentClassCard","pt","CircularProgress","useStylesTeacherExam","background","cardContent","StudentExamsCard","totalScore","score","setSection","alreadySubmitted","rightSched","now","sched","isBefore","questions","examName","examDesc","format","CardActions","disabled","pathname","path","examProps","StudentExams","AccountStudent","StudentExamHistory","getTotalScore","reduce","acc","cur","points","parseInt","getScore","question","answer","answers","submittedBy","answerUUIDs","Object","keys","ii","HomeAppBar","handleDrawerOpen","edge","ControlledRadioButton","choices","RadioGroup","target","choice","FormControlLabel","Radio","RenderExamQuestions","handleDialogOpen","examQuestions","index","push","Paper","noValidate","formData","qstn","lg","StudentExamPage","props","examAnswers","setExamAnswers","setExamUUID","differenceInSeconds","counter","setCounter","backdropOpen","setBackdropOpen","backdrop","timer","setInterval","clearInterval","Backdrop","aria-describedby","seconds","helperDate","addSeconds","formattedTime","Student","useRouteMatch","StudentAppBar","exact","Dashboard","Account","avatar","secondary","main","submit","backdropUseStyles","SignIn","reset","showPassword","setShowPassword","backdropClasses","Avatar","users","success","password","setItem","token","endAdornment","InputAdornment","onMouseDown","SignUp","setIsTeacher","showRePassword","setReShowPassword","history","useHistory","repassword","setTimeout","render","onCheckChange","Checkbox","checked","ExamsCard","totalExaminees","classCapacity","Title","children","ExamScoresTable","setUsers","getName","fullName","forEach","studentEmail","Table","TableHead","TableRow","TableCell","TableBody","row","ExamScoresDialog","examSubmissionLength","textAlign","ExamTeacher","openExamDetailsDialog","setOpenExamDetailsDialog","setExam","handleStudentsOpen","shortid","require","AddSectionDialog","generate","toUpperCase","EnrolledStudentsDialog","enrolledStudents","enrolledStudent","StudentsTeacher","openAddSection","setOpenAddSection","setSections","setClassCode","setEnrolledStudents","openEnrolledStudentsDialog","setOpenEnrolledStudentsDialog","handleClickOpen","handleStudentsDialogOpen","sectionServices","classesLength","handleDelete","useStylesForgotPassword","layout","stepper","buttons","ControlledSelect","menu","InputLabel","Select","MenuItem","ControlledDateTimePicker","selectedDate","handleDateChange","maxDate","disableFuture","openTo","utils","DateFnsUtils","DateTimePicker","inputVariant","showTodayButton","disablePast","ForgotPasswordForm","submitExamDetails","handleNext","DateAdd","days","selectedDateSched","setSelectedDateSched","hours","minutes","selectedDateDeadline","setSelectedDateDeadline","Section","formatISO","uuidv4","months","IsAfter","DateSub","QuestionAdderDialog","ExamPool","noitems","questionItem","ExamQuestionsForm","submitExamQuestions","setQuestions","openQuestionAdder","setOpenQuestionAdder","newQuestion","totalItems","transformedQuestions","formDataClone","dummyObj","dummyIndex","dummyI","outerloop","key","hasOwnProperty","VerifyQuestions","submitQuestions","steps","ForgotPassword","examDetails","setExamDetails","setExamQuestions","activeStep","setActiveStep","handleSubmitExamDetails","examDetail","handleSubmitExamQuestions","examQuestion","handleSubmitQuestions","isChecked","Stepper","Step","StepLabel","step","ExamDetailsForm","VerifyExamQuestions","Error","getStepContent","TeacherBottomNav","TeacherHome","CreateExam","autoComplete","PaymentForm","placeholder","helperText","EmailVerificationForm","Error404","Router","loggedIn","redirectURL","App","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1cdfb2e.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <RouterLink\n        to=\"/\"\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        BPSU Online Examination System\n      </RouterLink>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  CssBaseline,\n  Grid,\n  Toolbar,\n  Typography,\n  Link,\n  makeStyles,\n  Container,\n  Box,\n} from \"@material-ui/core\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\",\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst footers = [\n  {\n    title: \"Developers  \",\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\n  },\n  {\n    title: \"Features\",\n    description: [\n      \"Cool stuff\",\n      \"Random feature\",\n      \"Team feature\",\n      \"Developer stuff\",\n      \"Another one\",\n    ],\n  },\n  {\n    title: \"Resources\",\n    description: [\n      \"Resource\",\n      \"Resource name\",\n      \"Another resource\",\n      \"Final resource\",\n    ],\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"],\n  },\n];\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}>\n            BPSU Online Examination System\n          </Typography>\n          <Button color=\"primary\" variant=\"outlined\" className={classes.link}>\n            <BrowserLink\n              to=\"signin\"\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              Login\n            </BrowserLink>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      {/* Hero unit */}\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          New Normal of Taking Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Our goal with this system is to make the examination experience easier\n          for both the teacher and students in this tough times.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n\n      {/* Footer */}\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map(footer => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map(item => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStylesTeacherHome = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default useStylesTeacherHome;\n","import React from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst ListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Student Management</ListSubheader>\n          {/* <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link> */}\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/students`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Classes\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default ListItems;\n","import React from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst StudentListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Menu</ListSubheader>\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <Link to={`${match.url}/exams`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/examhistory`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HistoryIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"History\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default StudentListItems;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\nimport { Drawer, IconButton } from \"@material-ui/core\";\nimport ListItems from \"../components/ListItems\";\nimport StudentListItems from \"../components/StudentListItems\";\n\nconst HomeDrawer = ({ open, handleDrawerClose, match, listItems }) => {\n  const classes = useStylesTeacherHome();\n  return (\n    <Drawer\n      variant=\"temporary\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n      }}\n      open={open}>\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      {listItems === \"Student\" ? (\n        <StudentListItems match={match} />\n      ) : (\n        <ListItems match={match} />\n      )}\n    </Drawer>\n  );\n};\n\nexport default HomeDrawer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function StudentBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      <BottomNavigationAction\n        label=\"Home\"\n        icon={<HomeIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}/exams`}\n      />\n      <BottomNavigationAction\n        label=\"History\"\n        icon={<HistoryIcon />}\n        component={Link}\n        to={`${match.url}/examhistory`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { FormControl, TextField, FormHelperText } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledTextField = ({\n  name,\n  error,\n  label,\n  control,\n  rules,\n  variant = \"outlined\",\n  required = false,\n  type = \"text\",\n  InputProps = null,\n  multiline = false,\n  rows = null,\n  autoFocus = null,\n}) => {\n  return (\n    <FormControl style={{ minWidth: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <TextField\n            autoFocus={autoFocus}\n            type={type}\n            required={required}\n            name={name}\n            label={label}\n            fullWidth\n            variant={variant}\n            error={Boolean(error[name])}\n            InputProps={InputProps}\n            multiline={multiline}\n            rows={rows}\n          />\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={required ? { required: `${label} is required` } : {}}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledTextField;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst JoinClassDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    handleAdd(form.classCode);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Join a Class</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To enroll in a class, ask your professor for a classcode\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Class Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                autoFocus={true}\n                name=\"classCode\"\n                label=\"Class Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Join\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default JoinClassDialog;\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getAllClass = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClass = async courseCode => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  for (const section of response.data) {\n    if (section.classCode === courseCode) return section;\n  }\n};\n\nconst create = async newSection => {\n  const request = axios.post(`${baseURL}/api/class`, newSection);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfClass = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.filter(section => section.prof === email);\n};\n\nconst getProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getAllProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst deleteClass = async classCode => {\n  const request = axios.delete(`${baseURL}/api/class`, {\n    params: { classCode: classCode },\n  });\n  const response = await request;\n\n  const request2 = axios.delete(`${baseURL}/api/exam`, {\n    params: { classCode: classCode },\n  });\n  const response2 = await request2;\n\n  return `Class Deletion:${response.status} Exam Deletion:${response2.status}`;\n};\n\nconst addStudent = async (classCode, email) => {\n  const request = axios.put(`${baseURL}/api/class`, {\n    classCode: classCode,\n    email: email,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getStudents = async classCode => {\n  const classes = await getClass(classCode);\n  return classes.studentEnrolled;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAll();\n\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nexport default {\n  create,\n  getAll,\n  getAllClass,\n  getClasses,\n  getClass,\n  getProfClass,\n  getProfClasses,\n  getAllProfClasses,\n  deleteClass,\n  addStudent,\n  getStudents,\n  getStudentClass,\n};\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst signup = async newUser => {\n  const request = axios.post(`${baseURL}/api/signup`, newUser);\n  const response = await request;\n  return response.data;\n};\n\nconst signin = async user => {\n  const request = axios.post(`${baseURL}/api/signin`, user);\n  const response = await request;\n  return response.data;\n};\n\nconst getUser = async email => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  const data = response.data.filter(user => user.email === email);\n  return {\n    firstName: data[0].firstName,\n    middleName: data[0].middleName,\n    lastName: data[0].lastName,\n    idNumber: data[0].idNumber,\n    contactNumber: data[0].contactNumber,\n    email: data[0].email,\n    isTeacher: data[0].isTeacher,\n  };\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  return response.data;\n};\n\nexport default { signup, signin, getUser, getAll };\n","import axios from \"axios\";\nimport isAfter from \"date-fns/isAfter\";\nimport { parseISO } from \"date-fns\";\n\nconst baseURL = \"\";\n\nconst create = async newExam => {\n  const request = axios.post(`${baseURL}/api/exam`, newExam);\n  const response = await request;\n  return response.data;\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfExams = async email => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(exam => exam.prof === email);\n};\n\nconst getUpcomingExams = async classcode => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(\n    exam =>\n      exam.classCode === classcode &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getAllClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAllClasses();\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nconst getStudentExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date())\n  );\n};\n\nconst addExamSubmission = async (examUUID, examSubmission) => {\n  const request = axios.put(`${baseURL}/api/exam`, {\n    uuid: examUUID,\n    examSubmission: examSubmission,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getNotSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nexport default {\n  create,\n  getAll,\n  getProfExams,\n  getUpcomingExams,\n  getStudentExams,\n  addExamSubmission,\n  getNotSubmittedExams,\n  getSubmittedExams,\n};\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../services/users\";\nimport examServices from \"../services/exams\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({ section }) => {\n  const classes = useStyles();\n  const [profName, setProfName] = useState();\n  const [exams, setExams] = useState();\n\n  useEffect(() => {\n    // Get Prof Name\n    userServices\n      .getUser(section.prof)\n      .then(user => {\n        setProfName(`${user.firstName} ${user.middleName} ${user.lastName}`);\n      })\n      .catch(err => console.log(err.message));\n\n    // Get Upcoming Exams\n    examServices\n      .getUpcomingExams(section.classCode)\n      .then(exams => {\n        setExams(exams);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, [section]);\n\n  const renderUpcomingExams = examsLength => {\n    if (examsLength) return `Upcoming Exams: ${exams.length}`;\n    else return \"No Upcoming Exams\";\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {`${section.courseCode} (${section.section})`}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph>\n                {section.courseDesc}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {profName ? `Professor: ${profName}` : <Skeleton />}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {exams ? renderUpcomingExams(exams.length) : <Skeleton />}\n              </Typography>\n            </CardContent>\n          </div>\n        </CardActionArea>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport JoinClassDialog from \"../components/JoinClassDialog\";\nimport classServices from \"../services/classes\";\nimport StudentClassCard from \"../components/StudentClassCard\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Divider,\n  Fab,\n  Snackbar,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst DashboardStudent = () => {\n  const [openJoinClass, setOpenJoinClass] = useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [studentClasses, setStudentClasses] = useState();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const getStudentClasses = () => {\n    classServices\n      .getStudentClass(localStorage.getItem(\"email\"))\n      .then(newStudentClasses => {\n        setStudentClasses(newStudentClasses);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  };\n\n  const handleAdd = classCode => {\n    classServices.getStudents(classCode).then(students => {\n      if (students.includes(localStorage.getItem(\"email\"))) {\n        setSnackbarSeverity(\"error\");\n        setSnackbarMessage(\"Already enrolled in that class\");\n        setOpenSnackbar(!openSnackbar);\n      } else {\n        classServices\n          .addStudent(classCode, localStorage.getItem(\"email\"))\n          .then(returnedData => {\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Class enrolled succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            getStudentClasses();\n          })\n          .catch(err => {\n            console.log(\"Error :>> \", err.message);\n          });\n      }\n    });\n  };\n\n  const renderDashboard = studentsClassesLength => {\n    if (studentsClassesLength) {\n      return studentClasses\n        .slice()\n        .reverse()\n        .map((section, i) => {\n          return <StudentClassCard key={i} section={section} />;\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Heeey, why haven't you joined a class yet? :/`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Join a class using the join class button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentClasses();\n  }, []);\n\n  useEffect(() => {}, [studentClasses]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenJoinClass(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Join Class Dialog */}\n      <JoinClassDialog\n        open={openJoinClass}\n        setOpen={setOpenJoinClass}\n        handleAdd={handleAdd}\n      />\n\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Home\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee your statistics and enrolled classes here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenJoinClass(true);\n                }}>\n                Join New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {studentClasses ? (\n            renderDashboard(studentClasses.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default DashboardStudent;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesTeacherExam = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default useStylesTeacherExam;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../services/classes\";\nimport { format, parseISO, isAfter, isBefore } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentExamsCard = ({ exam, match, totalScore, score }) => {\n  const [section, setSection] = useState();\n\n  const alreadySubmitted = () => {\n    return exam.submittedExam.some(\n      submission => submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n    );\n  };\n\n  const rightSched = () => {\n    return (\n      isAfter(Date.now(), parseISO(exam.sched)) &&\n      isBefore(Date.now(), parseISO(exam.deadline))\n    );\n  };\n\n  const renderExamStatus = () => {\n    if (alreadySubmitted()) {\n      return `Exam has already been submitted`;\n    } else if (!rightSched()) {\n      return \"Exam will be available on scheduled date\";\n    } else {\n      return \"Take Exam\";\n    }\n  };\n\n  const renderButtonText = () => {\n    if (alreadySubmitted() || !rightSched()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam.classCode, exam.questions]);\n\n  useEffect(() => {}, [section]);\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Desc */}\n          <Typography gutterBottom align=\"center\">\n            {section ? `${section.courseDesc}` : <Skeleton />}\n          </Typography>\n\n          {/* Course Code & Section */}\n          <Typography\n            variant=\"body2\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-0.5rem\" }}>\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Description */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\" paragraph>\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n\n          <Divider variant=\"middle\" style={{ marginTop: \"1rem\" }} />\n\n          {/* Exam Score  */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            color=\"secondary\"\n            style={{ marginTop: \"1rem\", marginBottom: \"-1rem\" }}>\n            {alreadySubmitted() ? `Score: ${score} / ${totalScore}` : null}\n          </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\", marginBottom: \"1rem\" }}>\n          <Button size=\"small\" color=\"primary\" disabled={renderButtonText()}>\n            <Link\n              to={{\n                pathname: `${match.path}/studentexampage`,\n                examProps: { exam: exam },\n              }}\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              {renderExamStatus()}\n            </Link>\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default StudentExamsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExams = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getNotSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard key={exam.uuid} exam={exam} match={match} />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Wooohoooooo! You have no upcoming exams!`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Previous exam records can be reviewed instead\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee incoming exams here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExams;\n","import React from \"react\";\nimport { Container, Typography, Divider } from \"@material-ui/core\";\n\nconst AccountStudent = () => {\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Account\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your account settings here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n    </div>\n  );\n};\n\nexport default AccountStudent;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExamHistory = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = exam => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === localStorage.getItem(\"email\")\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (questions[i].answer === answers[answerUUIDs[ii]]) {\n            points += parseInt(questions[i].points);\n          } else if (questions[i].type === \"essayType\") {\n            points += parseInt(questions[i].points);\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard\n            key={exam.uuid}\n            exam={exam}\n            match={match}\n            totalScore={getTotalScore(exam)}\n            score={getScore(exam)}\n          />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`It's empty out here, you have no exam records yet :3`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Answered exams will be sent here\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exam History\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Review previous exam records\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExamHistory;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Student ${localStorage.getItem(\"lastName\")}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormHelperText,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledRadioButton = ({\n  error,\n  control,\n  name,\n  label,\n  required = false,\n  choices,\n}) => {\n  const [value, setValue] = React.useState(\"a\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl error={Boolean(error[name])} component=\"fieldset\">\n      {/* <FormLabel id={`${name}Label`}>{label}</FormLabel> */}\n      <Controller\n        as={\n          <RadioGroup required={required} value={value} onChange={handleChange}>\n            {choices.map((choice, i) => {\n              return (\n                <FormControlLabel\n                  key={i}\n                  value={choice.value}\n                  label={choice.label}\n                  control={<Radio />}\n                />\n              );\n            })}\n          </RadioGroup>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledRadioButton;\n","import React from \"react\";\nimport ControlledTextField from \"./ControlledTextField\";\nimport ControlledRadioButton from \"./ControlledRadioButton\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport { useForm } from \"react-hook-form\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\n\nconst RenderExamQuestions = ({ exam, handleDialogOpen }) => {\n  const { handleSubmit, errors, control } = useForm();\n  let examQuestions = [];\n\n  // Form Submit Handler\n  const submitHandle = formData => {\n    formData.submittedBy = localStorage.getItem(\"email\");\n    handleDialogOpen(formData, exam.uuid);\n  };\n\n  for (let index = 0; index < exam.questions.length; index++) {\n    // Multiple Choice\n    if (exam.questions[index].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={exam.questions[index].choices}\n          />\n        </Paper>\n      );\n\n      // True or False\n    } else if (exam.questions[index].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={[\n              { value: \"t\", label: \"True\" },\n              { value: \"f\", label: \"False\" },\n            ]}\n          />\n        </Paper>\n      );\n\n      // Identification\n    } else if (exam.questions[index].type === \"identification\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n\n      // Essay Type\n    } else if (exam.questions[index].type === \"essayType\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            multiline\n            rows={8}\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n    }\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit(submitHandle)}>\n      <Grid container spacing={2} justify=\"center\">\n        {examQuestions.map((qstn, i) => (\n          <Grid key={i} item xs={12} md={10} lg={8}>\n            {qstn}\n          </Grid>\n        ))}\n      </Grid>\n\n      <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit Exam\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </form>\n  );\n};\n\nexport default RenderExamQuestions;\n","import React, { useState, useEffect } from \"react\";\nimport RenderExamQuestions from \"./RenderExamQuestions\";\nimport examServices from \"../services/exams\";\nimport { differenceInSeconds, parseISO, addSeconds, format } from \"date-fns\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  CircularProgress,\n  Backdrop,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst StudentExamPage = props => {\n  const exam = props.location.examProps.exam;\n  const [open, setOpen] = useState(false);\n  const [examAnswers, setExamAnswers] = useState();\n  const [examUUID, setExamUUID] = useState();\n  const [counter, setCounter] = useState(\n    differenceInSeconds(parseISO(exam.deadline), parseISO(exam.sched))\n  );\n  const [backdropOpen, setBackdropOpen] = useState(false);\n\n  const useStyles = makeStyles(theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const formattedTime = seconds => {\n    var helperDate = addSeconds(new Date(0), seconds);\n    return format(helperDate, \"mm:ss\");\n  };\n\n  const handleClickOpen = (formData, examUUID) => {\n    setExamAnswers(formData);\n    setExamUUID(examUUID);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    setBackdropOpen(true);\n\n    examServices\n      .addExamSubmission(examUUID, examAnswers)\n      .then(returnedData => {\n        setBackdropOpen(false);\n        window.location.replace(\"/\");\n        console.log(\"returnedData :>> \", returnedData);\n      })\n      .catch(err => console.log(err.message));\n    handleClose();\n  };\n\n  useEffect(() => {\n    const timer =\n      counter > 0 &&\n      setInterval(() => {\n        setCounter(counter - 1);\n      }, 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  return (\n    <div style={{ minHeight: \"100vh\", marginBottom: \"3rem\" }}>\n      {/* Backdrop */}\n      <Backdrop className={classes.backdrop} open={backdropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {/* Yes/No Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit Exam?\"}</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Container maxWidth=\"sm\">\n        {/* Exam Title */}\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          {`${exam.examName}`}\n        </Typography>\n      </Container>\n\n      {/* Exam Desc */}\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n        paragraph>\n        {`${exam.examDesc}`}\n      </Typography>\n\n      {/* Exam Timer */}\n      <Typography\n        variant=\"body1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\">\n        {`Exam will auto-submit in: ${formattedTime(counter)}`}\n      </Typography>\n\n      {/* Divider */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Render Exam Questions */}\n      <RenderExamQuestions\n        exam={exam}\n        style={{ marginBottom: \"3rem\" }}\n        handleDialogOpen={handleClickOpen}\n      />\n    </div>\n  );\n};\n\nexport default StudentExamPage;\n","import React from \"react\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport StudentBottomNav from \"../components/StudentBottomNav\";\nimport Dashboard from \"../components/DashboardStudent\";\nimport Exams from \"../components/StudentExams\";\nimport Account from \"../components/AccountStudent\";\nimport History from \"../components/StudentExamHistory\";\nimport StudentAppBar from \"../components/StudentAppBar\";\nimport StudentExamPage from \"../components/StudentExamPage\";\n\nconst Student = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <StudentAppBar open={open} handleDrawerOpen={handleDrawerOpen} />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n        listItems=\"Student\"\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <StudentBottomNav match={match} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            <Route path={`${match.path}`} exact component={Dashboard} />\n            <Route path={`${match.path}/exams`} exact>\n              <Exams match={match} />\n            </Route>\n            <Route path={`${match.path}/examhistory`} exact>\n              <History match={match} />\n            </Route>\n            <Route path={`${match.path}/account`} exact component={Account} />\n            <Route\n              path={`${match.path}/studentexampage`}\n              exact\n              component={StudentExamPage}\n            />\n          </Switch>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Student;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport users from \"../services/users\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  makeStyles,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst backdropUseStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst SignIn = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const backdropClasses = backdropUseStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    setOpen(!open);\n    users\n      .signin(formData)\n      .then(returnedData => {\n        if (returnedData.success) {\n          reset({ email: \"\", password: \"\" });\n          localStorage.setItem(\"jwtCookie\", returnedData.token);\n          localStorage.setItem(\"email\", returnedData.email);\n          localStorage.setItem(\"isTeacher\", returnedData.isTeacher);\n          localStorage.setItem(\"lastName\", returnedData.lastName);\n          window.location.replace(\"/\");\n        } else {\n          handleClose();\n          reset({ email: \"\", password: \"\" });\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"Invalid Credentials\");\n          setOpenSnackbar(!openSnackbar);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <Backdrop\n        className={backdropClasses.backdrop}\n        open={open}\n        onClick={handleClose}>\n        <CircularProgress color=\"secondary\" />\n      </Backdrop>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <BrowserLink\n                to=\"forgotpassword\"\n                style={{ textDecoration: \"inherit\" }}>\n                Forgot password?\n              </BrowserLink>\n            </Grid>\n            <Grid item>\n              <BrowserLink to=\"/signup\" style={{ textDecoration: \"inherit\" }}>\n                Don't have an account? Sign Up\n              </BrowserLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport users from \"../services/users\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  Container,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [isTeacher, setIsTeacher] = useState(false);\n  const handleCheckboxChange = e => {\n    setIsTeacher(!isTeacher);\n    return isTeacher ? false : true;\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [showRePassword, setReShowPassword] = useState(false);\n  const handleClickReShowPassword = () => setReShowPassword(!showRePassword);\n  const handleMouseDownRePassword = () => setReShowPassword(!showRePassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  let history = useHistory();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    if (formData.password !== formData.repassword) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Password does not match\");\n      setOpenSnackbar(!openSnackbar);\n    } else {\n      users\n        .signup(formData)\n        .then(returnedData => {\n          if (returnedData === \"email already in use\") {\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(\"Email is already in use\");\n            setOpenSnackbar(!openSnackbar);\n          } else {\n            reset();\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Signed up succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            setTimeout(() => {\n              history.push(\"signin\");\n            }, 1000);\n          }\n        })\n        .catch(error => {\n          console.log(\"Error: \", error);\n        });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            {/* First Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"firstName\"\n                label=\"First Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Middle Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"middleName\"\n                label=\"Middle Name\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Last Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"lastName\"\n                label=\"Last Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* ID Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"idNumber\"\n                label=\"ID Number\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Email Address */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Contact Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"contactNumber\"\n                label=\"Contact Number\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n\n            {/* Re:Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"repassword\"\n                label=\"Retype Password\"\n                required={true}\n                type={showRePassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickReShowPassword}\n                        onMouseDown={handleMouseDownRePassword}>\n                        {showRePassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Controller\n                    name=\"isTeacher\"\n                    defaultValue={false}\n                    render={({ onChange: onCheckChange }) => {\n                      return (\n                        <Checkbox\n                          checked={isTeacher}\n                          onChange={() => onCheckChange(handleCheckboxChange())}\n                        />\n                      );\n                    }}\n                    control={control}\n                  />\n                }\n                key={\"isTeacher\"}\n                label={\"Sign up as teacher?\"}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign in\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <RouterLink to=\"/signin\" style={{ textDecoration: \"inherit\" }}>\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Professor ${name}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../services/classes\";\nimport { format, parseISO } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst ExamsCard = ({ exam, handleDialogOpen }) => {\n  const [section, setSection] = useState();\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam]);\n\n  const renderExamTotalExaminees = (totalExaminees, classCapacity) => {\n    if (totalExaminees === classCapacity) {\n      return \"Everyone has taken this exam\";\n    } else {\n      return `${totalExaminees}/${classCapacity} has taken this exam`;\n    }\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          {/* Exam Name */}\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Code and Section */}\n          <Typography gutterBottom align=\"center\">\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Desc */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\">\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n          <div>\n            <Divider\n              variant=\"middle\"\n              style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n            />\n            <Typography gutterBottom color=\"secondary\" align=\"center\">\n              {section ? (\n                renderExamTotalExaminees(\n                  exam.submittedExam.length,\n                  section.classCapacity\n                )\n              ) : (\n                <Skeleton />\n              )}\n            </Typography>\n          </div>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => handleDialogOpen(exam)}>\n            View\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ExamsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Title = props => {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport userServices from \"../services/users\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst ExamScoresTable = ({ title, exam }) => {\n  const [users, setUsers] = useState();\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = (exam, studentEmail) => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === studentEmail\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (questions[i].answer === answers[answerUUIDs[ii]]) {\n            points += parseInt(questions[i].points);\n          } else if (questions[i].type === \"essayType\") {\n            points += parseInt(questions[i].points);\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const getName = email => {\n    let fullName = \"\";\n\n    users.forEach(user => {\n      if (user.email === email) {\n        fullName = `${user.lastName}, ${user.firstName} ${user.middleName}`;\n      }\n    });\n\n    return fullName;\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => setUsers(users))\n      .catch(err => console.log(err.message));\n  }, []);\n\n  const rows = exam.submittedExam.map((submission, i) => {\n    const id = i;\n    const name = submission.submittedBy;\n    const score = getScore(exam, submission.submittedBy);\n    const totalScore = getTotalScore(exam);\n    return { id, name, score, totalScore };\n  });\n\n  return (\n    <div>\n      <Title>{title}</Title>\n      <Table size=\"medium\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Score</TableCell>\n            <TableCell align=\"right\">Max Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{users ? getName(row.name) : <Skeleton />}</TableCell>\n              <TableCell>{row.score}</TableCell>\n              <TableCell align=\"right\">{row.totalScore}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ExamScoresTable;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport ExamScoresTable from \"./ExamScoresTable\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\n\nconst ExamScoresDialog = ({ open, setOpen, exam }) => {\n  const classes = useStylesTeacherHome();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderStudentScores = examSubmissionLength => {\n    if (examSubmissionLength) {\n      return (\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <ExamScoresTable title=\"Submissions\" exam={exam} />\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return <Typography>No submissions yet</Typography>;\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\n        {exam ? exam.examName : <Skeleton />}\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {exam ? renderStudentScores(exam.submittedExam.length) : <Skeleton />}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExamScoresDialog;\n","import React, { useEffect, useState } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport ExamsCard from \"./ExamsCard\";\nimport { Link } from \"react-router-dom\";\nimport examServices from \"../services/exams\";\nimport ExamScoresDialog from \"./ExamScoresDialog\";\nimport {\n  Button,\n  Box,\n  Fab,\n  Grid,\n  Typography,\n  Container,\n  Divider,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst ExamTeacher = ({ match }) => {\n  const [exams, setExams] = useState();\n  const [openExamDetailsDialog, setOpenExamDetailsDialog] = useState(false);\n  const [exam, setExam] = useState();\n\n  useEffect(() => {\n    examServices\n      .getProfExams(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  const handleDialogOpen = exam => {\n    setExam(exam);\n    setOpenExamDetailsDialog(true);\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map((exam, i) => (\n          <ExamsCard key={i} exam={exam} handleDialogOpen={handleDialogOpen} />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Yikes! you haven't created an exam yet :/`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create an exam using the add button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      <Link\n        to={`${match.url}/createexam`}\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          size=\"medium\"\n          style={{\n            margin: 0,\n            top: \"auto\",\n            right: \"2rem\",\n            bottom: \"5rem\",\n            position: \"fixed\",\n          }}>\n          <CreateIcon />\n        </Fab>\n      </Link>\n\n      {/* Exam Scores Dialog */}\n      <ExamScoresDialog\n        open={openExamDetailsDialog}\n        setOpen={setOpenExamDetailsDialog}\n        exam={exam}\n      />\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Create and manage exam for your students here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\">\n                <Link\n                  to={`${match.url}/createexam`}\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n                  Create New Exam\n                </Link>\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      {/* End hero unit */}\n\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ExamTeacher;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({ section, handleDialogOpen, handleStudentsOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {`${section.courseCode} (${section.section})`}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {section.courseDesc}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              {section.studentEnrolled ? section.studentEnrolled.length : 0}\n              {` / ${section.classCapacity} students enrolled`}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {`Class Code: ${section.classCode}`}\n            </Typography>\n          </CardContent>\n\n          <CardActions style={{ marginTop: \"-1.5rem\" }}>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleStudentsOpen(section.studentEnrolled);\n              }}>\n              View\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleDialogOpen(section.classCode);\n              }}>\n              Delete\n            </Button>\n          </CardActions>\n        </div>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst shortid = require(\"shortid\");\n\nconst AddSectionDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    const classCode = shortid.generate();\n\n    handleAdd(\n      form.courseCode.toUpperCase(),\n      form.courseDesc.toUpperCase(),\n      form.section.toUpperCase(),\n      form.classCapacity,\n      classCode,\n      (form.image = `https://picsum.photos/seed/${classCode}/166/244`)\n    );\n\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Create new section</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a new section, please enter the subject, section and\n            amount of students\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Course Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseCode\"\n                label=\"Course Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Course Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseDesc\"\n                label=\"Course Name\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Section */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"section\"\n                label=\"Section\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Max Students */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"classCapacity\"\n                label=\"Max students allowed\"\n                variant=\"standard\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddSectionDialog;\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../services/users\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst EnrolledStudentsDialog = ({ open, setOpen, enrolledStudents }) => {\n  const [users, setUsers] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => {\n        setUsers(\n          users.filter(user =>\n            enrolledStudents.some(\n              enrolledStudent => enrolledStudent === user.email\n            )\n          )\n        );\n      })\n      .catch(err => console.log(err.message));\n  }, [enrolledStudents]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Enrolled Students</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {users ? (\n            users.map((user, i) => {\n              return (\n                <Typography variant=\"body1\" key={i}>\n                  {`${i + 1}.) ${user.lastName}, ${user.firstName} ${\n                    user.middleName\n                  }`}\n                </Typography>\n              );\n            })\n          ) : (\n            <Skeleton width=\"100%\" />\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EnrolledStudentsDialog;\n","import React, { useEffect, useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport SectionsCard from \"../components/SectionsCard\";\nimport AddSectionDialog from \"../components/AddSectionDialog\";\nimport sectionServices from \"../services/classes\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Fab,\n  Divider,\n  Box,\n  Snackbar,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport EnrolledStudentsDialog from \"./EnrolledStudentsDialog\";\n\nconst StudentsTeacher = () => {\n  const [openAddSection, setOpenAddSection] = useState(false);\n  const [sections, setSections] = useState();\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [classCode, setClassCode] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [enrolledStudents, setEnrolledStudents] = useState();\n  const [openEnrolledStudentsDialog, setOpenEnrolledStudentsDialog] = useState(\n    false\n  );\n\n  const handleDelete = classCode => {\n    sectionServices\n      .deleteClass(classCode)\n      .then(returnedData => {\n        getClasses();\n        setSnackbarSeverity(\"success\");\n        setSnackbarMessage(\"Class succesfully deleted\");\n        setOpenSnackbar(!openSnackbar);\n      })\n      .catch(err => {\n        console.log(\"Error :>> \", err.message);\n      });\n  };\n\n  const handleClickOpen = classCode => {\n    setOpen(true);\n    setClassCode(classCode);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    handleDelete(classCode);\n    handleClose();\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const handleStudentsDialogOpen = enrolledStudents => {\n    setEnrolledStudents(enrolledStudents);\n    setOpenEnrolledStudentsDialog(true);\n  };\n\n  const handleAdd = (\n    courseCode,\n    courseDesc,\n    section,\n    classCapacity,\n    classCode,\n    image\n  ) => {\n    const newSection = {\n      courseCode: courseCode,\n      courseDesc: courseDesc,\n      section: section,\n      classCapacity: classCapacity,\n      classCode: classCode,\n      image: image,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    sectionServices\n      .create(newSection)\n      .then(returnedData => {\n        if (returnedData === \"section already exists\") {\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"A section with that subject already exists\");\n          setOpenSnackbar(!openSnackbar);\n        } else {\n          setSnackbarSeverity(\"success\");\n          setSnackbarMessage(\"Section created\");\n          setOpenSnackbar(!openSnackbar);\n          setSections([...sections, newSection]);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  const getClasses = () => {\n    sectionServices\n      .getProfClass(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  useEffect(() => {}, [sections]);\n\n  const renderClasses = classesLength => {\n    if (classesLength) {\n      return sections\n        .slice(0)\n        .reverse()\n        .map((section, i) => {\n          return (\n            <SectionsCard\n              key={i}\n              section={section}\n              handleDialogOpen={handleClickOpen}\n              handleStudentsOpen={handleStudentsDialogOpen}\n            />\n          );\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Awwww. You haven't created a class yet :(`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create a class using the add button to get started\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenAddSection(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete class?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This wil delete this class and all its exams. This process is\n            unreversible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Add section Dialog */}\n      <AddSectionDialog\n        open={openAddSection}\n        setOpen={setOpenAddSection}\n        handleAdd={handleAdd}\n      />\n\n      {/* Enrolled Students Dialog */}\n      <EnrolledStudentsDialog\n        open={openEnrolledStudentsDialog}\n        setOpen={setOpenEnrolledStudentsDialog}\n        enrolledStudents={enrolledStudents}\n      />\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Classes\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your students here by creating classes in which they can enroll\n          in\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenAddSection(true);\n                }}>\n                Create New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      {/* End hero unit */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {sections ? (\n            renderClasses(sections.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentsTeacher;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesForgotPassword = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStylesForgotPassword;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledSelect = ({\n  error,\n  control,\n  name,\n  label,\n  menu,\n  variant = \"outlined\",\n  required = false,\n}) => {\n  return (\n    <FormControl\n      style={{ minWidth: \"100%\" }}\n      error={Boolean(error[name])}\n      variant={variant}>\n      <InputLabel id={`${name}Label`}>{label}</InputLabel>\n      <Controller\n        as={\n          <Select required={required}>\n            <MenuItem value=\"\">None</MenuItem>\n            {menu.map((menu, i) => {\n              return (\n                <MenuItem key={i} value={menu.value}>\n                  {menu.label}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledSelect;\n","import React from \"react\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport { Controller } from \"react-hook-form\";\nimport { FormControl, FormHelperText } from \"@material-ui/core\";\n\nconst ControlledDateTimePicker = ({\n  selectedDate,\n  handleDateChange,\n  name,\n  error,\n  control,\n  label,\n  rules = {},\n  maxDate = null,\n  disableFuture = false,\n  openTo = \"date\",\n}) => {\n  return (\n    <FormControl style={{ width: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              name={name}\n              label={label}\n              value={selectedDate}\n              onChange={handleDateChange}\n              maxDate={maxDate}\n              inputVariant=\"outlined\"\n              showTodayButton\n              disablePast\n              disableFuture={disableFuture}\n              openTo={openTo}\n            />\n          </MuiPickersUtilsProvider>\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={rules}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledDateTimePicker;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"./ControlledSelect\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport Section from \"../services/classes\";\nimport ControlledDateTimePicker from \"../components/ControlledDateTimePicker\";\nimport DateAdd from \"date-fns/add\";\nimport DateSub from \"date-fns/sub\";\nimport IsAfter from \"date-fns/isAfter\";\nimport formatISO from \"date-fns/formatISO\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ForgotPasswordForm = ({ submitExamDetails, handleNext }) => {\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const [sections, setSections] = useState([]);\n  const [selectedDateSched, setSelectedDateSched] = useState(\n    DateAdd(new Date(), { days: 1 })\n  );\n  const [selectedDateDeadline, setSelectedDateDeadline] = useState(\n    DateAdd(new Date(), { days: 1, hours: 1, minutes: 30 })\n  );\n\n  const handleDateChangeSched = sched => {\n    setSelectedDateSched(sched);\n    setSelectedDateDeadline(DateAdd(sched, { hours: 1, minutes: 30 }));\n  };\n\n  const handleDateChangeDeadline = deadline => {\n    if (IsAfter(selectedDateSched, deadline)) {\n      setSelectedDateDeadline(deadline);\n      setSelectedDateSched(DateSub(deadline, { hours: 1, minutes: 30 }));\n    } else {\n      setSelectedDateDeadline(deadline);\n    }\n  };\n\n  const submitHandle = formData => {\n    formData.sched = formatISO(selectedDateSched);\n    formData.deadline = formatISO(selectedDateDeadline);\n    formData.uuid = uuidv4();\n\n    submitExamDetails(formData);\n    handleNext();\n  };\n\n  useEffect(() => {\n    Section.getAllProfClasses(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(submitHandle)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Basic Exam Details\n        </Typography>\n        <Grid container spacing={3}>\n          {/* Exam name */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examName\"\n              label=\"Exam Name\"\n              error={errors}\n              control={control}\n              required={true}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Exam description */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examDesc\"\n              label=\"Exam Description\"\n              error={errors}\n              control={control}\n              required={true}\n              multiline={true}\n              rows={3}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Section */}\n          <Grid item xs={12}>\n            <ControlledSelect\n              name=\"classCode\"\n              error={errors}\n              control={control}\n              label=\"Class\"\n              menu={sections}\n            />\n          </Grid>\n\n          {/* Exam Date */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateSched}\n              handleDateChange={handleDateChangeSched}\n              name=\"sched\"\n              error={errors}\n              control={control}\n              label=\"Start of Examination\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n\n          {/* Exam Deadline */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateDeadline}\n              handleDateChange={handleDateChangeDeadline}\n              name=\"deadline\"\n              error={errors}\n              control={control}\n              label=\"Deadline of Examination\"\n              openTo=\"hours\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n        </Grid>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst QuestionAdderDialog = ({ open, setOpen, handleAdd }) => {\n  const { control, handleSubmit, errors } = useForm();\n\n  const onSubmit = formData => {\n    handleAdd(formData);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Add Questions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a set of questions please specify what type of questions\n            you would like\n          </DialogContentText>\n\n          <Grid container spacing={2}>\n            {/* Question Type */}\n            <Grid item xs={12}>\n              <ControlledSelect\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                name=\"type\"\n                label=\"Question Type\"\n                required={true}\n                menu={[\n                  { value: \"multichoice\", label: \"Multiple Choice\" },\n                  { value: \"trueorfalse\", label: \"True or False\" },\n                  { value: \"identification\", label: \"Identification\" },\n                  { value: \"essaytype\", label: \"Essay Type\" },\n                ]}\n              />\n            </Grid>\n\n            {/* Number of items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"noitems\"\n                label=\"Number of items\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n\n            {/* Points per items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"points\"\n                label=\"Points per item\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default QuestionAdderDialog;\n","import React from \"react\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst ExamPool = ({ question, errors, control, index }) => {\n  let questions = [];\n\n  switch (question.type) {\n    case \"multichoice\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (Multiple Choice)`}</Typography>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|multichoice`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c1`}\n                label={`Choice A`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c2`}\n                label={`Choice B`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c3`}\n                label={`Choice C`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c4`}\n                label={`Choice D`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}|Answer${i}|multichoice`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"a\", label: \"A\" },\n                  { value: \"b\", label: \"B\" },\n                  { value: \"c\", label: \"C\" },\n                  { value: \"d\", label: \"D\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"trueorfalse\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (True or False)`}</Typography>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|trueorfalse`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}|Answer${i}|trueorfalse`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"t\", label: \"True\" },\n                  { value: \"f\", label: \"False\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"identification\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Identification)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|identification`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Answer${i}|identification`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"enumeration\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|enumeration`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}></Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"essaytype\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Essay Type)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|essaytype`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    default:\n      return <div>Nothing rendered</div>;\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item>\n        <Typography\n          variant=\"h4\"\n          style={{\n            marginTop: \"2rem\",\n            marginLeft: \"1rem\",\n            marginBottom: \"-1rem\",\n          }}>\n          {`Set ${index + 1} [${question.points} points per item]`}\n        </Typography>\n      </Grid>\n      {questions.map((question, index) => {\n        return (\n          <Grid key={index} item xs={12}>\n            {question}\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default ExamPool;\n","import React, { useState } from \"react\";\nimport { Button, Typography, Fab, Divider } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport QuestionAdderDialog from \"../components/QuestionAdderDialog\";\nimport ExamPool from \"./ExamPool\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ExamQuestionsForm = ({ submitExamQuestions, handleNext }) => {\n  const [questions, setQuestions] = useState([]);\n  const [openQuestionAdder, setOpenQuestionAdder] = useState(false);\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const handleAddQuestions = () => {\n    setOpenQuestionAdder(true);\n  };\n\n  const handleAdd = newQuestion => {\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const onSubmit = formData => {\n    const totalItems = questions.reduce(\n      (acc, question) => parseInt(acc) + parseInt(question.noitems),\n      0\n    );\n\n    let transformedQuestions = [];\n    let formDataClone = formData;\n\n    for (let ii = 0; ii < totalItems; ii++) {\n      let dummyObj = {};\n      let choices = [];\n      let dummyIndex = 0;\n      let dummyI = 0;\n\n      outerloop: for (const key in formDataClone) {\n        if (formDataClone.hasOwnProperty(key)) {\n          for (let index = 0; index < questions.length; index++) {\n            for (let i = 1; i <= questions[index].noitems; i++) {\n              // Multiple choice\n              if (key === `Set${index}|Question${i}|multichoice`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.choices = choices;\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"multipleChoice\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|multichoice`];\n                choices[0] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c1`],\n                  value: \"a\",\n                };\n                choices[1] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c2`],\n                  value: \"b\",\n                };\n                choices[2] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c3`],\n                  value: \"c\",\n                };\n                choices[3] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c4`],\n                  value: \"d\",\n                };\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[\n                  `Set${dummyIndex}|Question${dummyI}|multichoice`\n                ];\n                delete formDataClone[`Set${dummyIndex}|Answer${dummyI}|Answer`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c1`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c2`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c3`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c4`];\n\n                break outerloop;\n              } // True or False\n              else if (key === `Set${index}|Question${i}|trueorfalse`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"trueOrFalse\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|trueorfalse`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|trueorfalse`];\n                delete formDataClone[`Set${index}|Answer${i}|trueorfalse`];\n\n                break outerloop;\n              } // Identification\n              else if (key === `Set${index}|Question${i}|identification`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"identification\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|identification`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|identification`];\n                delete formDataClone[`Set${index}|Answer${i}|identification`];\n\n                break outerloop;\n              } // Essay Type\n              else if (key === `Set${index}|Question${i}|essaytype`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"essayType\";\n                dummyObj.question = formDataClone[key];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|essaytype`];\n\n                break outerloop;\n              }\n            }\n          }\n        }\n      }\n      transformedQuestions.push(dummyObj);\n    }\n\n    submitExamQuestions(transformedQuestions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <Fab\n        onClick={() => handleAddQuestions()}\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"large\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}>\n        <AddIcon />\n      </Fab>\n\n      <QuestionAdderDialog\n        handleAdd={handleAdd}\n        open={openQuestionAdder}\n        setOpen={setOpenQuestionAdder}\n      />\n\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Question Pool\n        </Typography>\n        <Divider />\n        <div>\n          {questions.map((question, i) => {\n            return (\n              <ExamPool\n                key={i}\n                question={question}\n                errors={errors}\n                control={control}\n                index={i}\n              />\n            );\n          })}\n        </div>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst VerifyQuestions = ({ questions }) => {\n  let examQuestions = [];\n\n  for (let i = 0; i < questions.length; i++) {\n    if (questions[i].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n\n          {/* Choices */}\n          {questions[i].choices.map((choice, i) => {\n            return (\n              <Grid item key={i}>\n                <Typography variant=\"body1\">\n                  {`${choice.value.toUpperCase()}.) ${choice.label}`}\n                </Typography>\n              </Grid>\n            );\n          })}\n\n          {/* Answer */}\n          <Grid item xs={12}>\n            <Typography\n              variant=\"body1\"\n              gutterBottom>{`Answer: ${questions[i].answer}`}</Typography>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" gutterBottom>\n                {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                  questions[i].points > 1 ? \"points\" : \"point\"\n                })`}\n              </Typography>\n            </Grid>\n\n            {/* Answer */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" gutterBottom>\n                {`Answer: ${questions[i].answer === \"t\" ? \"True\" : \"False\"}`}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"identification\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions[i].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n\n          {/* Answer */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`Answer: ${questions[i].answer}`}\n            </Typography>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"essayType\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions[i].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {examQuestions.map((qstn, i) => (\n        <div key={i}>{qstn}</div>\n      ))}\n    </Grid>\n  );\n};\n\nexport default VerifyQuestions;\n","import React from \"react\";\nimport { Button, Typography, Divider } from \"@material-ui/core\";\nimport useStylesForgotPassword from \"./styles/useStylesForgotPassword\";\nimport VerifyQuestions from \"./VerifyQuestions\";\n\nconst ExamQuestionsForm = ({ questions, handleNext, submitQuestions }) => {\n  const classes = useStylesForgotPassword();\n\n  const handleSubmit = () => {\n    submitQuestions(questions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>\n          Verify Questions\n        </Typography>\n\n        <Divider style={{ marginBottom: \"2rem\" }} />\n\n        <VerifyQuestions questions={questions} />\n\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React, { useState } from \"react\";\nimport ExamDetailsForm from \"../components/ExamDetailsForm\";\nimport ExamQuestionsForm from \"../components/ExamQuestionsForm\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport VerifyExamQuestions from \"../components/VerifyExamQuestions\";\nimport examServices from \"../services/exams\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter exam details\", \"Input question pool\", \"Verify exam \"];\n\nconst ForgotPassword = () => {\n  const [examDetails, setExamDetails] = useState({});\n  const [examQuestions, setExamQuestions] = useState([]);\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleSubmitExamDetails = examDetail => {\n    setExamDetails(examDetail);\n  };\n\n  const handleSubmitExamQuestions = examQuestion => {\n    setExamQuestions(examQuestion);\n  };\n\n  const handleSubmitQuestions = questions => {\n    const newExam = {\n      uuid: examDetails.uuid,\n      examName: examDetails.examName,\n      examDesc: examDetails.examDesc,\n      classCode: examDetails.classCode,\n      sched: examDetails.sched,\n      deadline: examDetails.deadline,\n      submittedExam: [],\n      isChecked: false,\n      questions: examQuestions,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    examServices\n      .create(newExam)\n      .then(returnedData => {\n        if (returnedData !== \"exam uuid already exists\") {\n          console.log(\"Exam inserted into database\");\n        }\n      })\n      .catch(error => {\n        console.log(\"error :>> \", error);\n      });\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <ExamDetailsForm\n            submitExamDetails={handleSubmitExamDetails}\n            handleNext={handleNext}\n          />\n        );\n      case 1:\n        return (\n          <ExamQuestionsForm\n            submitExamQuestions={handleSubmitExamQuestions}\n            handleNext={handleNext}\n          />\n        );\n\n      case 2:\n        return (\n          <VerifyExamQuestions\n            submitQuestions={handleSubmitQuestions}\n            questions={examQuestions}\n            handleNext={handleNext}\n          />\n        );\n      default:\n        throw new Error(\"Unknown step\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Exam Creation\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Exam has been uploaded to database\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  It is available for students to be taken at specified time.\n                  Exams can be modified only before it starts.{\" \"}\n                  <Link to=\"/teacher\">Click here to return to dashboard</Link>\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>{getStepContent(activeStep)}</React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function TeacherBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      {/* <BottomNavigationAction\n        label=\"Dashboard\"\n        icon={<DashboardIcon />}\n        component={Link}\n        to={`${match.url}`}\n      /> */}\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Classes\"\n        icon={<PeopleIcon />}\n        component={Link}\n        to={`${match.url}/students`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport HomeAppBar from \"../components/HomeAppBar\";\nimport ExamTeacher from \"../components/ExamTeacher\";\nimport StudentsTeacher from \"../components/StudentsTeacher\";\nimport CreateExam from \"../pages/CreateExam\";\nimport BottomNav from \"../components/TeacherBottomNav\";\n\nconst TeacherHome = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <HomeAppBar\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n        name={localStorage.getItem(\"lastName\")}\n      />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <BottomNav match={match} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            {/* <Route path={`${match.path}`} exact component={DashboardTeacher} /> */}\n            <Route path={`${match.path}`} exact>\n              <ExamTeacher match={match} />\n            </Route>\n            <Route\n              path={`${match.path}/students`}\n              exact\n              component={StudentsTeacher}\n            />\n            <Route\n              path={`${match.path}/createexam`}\n              exact\n              component={CreateExam}\n            />\n          </Switch>\n        </Container>\n        {/* <Box pt={8}>\n          <Copyright />\n        </Box> */}\n      </main>\n    </div>\n  );\n};\n\nexport default TeacherHome;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ForgotPasswordForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Account Details\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"E-Mail Address\"\n            fullWidth\n            autoComplete=\"shipping address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"idNumber\"\n            name=\"idNumber\"\n            label=\"ID Number\"\n            fullWidth\n            autoComplete=\"idNumber\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst PaymentForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        An email has been sent to your account\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"code\"\n            label=\"Enter verification code\"\n            placeholder=\"XXX-XXX\"\n            helperText=\"Please wait at least a minute before resending verification\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} md={6}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PaymentForm;\n","import React from \"react\";\nimport ForgotPasswordForm from \"../components/ForgotPasswordForm\";\nimport EmailVerificationForm from \"../components/EmailVerificationForm\";\nimport Copyright from \"../components/Copyright\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter account details\", \"Wait for email verification\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <ForgotPasswordForm />;\n    case 1:\n      return <EmailVerificationForm />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nconst ForgotPassword = () => {\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Account Recovery\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Your account has been restored\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  You have succesfully restored your account\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}>\n                    {activeStep === steps.length - 1 ? \"Confirm\" : \"Next\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nconst Error404 = () => {\n  return (\n    <div>\n      <h1>404 ERROR</h1>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Student from \"../pages/Student\";\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport TeacherHome from \"../pages/TeacherHome\";\nimport ForgotPassword from \"../pages/ForgotPassword\";\nimport Error404 from \"../pages/Error404\";\n\nconst Router = () => {\n  let loggedIn = false;\n  let redirectURL = \"\";\n\n  if (localStorage.getItem(\"jwtCookie\")) {\n    loggedIn = true;\n    if (localStorage.getItem(\"isTeacher\") === \"true\") {\n      redirectURL = \"/teacher\";\n    } else {\n      redirectURL = \"/student\";\n    }\n  }\n\n  return (\n    <MemoryRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          {loggedIn ? <Redirect to={redirectURL} /> : <Home />}\n        </Route>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/student\" component={Student} />\n        <Route path=\"/teacher\" component={TeacherHome} />\n        <Route path=\"\" component={Error404} />\n      </Switch>\n    </MemoryRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport \"./App.css\";\nimport Router from \"./components/Router\";\n\nfunction App() {\n  return <Router></Router>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Copyright.jsx","pages/Home.jsx","components/styles/useStylesTeacherHome.js","components/ListItems.jsx","components/StudentListItems.jsx","components/HomeDrawer.jsx","components/StudentBottomNav.jsx","components/ControlledTextField.jsx","components/JoinClassDialog.jsx","server/services/classes.js","server/services/users.js","server/services/exams.js","components/StudentClassCard.jsx","components/DashboardStudent.jsx","components/styles/useStylesTeacherExam.js","components/StudentExamsCard.jsx","components/StudentExams.jsx","components/AccountStudent.jsx","components/StudentExamHistory.jsx","components/StudentAppBar.jsx","components/ControlledRadioButton.jsx","components/RenderExamQuestions.jsx","components/StudentExamPage.jsx","pages/Student.jsx","pages/SignIn.jsx","pages/SignUp.jsx","components/HomeAppBar.jsx","components/ExamsCard.jsx","components/Title.jsx","components/ExamScoresTable.jsx","components/ExamScoresDialog.jsx","components/ExamTeacher.jsx","components/SectionsCard.jsx","components/AddSectionDialog.jsx","components/EnrolledStudentsDialog.jsx","components/StudentsTeacher.jsx","components/styles/useStylesForgotPassword.js","components/ControlledSelect.jsx","components/ControlledDateTimePicker.jsx","components/ExamDetailsForm.jsx","components/QuestionAdderDialog.jsx","components/ExamPool.jsx","components/ExamQuestionsForm.jsx","components/VerifyQuestions.jsx","components/VerifyExamQuestions.jsx","pages/CreateExam.jsx","components/TeacherBottomNav.jsx","pages/TeacherHome.jsx","components/ForgotPasswordForm.jsx","components/EmailVerificationForm.jsx","pages/ForgotPassword.jsx","pages/Error404.jsx","components/Router.jsx","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","to","style","textDecoration","Date","getFullYear","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","type","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","footers","title","description","Home","classes","Fragment","CssBaseline","AppBar","position","elevation","className","Toolbar","noWrap","Button","Container","maxWidth","component","gutterBottom","Grid","container","justify","map","item","xs","sm","key","Link","href","Box","mt","useStylesTeacherHome","root","paddingRight","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","height","overflow","paper","flexDirection","fixedHeight","ListItems","match","Divider","List","ListSubheader","inset","url","all","ListItem","button","ListItemIcon","ListItemText","primary","onClick","localStorage","clear","window","location","replace","StudentListItems","HomeDrawer","open","handleDrawerClose","listItems","Drawer","clsx","IconButton","minWidth","bottom","StudentBottomNav","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","ControlledTextField","name","error","control","rules","required","InputProps","multiline","rows","autoFocus","FormControl","Boolean","as","TextField","fullWidth","defaultValue","FormHelperText","message","JoinClassDialog","setOpen","handleAdd","useForm","handleSubmit","errors","handleClose","Dialog","onClose","aria-labelledby","onSubmit","form","classCode","DialogTitle","id","DialogContent","DialogContentText","DialogActions","getAll","a","request","axios","get","response","data","getAllClass","section","courseCode","courseDesc","getClasses","getClass","newSection","post","getProfClass","email","filter","prof","getProfClasses","sections","getAllProfClasses","deleteClass","delete","params","request2","response2","status","addStudent","put","getStudents","studentEnrolled","getStudentClass","clas","includes","signup","newUser","signin","user","getUser","firstName","middleName","lastName","idNumber","contactNumber","isTeacher","newExam","getProfExams","exam","getUpcomingExams","classcode","isAfter","parseISO","deadline","submittedExam","some","submission","getItem","getAllClasses","getStudentExams","studentClasses","classCodes","allExams","addExamSubmission","examUUID","examSubmission","uuid","getNotSubmittedExams","getSubmittedExams","card","cardDetails","cardMedia","SectionsCard","profName","setProfName","exams","setExams","useEffect","userServices","then","catch","err","console","log","examServices","md","Card","CardActionArea","CardContent","paragraph","Skeleton","length","Hidden","xsDown","CardMedia","image","DashboardStudent","openJoinClass","setOpenJoinClass","snackbarSeverity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","openSnackbar","setOpenSnackbar","setStudentClasses","handleSnackbarClose","reason","getStudentClasses","classServices","newStudentClasses","minHeight","Snackbar","autoHideDuration","severity","Fab","aria-label","size","top","right","students","returnedData","heroButtons","cardGrid","slice","reverse","i","StudentClassCard","pt","CircularProgress","useStylesTeacherExam","background","cardContent","StudentExamsCard","totalScore","score","setSection","alreadySubmitted","rightSched","now","sched","isBefore","questions","examName","examDesc","format","CardActions","disabled","pathname","path","examProps","StudentExams","AccountStudent","StudentExamHistory","getTotalScore","reduce","acc","cur","points","parseInt","getScore","question","answer","answers","submittedBy","answerUUIDs","Object","keys","ii","HomeAppBar","handleDrawerOpen","edge","ControlledRadioButton","choices","RadioGroup","target","choice","FormControlLabel","Radio","RenderExamQuestions","handleDialogOpen","examQuestions","index","push","Paper","noValidate","formData","qstn","lg","StudentExamPage","props","examAnswers","setExamAnswers","setExamUUID","differenceInSeconds","counter","setCounter","backdropOpen","setBackdropOpen","backdrop","timer","setInterval","clearInterval","Backdrop","aria-describedby","seconds","helperDate","addSeconds","formattedTime","Student","useRouteMatch","StudentAppBar","exact","Dashboard","Account","avatar","secondary","main","submit","backdropUseStyles","SignIn","reset","showPassword","setShowPassword","backdropClasses","Avatar","users","success","password","setItem","token","endAdornment","InputAdornment","onMouseDown","SignUp","setIsTeacher","showRePassword","setReShowPassword","history","useHistory","repassword","setTimeout","render","onCheckChange","Checkbox","checked","ExamsCard","totalExaminees","classCapacity","Title","children","ExamScoresTable","setUsers","studentEmail","Table","TableHead","TableRow","TableCell","TableBody","row","fullName","forEach","getName","ExamScoresDialog","textAlign","ExamTeacher","openExamDetailsDialog","setOpenExamDetailsDialog","setExam","handleStudentsOpen","shortid","require","AddSectionDialog","generate","toUpperCase","EnrolledStudentsDialog","enrolledStudents","enrolledStudent","StudentsTeacher","openAddSection","setOpenAddSection","setSections","setClassCode","setEnrolledStudents","openEnrolledStudentsDialog","setOpenEnrolledStudentsDialog","handleClickOpen","handleStudentsDialogOpen","sectionServices","handleDelete","useStylesForgotPassword","layout","stepper","buttons","ControlledSelect","menu","InputLabel","Select","MenuItem","ControlledDateTimePicker","selectedDate","handleDateChange","maxDate","disableFuture","openTo","utils","DateFnsUtils","DateTimePicker","inputVariant","showTodayButton","disablePast","ForgotPasswordForm","submitExamDetails","handleNext","DateAdd","days","selectedDateSched","setSelectedDateSched","hours","minutes","selectedDateDeadline","setSelectedDateDeadline","Section","formatISO","uuidv4","months","IsAfter","DateSub","QuestionAdderDialog","ExamPool","noitems","questionItem","ExamQuestionsForm","submitExamQuestions","setQuestions","openQuestionAdder","setOpenQuestionAdder","newQuestion","totalItems","transformedQuestions","formDataClone","dummyObj","dummyIndex","dummyI","outerloop","hasOwnProperty","VerifyQuestions","submitQuestions","steps","ForgotPassword","examDetails","setExamDetails","setExamQuestions","activeStep","setActiveStep","handleSubmitExamDetails","examDetail","handleSubmitExamQuestions","examQuestion","handleSubmitQuestions","isChecked","Stepper","Step","StepLabel","step","ExamDetailsForm","VerifyExamQuestions","Error","getStepContent","TeacherBottomNav","TeacherHome","CreateExam","autoComplete","PaymentForm","placeholder","helperText","EmailVerificationForm","Error404","Router","loggedIn","redirectURL","App","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23aed635.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <RouterLink\n        to=\"/\"\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        BPSU Online Examination System\n      </RouterLink>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  CssBaseline,\n  Grid,\n  Toolbar,\n  Typography,\n  Link,\n  makeStyles,\n  Container,\n  Box,\n} from \"@material-ui/core\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\",\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst footers = [\n  {\n    title: \"Developers  \",\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\n  },\n  {\n    title: \"Features\",\n    description: [\n      \"Cool stuff\",\n      \"Random feature\",\n      \"Team feature\",\n      \"Developer stuff\",\n      \"Another one\",\n    ],\n  },\n  {\n    title: \"Resources\",\n    description: [\n      \"Resource\",\n      \"Resource name\",\n      \"Another resource\",\n      \"Final resource\",\n    ],\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"],\n  },\n];\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}>\n            BPSU Online Examination System\n          </Typography>\n          <Button color=\"primary\" variant=\"outlined\" className={classes.link}>\n            <BrowserLink\n              to=\"signin\"\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              Login\n            </BrowserLink>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      {/* Hero unit */}\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          New Normal of Taking Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Our goal with this system is to make the examination experience easier\n          for both the teacher and students in this tough times.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n\n      {/* Footer */}\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map(footer => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map(item => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStylesTeacherHome = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default useStylesTeacherHome;\n","import React from \"react\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst ListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Student Management</ListSubheader>\n          {/* <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link> */}\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/students`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Classes\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default ListItems;\n","import React from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  List,\n  Divider,\n} from \"@material-ui/core\";\n\nconst StudentListItems = ({ match }) => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <div>\n          <ListSubheader inset>Menu</ListSubheader>\n          <Link to={`${match.url}`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <Link to={`${match.url}/exams`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Exams\" />\n            </ListItem>\n          </Link>\n\n          <Link to={`${match.url}/examhistory`} style={{ all: \"inherit\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HistoryIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"History\" />\n            </ListItem>\n          </Link>\n        </div>\n      </List>\n\n      <Divider />\n\n      <List>\n        <div>\n          <div>\n            <Link\n              to=\"/\"\n              style={{ all: \"inherit\" }}\n              onClick={() => {\n                localStorage.clear();\n                window.location.replace(\"/\");\n              }}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ExitToAppIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Log Out\" />\n              </ListItem>\n            </Link>\n          </div>\n        </div>\n      </List>\n    </>\n  );\n};\n\nexport default StudentListItems;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\nimport { Drawer, IconButton } from \"@material-ui/core\";\nimport ListItems from \"../components/ListItems\";\nimport StudentListItems from \"../components/StudentListItems\";\n\nconst HomeDrawer = ({ open, handleDrawerClose, match, listItems }) => {\n  const classes = useStylesTeacherHome();\n  return (\n    <Drawer\n      variant=\"temporary\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n      }}\n      open={open}>\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      {listItems === \"Student\" ? (\n        <StudentListItems match={match} />\n      ) : (\n        <ListItems match={match} />\n      )}\n    </Drawer>\n  );\n};\n\nexport default HomeDrawer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function StudentBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      <BottomNavigationAction\n        label=\"Home\"\n        icon={<HomeIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}/exams`}\n      />\n      <BottomNavigationAction\n        label=\"History\"\n        icon={<HistoryIcon />}\n        component={Link}\n        to={`${match.url}/examhistory`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { FormControl, TextField, FormHelperText } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledTextField = ({\n  name,\n  error,\n  label,\n  control,\n  rules,\n  variant = \"outlined\",\n  required = false,\n  type = \"text\",\n  InputProps = null,\n  multiline = false,\n  rows = null,\n  autoFocus = null,\n}) => {\n  return (\n    <FormControl style={{ minWidth: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <TextField\n            autoFocus={autoFocus}\n            type={type}\n            required={required}\n            name={name}\n            label={label}\n            fullWidth\n            variant={variant}\n            error={Boolean(error[name])}\n            InputProps={InputProps}\n            multiline={multiline}\n            rows={rows}\n          />\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={required ? { required: `${label} is required` } : {}}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledTextField;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst JoinClassDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    handleAdd(form.classCode);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Join a Class</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To enroll in a class, ask your professor for a classcode\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Class Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                autoFocus={true}\n                name=\"classCode\"\n                label=\"Class Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Join\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default JoinClassDialog;\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getAllClass = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getClass = async courseCode => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  for (const section of response.data) {\n    if (section.classCode === courseCode) return section;\n  }\n};\n\nconst create = async newSection => {\n  const request = axios.post(`${baseURL}/api/class`, newSection);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfClass = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data.filter(section => section.prof === email);\n};\n\nconst getProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `${section.courseCode} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst getAllProfClasses = async email => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  const sections = response.data.filter(section => section.prof === email);\n  return sections.map(section => {\n    return {\n      label: `[${section.courseCode}] ${section.courseDesc} (${section.section})`,\n      value: section.classCode,\n    };\n  });\n};\n\nconst deleteClass = async classCode => {\n  const request = axios.delete(`${baseURL}/api/class`, {\n    params: { classCode: classCode },\n  });\n  const response = await request;\n\n  const request2 = axios.delete(`${baseURL}/api/exam`, {\n    params: { classCode: classCode },\n  });\n  const response2 = await request2;\n\n  return `Class Deletion:${response.status} Exam Deletion:${response2.status}`;\n};\n\nconst addStudent = async (classCode, email) => {\n  const request = axios.put(`${baseURL}/api/class`, {\n    classCode: classCode,\n    email: email,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getStudents = async classCode => {\n  const classes = await getClass(classCode);\n  return classes.studentEnrolled;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAll();\n\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nexport default {\n  create,\n  getAll,\n  getAllClass,\n  getClasses,\n  getClass,\n  getProfClass,\n  getProfClasses,\n  getAllProfClasses,\n  deleteClass,\n  addStudent,\n  getStudents,\n  getStudentClass,\n};\n","import axios from \"axios\";\n\nconst baseURL = \"\";\n\nconst signup = async newUser => {\n  const request = axios.post(`${baseURL}/api/signup`, newUser);\n  const response = await request;\n  return response.data;\n};\n\nconst signin = async user => {\n  const request = axios.post(`${baseURL}/api/signin`, user);\n  const response = await request;\n  return response.data;\n};\n\nconst getUser = async email => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  const data = response.data.filter(user => user.email === email);\n  return {\n    firstName: data[0].firstName,\n    middleName: data[0].middleName,\n    lastName: data[0].lastName,\n    idNumber: data[0].idNumber,\n    contactNumber: data[0].contactNumber,\n    email: data[0].email,\n    isTeacher: data[0].isTeacher,\n  };\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/user`);\n  const response = await request;\n  return response.data;\n};\n\nexport default { signup, signin, getUser, getAll };\n","import axios from \"axios\";\nimport isAfter from \"date-fns/isAfter\";\nimport { parseISO } from \"date-fns\";\n\nconst baseURL = \"\";\n\nconst create = async newExam => {\n  const request = axios.post(`${baseURL}/api/exam`, newExam);\n  const response = await request;\n  return response.data;\n};\n\nconst getAll = async () => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data;\n};\n\nconst getProfExams = async email => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(exam => exam.prof === email);\n};\n\nconst getUpcomingExams = async classcode => {\n  const request = axios.get(`${baseURL}/api/exam`);\n  const response = await request;\n  return response.data.filter(\n    exam =>\n      exam.classCode === classcode &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getAllClasses = async () => {\n  const request = axios.get(`${baseURL}/api/class`);\n  const response = await request;\n  return response.data;\n};\n\nconst getStudentClass = async email => {\n  const classes = await getAllClasses();\n  return classes.filter(clas => clas.studentEnrolled.includes(email));\n};\n\nconst getStudentExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date())\n  );\n};\n\nconst addExamSubmission = async (examUUID, examSubmission) => {\n  const request = axios.put(`${baseURL}/api/exam`, {\n    uuid: examUUID,\n    examSubmission: examSubmission,\n  });\n\n  const response = await request;\n\n  return response.data;\n};\n\nconst getNotSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      isAfter(parseISO(exam.deadline), new Date()) &&\n      !exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nconst getSubmittedExams = async () => {\n  const studentClasses = await getStudentClass(localStorage.getItem(\"email\"));\n  const classCodes = studentClasses.map(classes => classes.classCode);\n\n  const allExams = await getAll();\n\n  return allExams.filter(\n    exam =>\n      classCodes.includes(exam.classCode) &&\n      exam.submittedExam.some(\n        submission =>\n          submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n      )\n  );\n};\n\nexport default {\n  create,\n  getAll,\n  getProfExams,\n  getUpcomingExams,\n  getStudentExams,\n  addExamSubmission,\n  getNotSubmittedExams,\n  getSubmittedExams,\n};\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../server/services/users\";\nimport examServices from \"../server/services/exams\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({ section }) => {\n  const classes = useStyles();\n  const [profName, setProfName] = useState();\n  const [exams, setExams] = useState();\n\n  useEffect(() => {\n    // Get Prof Name\n    userServices\n      .getUser(section.prof)\n      .then(user => {\n        setProfName(`${user.firstName} ${user.middleName} ${user.lastName}`);\n      })\n      .catch(err => console.log(err.message));\n\n    // Get Upcoming Exams\n    examServices\n      .getUpcomingExams(section.classCode)\n      .then(exams => {\n        setExams(exams);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, [section]);\n\n  const renderUpcomingExams = examsLength => {\n    if (examsLength) return `Upcoming Exams: ${exams.length}`;\n    else return \"No Upcoming Exams\";\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {`${section.courseCode} (${section.section})`}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph>\n                {section.courseDesc}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {profName ? `Professor: ${profName}` : <Skeleton />}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {exams ? renderUpcomingExams(exams.length) : <Skeleton />}\n              </Typography>\n            </CardContent>\n          </div>\n        </CardActionArea>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport JoinClassDialog from \"../components/JoinClassDialog\";\nimport classServices from \"../server/services/classes\";\nimport StudentClassCard from \"../components/StudentClassCard\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Divider,\n  Fab,\n  Snackbar,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst DashboardStudent = () => {\n  const [openJoinClass, setOpenJoinClass] = useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [studentClasses, setStudentClasses] = useState();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const getStudentClasses = () => {\n    classServices\n      .getStudentClass(localStorage.getItem(\"email\"))\n      .then(newStudentClasses => {\n        setStudentClasses(newStudentClasses);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  };\n\n  const handleAdd = classCode => {\n    classServices.getStudents(classCode).then(students => {\n      if (students.includes(localStorage.getItem(\"email\"))) {\n        setSnackbarSeverity(\"error\");\n        setSnackbarMessage(\"Already enrolled in that class\");\n        setOpenSnackbar(!openSnackbar);\n      } else {\n        classServices\n          .addStudent(classCode, localStorage.getItem(\"email\"))\n          .then(returnedData => {\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Class enrolled succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            getStudentClasses();\n          })\n          .catch(err => {\n            console.log(\"Error :>> \", err.message);\n          });\n      }\n    });\n  };\n\n  const renderDashboard = studentsClassesLength => {\n    if (studentsClassesLength) {\n      return studentClasses\n        .slice()\n        .reverse()\n        .map((section, i) => {\n          return <StudentClassCard key={i} section={section} />;\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Heeey, why haven't you joined a class yet? :/`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Join a class using the join class button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentClasses();\n  }, []);\n\n  useEffect(() => {}, [studentClasses]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenJoinClass(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Join Class Dialog */}\n      <JoinClassDialog\n        open={openJoinClass}\n        setOpen={setOpenJoinClass}\n        handleAdd={handleAdd}\n      />\n\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Home\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee your statistics and enrolled classes here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenJoinClass(true);\n                }}>\n                Join New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {studentClasses ? (\n            renderDashboard(studentClasses.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default DashboardStudent;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesTeacherExam = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default useStylesTeacherExam;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../server/services/classes\";\nimport { format, parseISO, isAfter, isBefore } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentExamsCard = ({ exam, match, totalScore, score }) => {\n  const [section, setSection] = useState();\n\n  const alreadySubmitted = () => {\n    return exam.submittedExam.some(\n      submission => submission[\"submittedBy\"] === localStorage.getItem(\"email\")\n    );\n  };\n\n  const rightSched = () => {\n    return (\n      isAfter(Date.now(), parseISO(exam.sched)) &&\n      isBefore(Date.now(), parseISO(exam.deadline))\n    );\n  };\n\n  const renderExamStatus = () => {\n    if (alreadySubmitted()) {\n      return `Exam has already been submitted`;\n    } else if (!rightSched()) {\n      return \"Exam will be available on scheduled date\";\n    } else {\n      return \"Take Exam\";\n    }\n  };\n\n  const renderButtonText = () => {\n    if (alreadySubmitted() || !rightSched()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam.classCode, exam.questions]);\n\n  useEffect(() => {}, [section]);\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Desc */}\n          <Typography gutterBottom align=\"center\">\n            {section ? `${section.courseDesc}` : <Skeleton />}\n          </Typography>\n\n          {/* Course Code & Section */}\n          <Typography\n            variant=\"body2\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-0.5rem\" }}>\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Description */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\" paragraph>\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n\n          <Divider variant=\"middle\" style={{ marginTop: \"1rem\" }} />\n\n          {/* Exam Score  */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            color=\"secondary\"\n            style={{ marginTop: \"1rem\", marginBottom: \"-1rem\" }}>\n            {alreadySubmitted() ? `Score: ${score} / ${totalScore}` : null}\n          </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\", marginBottom: \"1rem\" }}>\n          <Button size=\"small\" color=\"primary\" disabled={renderButtonText()}>\n            <Link\n              to={{\n                pathname: `${match.path}/studentexampage`,\n                examProps: { exam: exam },\n              }}\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              {renderExamStatus()}\n            </Link>\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default StudentExamsCard;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../server/services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExams = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getNotSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard key={exam.uuid} exam={exam} match={match} />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Wooohoooooo! You have no upcoming exams!`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Previous exam records can be reviewed instead\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Oversee incoming exams here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExams;\n","import React from \"react\";\nimport { Container, Typography, Divider } from \"@material-ui/core\";\n\nconst AccountStudent = () => {\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Account\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your account settings here\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n    </div>\n  );\n};\n\nexport default AccountStudent;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport StudentExamsCard from \"../components/StudentExamsCard\";\nimport examServices from \"../server/services/exams\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Grid,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nconst StudentExamHistory = ({ match }) => {\n  const [exams, setExams] = useState();\n\n  const getStudentExams = () => {\n    examServices\n      .getSubmittedExams()\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = exam => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === localStorage.getItem(\"email\")\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (questions[i].answer === answers[answerUUIDs[ii]]) {\n            points += parseInt(questions[i].points);\n          } else if (questions[i].type === \"essayType\") {\n            points += parseInt(questions[i].points);\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map(exam => (\n          <StudentExamsCard\n            key={exam.uuid}\n            exam={exam}\n            match={match}\n            totalScore={getTotalScore(exam)}\n            score={getScore(exam)}\n          />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`It's empty out here, you have no exam records yet :3`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Answered exams will be sent here\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getStudentExams();\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Title */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exam History\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Review previous exam records\n        </Typography>\n      </Container>\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentExamHistory;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Student ${localStorage.getItem(\"lastName\")}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormHelperText,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledRadioButton = ({\n  error,\n  control,\n  name,\n  label,\n  required = false,\n  choices,\n}) => {\n  const [value, setValue] = React.useState(\"a\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl error={Boolean(error[name])} component=\"fieldset\">\n      {/* <FormLabel id={`${name}Label`}>{label}</FormLabel> */}\n      <Controller\n        as={\n          <RadioGroup required={required} value={value} onChange={handleChange}>\n            {choices.map((choice, i) => {\n              return (\n                <FormControlLabel\n                  key={i}\n                  value={choice.value}\n                  label={choice.label}\n                  control={<Radio />}\n                />\n              );\n            })}\n          </RadioGroup>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledRadioButton;\n","import React from \"react\";\nimport ControlledTextField from \"./ControlledTextField\";\nimport ControlledRadioButton from \"./ControlledRadioButton\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport { useForm } from \"react-hook-form\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\n\nconst RenderExamQuestions = ({ exam, handleDialogOpen }) => {\n  const { handleSubmit, errors, control } = useForm();\n  let examQuestions = [];\n\n  // Form Submit Handler\n  const submitHandle = formData => {\n    formData.submittedBy = localStorage.getItem(\"email\");\n    handleDialogOpen(formData, exam.uuid);\n  };\n\n  for (let index = 0; index < exam.questions.length; index++) {\n    // Multiple Choice\n    if (exam.questions[index].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={exam.questions[index].choices}\n          />\n        </Paper>\n      );\n\n      // True or False\n    } else if (exam.questions[index].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Choices */}\n          <ControlledRadioButton\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n            choices={[\n              { value: \"t\", label: \"True\" },\n              { value: \"f\", label: \"False\" },\n            ]}\n          />\n        </Paper>\n      );\n\n      // Identification\n    } else if (exam.questions[index].type === \"identification\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n\n      // Essay Type\n    } else if (exam.questions[index].type === \"essayType\") {\n      examQuestions.push(\n        <Paper style={{ padding: \"1.5em\" }}>\n          {/* Question */}\n          <Typography variant=\"body1\" gutterBottom>\n            {`${index + 1}.) ${exam.questions[index].question} (${\n              exam.questions[index].points\n            } ${exam.questions[index].points > 1 ? \"points\" : \"point\"})`}\n          </Typography>\n\n          {/* Answer Field */}\n          <ControlledTextField\n            multiline\n            rows={8}\n            name={exam.questions[index].uuid}\n            label={`Question ${index + 1}`}\n            error={errors}\n            control={control}\n            required={true}\n            rules={{ required: \"this is required\" }}\n          />\n        </Paper>\n      );\n    }\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit(submitHandle)}>\n      <Grid container spacing={2} justify=\"center\">\n        {examQuestions.map((qstn, i) => (\n          <Grid key={i} item xs={12} md={10} lg={8}>\n            {qstn}\n          </Grid>\n        ))}\n      </Grid>\n\n      <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit Exam\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </form>\n  );\n};\n\nexport default RenderExamQuestions;\n","import React, { useState, useEffect } from \"react\";\nimport RenderExamQuestions from \"./RenderExamQuestions\";\nimport examServices from \"../server/services/exams\";\nimport { differenceInSeconds, parseISO, addSeconds, format } from \"date-fns\";\nimport {\n  Container,\n  Typography,\n  Divider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  CircularProgress,\n  Backdrop,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst StudentExamPage = props => {\n  const exam = props.location.examProps.exam;\n  const [open, setOpen] = useState(false);\n  const [examAnswers, setExamAnswers] = useState();\n  const [examUUID, setExamUUID] = useState();\n  const [counter, setCounter] = useState(\n    differenceInSeconds(parseISO(exam.deadline), parseISO(exam.sched))\n  );\n  const [backdropOpen, setBackdropOpen] = useState(false);\n\n  const useStyles = makeStyles(theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const formattedTime = seconds => {\n    var helperDate = addSeconds(new Date(0), seconds);\n    return format(helperDate, \"mm:ss\");\n  };\n\n  const handleClickOpen = (formData, examUUID) => {\n    setExamAnswers(formData);\n    setExamUUID(examUUID);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    setBackdropOpen(true);\n\n    examServices\n      .addExamSubmission(examUUID, examAnswers)\n      .then(returnedData => {\n        setBackdropOpen(false);\n        window.location.replace(\"/\");\n        console.log(\"returnedData :>> \", returnedData);\n      })\n      .catch(err => console.log(err.message));\n    handleClose();\n  };\n\n  useEffect(() => {\n    const timer =\n      counter > 0 &&\n      setInterval(() => {\n        setCounter(counter - 1);\n      }, 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  return (\n    <div style={{ minHeight: \"100vh\", marginBottom: \"3rem\" }}>\n      {/* Backdrop */}\n      <Backdrop className={classes.backdrop} open={backdropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {/* Yes/No Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit Exam?\"}</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Container maxWidth=\"sm\">\n        {/* Exam Title */}\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          {`${exam.examName}`}\n        </Typography>\n      </Container>\n\n      {/* Exam Desc */}\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n        paragraph>\n        {`${exam.examDesc}`}\n      </Typography>\n\n      {/* Exam Timer */}\n      <Typography\n        variant=\"body1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\">\n        {`Exam will auto-submit in: ${formattedTime(counter)}`}\n      </Typography>\n\n      {/* Divider */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Render Exam Questions */}\n      <RenderExamQuestions\n        exam={exam}\n        style={{ marginBottom: \"3rem\" }}\n        handleDialogOpen={handleClickOpen}\n      />\n    </div>\n  );\n};\n\nexport default StudentExamPage;\n","import React from \"react\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport StudentBottomNav from \"../components/StudentBottomNav\";\nimport Dashboard from \"../components/DashboardStudent\";\nimport Exams from \"../components/StudentExams\";\nimport Account from \"../components/AccountStudent\";\nimport History from \"../components/StudentExamHistory\";\nimport StudentAppBar from \"../components/StudentAppBar\";\nimport StudentExamPage from \"../components/StudentExamPage\";\n\nconst Student = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <StudentAppBar open={open} handleDrawerOpen={handleDrawerOpen} />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n        listItems=\"Student\"\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <StudentBottomNav match={match} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            <Route path={`${match.path}`} exact component={Dashboard} />\n            <Route path={`${match.path}/exams`} exact>\n              <Exams match={match} />\n            </Route>\n            <Route path={`${match.path}/examhistory`} exact>\n              <History match={match} />\n            </Route>\n            <Route path={`${match.path}/account`} exact component={Account} />\n            <Route\n              path={`${match.path}/studentexampage`}\n              exact\n              component={StudentExamPage}\n            />\n          </Switch>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Student;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as BrowserLink } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport users from \"../server/services/users\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  makeStyles,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst backdropUseStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst SignIn = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const backdropClasses = backdropUseStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    setOpen(!open);\n    users\n      .signin(formData)\n      .then(returnedData => {\n        if (returnedData.success) {\n          reset({ email: \"\", password: \"\" });\n          localStorage.setItem(\"jwtCookie\", returnedData.token);\n          localStorage.setItem(\"email\", returnedData.email);\n          localStorage.setItem(\"isTeacher\", returnedData.isTeacher);\n          localStorage.setItem(\"lastName\", returnedData.lastName);\n          window.location.replace(\"/\");\n        } else {\n          handleClose();\n          reset({ email: \"\", password: \"\" });\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"Invalid Credentials\");\n          setOpenSnackbar(!openSnackbar);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <Backdrop\n        className={backdropClasses.backdrop}\n        open={open}\n        onClick={handleClose}>\n        <CircularProgress color=\"secondary\" />\n      </Backdrop>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <BrowserLink\n                to=\"forgotpassword\"\n                style={{ textDecoration: \"inherit\" }}>\n                Forgot password?\n              </BrowserLink>\n            </Grid>\n            <Grid item>\n              <BrowserLink to=\"/signup\" style={{ textDecoration: \"inherit\" }}>\n                Don't have an account? Sign Up\n              </BrowserLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Copyright from \"../components/Copyright\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport users from \"../server/services/users\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  Container,\n  InputAdornment,\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const { control, handleSubmit, errors, reset } = useForm();\n  const [isTeacher, setIsTeacher] = useState(false);\n  const handleCheckboxChange = e => {\n    setIsTeacher(!isTeacher);\n    return isTeacher ? false : true;\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n  const [showRePassword, setReShowPassword] = useState(false);\n  const handleClickReShowPassword = () => setReShowPassword(!showRePassword);\n  const handleMouseDownRePassword = () => setReShowPassword(!showRePassword);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  let history = useHistory();\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const onSubmit = formData => {\n    if (formData.password !== formData.repassword) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Password does not match\");\n      setOpenSnackbar(!openSnackbar);\n    } else {\n      users\n        .signup(formData)\n        .then(returnedData => {\n          if (returnedData === \"email already in use\") {\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(\"Email is already in use\");\n            setOpenSnackbar(!openSnackbar);\n          } else {\n            reset();\n            setSnackbarSeverity(\"success\");\n            setSnackbarMessage(\"Signed up succesfully\");\n            setOpenSnackbar(!openSnackbar);\n            setTimeout(() => {\n              history.push(\"signin\");\n            }, 1000);\n          }\n        })\n        .catch(error => {\n          console.log(\"Error: \", error);\n        });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            {/* First Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"firstName\"\n                label=\"First Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Middle Name */}\n            <Grid item xs={12} sm={6}>\n              <ControlledTextField\n                name=\"middleName\"\n                label=\"Middle Name\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Last Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"lastName\"\n                label=\"Last Name\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* ID Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"idNumber\"\n                label=\"ID Number\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Email Address */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"email\"\n                label=\"Email Address\"\n                required={true}\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Contact Number */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"contactNumber\"\n                label=\"Contact Number\"\n                error={errors}\n                control={control}\n              />\n            </Grid>\n\n            {/* Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"password\"\n                label=\"Password\"\n                required={true}\n                type={showPassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n\n            {/* Re:Password */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"repassword\"\n                label=\"Retype Password\"\n                required={true}\n                type={showRePassword ? \"text\" : \"password\"}\n                error={errors}\n                control={control}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickReShowPassword}\n                        onMouseDown={handleMouseDownRePassword}>\n                        {showRePassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Controller\n                    name=\"isTeacher\"\n                    defaultValue={false}\n                    render={({ onChange: onCheckChange }) => {\n                      return (\n                        <Checkbox\n                          checked={isTeacher}\n                          onChange={() => onCheckChange(handleCheckboxChange())}\n                        />\n                      );\n                    }}\n                    control={control}\n                  />\n                }\n                key={\"isTeacher\"}\n                label={\"Sign up as teacher?\"}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign in\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <RouterLink to=\"/signin\" style={{ textDecoration: \"inherit\" }}>\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStylesTeacherHome from \"./styles/useStylesTeacherHome\";\n\nconst HomeAppBar = ({ open, handleDrawerOpen, name }) => {\n  const classes = useStylesTeacherHome();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            open && classes.menuButtonHidden\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {`Welcome Professor ${name}!`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HomeAppBar;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport classServices from \"../server/services/classes\";\nimport { format, parseISO } from \"date-fns\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst ExamsCard = ({ exam, handleDialogOpen }) => {\n  const [section, setSection] = useState();\n\n  useEffect(() => {\n    classServices\n      .getClass(exam.classCode)\n      .then(returnedData => {\n        setSection(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, [exam]);\n\n  const renderExamTotalExaminees = (totalExaminees, classCapacity) => {\n    if (totalExaminees === classCapacity) {\n      return \"Everyone has taken this exam\";\n    } else {\n      return `${totalExaminees}/${classCapacity} has taken this exam`;\n    }\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          {/* Exam Name */}\n          <Typography gutterBottom variant=\"h5\" align=\"center\">\n            {exam.examName}\n          </Typography>\n\n          {/* Course Code and Section */}\n          <Typography gutterBottom align=\"center\">\n            {section ? (\n              `${section.courseCode} (${section.section})`\n            ) : (\n              <Skeleton />\n            )}\n          </Typography>\n\n          {/* Exam Desc */}\n          <Typography variant=\"subtitle2\" gutterBottom align=\"center\">\n            {exam.examDesc}\n          </Typography>\n\n          {/* Exam Schedule  */}\n          <Typography variant=\"caption\" gutterBottom align=\"center\" paragraph>\n            {`Schedule: ${format(parseISO(exam.sched), \"PPpp\")}`}\n          </Typography>\n\n          {/* Exam Deadline */}\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            align=\"center\"\n            paragraph\n            style={{ marginTop: \"-1rem\" }}>\n            {`Deadline: ${format(parseISO(exam.deadline), \"PPpp\")}`}\n          </Typography>\n          <div>\n            <Divider\n              variant=\"middle\"\n              style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n            />\n            <Typography gutterBottom color=\"secondary\" align=\"center\">\n              {section ? (\n                renderExamTotalExaminees(\n                  exam.submittedExam.length,\n                  section.classCapacity\n                )\n              ) : (\n                <Skeleton />\n              )}\n            </Typography>\n          </div>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => handleDialogOpen(exam)}>\n            View\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ExamsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Title = props => {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport userServices from \"../server/services/users\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst ExamScoresTable = ({ title, exam }) => {\n  const [users, setUsers] = useState();\n\n  const getTotalScore = exam => {\n    const total = exam.questions.reduce((acc, cur) => ({\n      points: parseInt(acc.points) + parseInt(cur.points),\n    }));\n\n    return total.points;\n  };\n\n  const getScore = (exam, studentEmail) => {\n    const questions = exam.questions.map(question => {\n      return {\n        uuid: question.uuid,\n        points: question.points,\n        answer: question.answer,\n        type: question.type,\n      };\n    });\n\n    const answers = exam.submittedExam.filter(\n      submission => submission.submittedBy === studentEmail\n    )[0];\n\n    const answerUUIDs = Object.keys(answers);\n\n    let points = 0;\n\n    for (let i = 0; i < questions.length; i++) {\n      for (let ii = 0; ii < answerUUIDs.length - 1; ii++) {\n        if (questions[i].uuid === answerUUIDs[ii]) {\n          if (questions[i].answer === answers[answerUUIDs[ii]]) {\n            points += parseInt(questions[i].points);\n          } else if (questions[i].type === \"essayType\") {\n            points += parseInt(questions[i].points);\n          }\n        }\n      }\n    }\n\n    return points;\n  };\n\n  const getName = email => {\n    let fullName = \"\";\n\n    users.forEach(user => {\n      if (user.email === email) {\n        fullName = `${user.lastName}, ${user.firstName} ${user.middleName}`;\n      }\n    });\n\n    return fullName;\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => setUsers(users))\n      .catch(err => console.log(err.message));\n  }, []);\n\n  const rows = exam.submittedExam.map((submission, i) => {\n    const id = i;\n    const name = submission.submittedBy;\n    const score = getScore(exam, submission.submittedBy);\n    const totalScore = getTotalScore(exam);\n    return { id, name, score, totalScore };\n  });\n\n  return (\n    <div>\n      <Title>{title}</Title>\n      <Table size=\"medium\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Score</TableCell>\n            <TableCell align=\"right\">Max Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{users ? getName(row.name) : <Skeleton />}</TableCell>\n              <TableCell>{row.score}</TableCell>\n              <TableCell align=\"right\">{row.totalScore}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ExamScoresTable;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport ExamScoresTable from \"./ExamScoresTable\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\n\nconst ExamScoresDialog = ({ open, setOpen, exam }) => {\n  const classes = useStylesTeacherHome();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderStudentScores = examSubmissionLength => {\n    if (examSubmissionLength) {\n      return (\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <ExamScoresTable title=\"Submissions\" exam={exam} />\n          </Paper>\n        </Grid>\n      );\n    } else {\n      return <Typography>No submissions yet</Typography>;\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\n        {exam ? exam.examName : <Skeleton />}\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {exam ? renderStudentScores(exam.submittedExam.length) : <Skeleton />}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExamScoresDialog;\n","import React, { useEffect, useState } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport classes from \"../components/styles/useStylesTeacherExam\";\nimport ExamsCard from \"./ExamsCard\";\nimport { Link } from \"react-router-dom\";\nimport examServices from \"../server/services/exams\";\nimport ExamScoresDialog from \"./ExamScoresDialog\";\nimport {\n  Button,\n  Box,\n  Fab,\n  Grid,\n  Typography,\n  Container,\n  Divider,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst ExamTeacher = ({ match }) => {\n  const [exams, setExams] = useState();\n  const [openExamDetailsDialog, setOpenExamDetailsDialog] = useState(false);\n  const [exam, setExam] = useState();\n\n  useEffect(() => {\n    examServices\n      .getProfExams(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setExams(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  }, []);\n\n  useEffect(() => {}, [exams]);\n\n  const handleDialogOpen = exam => {\n    setExam(exam);\n    setOpenExamDetailsDialog(true);\n  };\n\n  const renderExams = examsLength => {\n    if (examsLength) {\n      return exams\n        .slice(0)\n        .reverse()\n        .map((exam, i) => (\n          <ExamsCard key={i} exam={exam} handleDialogOpen={handleDialogOpen} />\n        ));\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Yikes! you haven't created an exam yet :/`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create an exam using the add button\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      <Link\n        to={`${match.url}/createexam`}\n        style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          size=\"medium\"\n          style={{\n            margin: 0,\n            top: \"auto\",\n            right: \"2rem\",\n            bottom: \"5rem\",\n            position: \"fixed\",\n          }}>\n          <CreateIcon />\n        </Fab>\n      </Link>\n\n      {/* Exam Scores Dialog */}\n      <ExamScoresDialog\n        open={openExamDetailsDialog}\n        setOpen={setOpenExamDetailsDialog}\n        exam={exam}\n      />\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Exams\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Create and manage exam for your students here\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\">\n                <Link\n                  to={`${match.url}/createexam`}\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n                  Create New Exam\n                </Link>\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n      {/* End hero unit */}\n\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {exams ? (\n            renderExams(exams.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ExamTeacher;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Hidden,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flexGrow: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst SectionsCard = ({ section, handleDialogOpen, handleStudentsOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {`${section.courseCode} (${section.section})`}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {section.courseDesc}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              {section.studentEnrolled ? section.studentEnrolled.length : 0}\n              {` / ${section.classCapacity} students enrolled`}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {`Class Code: ${section.classCode}`}\n            </Typography>\n          </CardContent>\n\n          <CardActions style={{ marginTop: \"-1.5rem\" }}>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleStudentsOpen(section.studentEnrolled);\n              }}>\n              View\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                handleDialogOpen(section.classCode);\n              }}>\n              Delete\n            </Button>\n          </CardActions>\n        </div>\n\n        <Hidden xsDown>\n          <CardMedia className={classes.cardMedia} image={section.image} />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SectionsCard;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nconst shortid = require(\"shortid\");\n\nconst AddSectionDialog = ({ open, setOpen, handleAdd }) => {\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = form => {\n    const classCode = shortid.generate();\n\n    handleAdd(\n      form.courseCode.toUpperCase(),\n      form.courseDesc.toUpperCase(),\n      form.section.toUpperCase(),\n      form.classCapacity,\n      classCode,\n      (form.image = `https://picsum.photos/seed/${classCode}/166/244`)\n    );\n\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Create new section</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a new section, please enter the subject, section and\n            amount of students\n          </DialogContentText>\n          <Grid container spacing={2}>\n            {/* Course Code */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseCode\"\n                label=\"Course Code\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Course Name */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"courseDesc\"\n                label=\"Course Name\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Section */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"section\"\n                label=\"Section\"\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n\n            {/* Max Students */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                name=\"classCapacity\"\n                label=\"Max students allowed\"\n                variant=\"standard\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n                rules={{ required: \"this is required\" }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddSectionDialog;\n","import React, { useState, useEffect } from \"react\";\nimport userServices from \"../server/services/users\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst EnrolledStudentsDialog = ({ open, setOpen, enrolledStudents }) => {\n  const [users, setUsers] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    userServices\n      .getAll()\n      .then(users => {\n        setUsers(\n          users.filter(user =>\n            enrolledStudents.some(\n              enrolledStudent => enrolledStudent === user.email\n            )\n          )\n        );\n      })\n      .catch(err => console.log(err.message));\n  }, [enrolledStudents]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Enrolled Students</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {users ? (\n            users.map((user, i) => {\n              return (\n                <Typography variant=\"body1\" key={i}>\n                  {`${i + 1}.) ${user.lastName}, ${user.firstName} ${\n                    user.middleName\n                  }`}\n                </Typography>\n              );\n            })\n          ) : (\n            <Skeleton width=\"100%\" />\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EnrolledStudentsDialog;\n","import React, { useEffect, useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classes from \"../components/styles/useStylesTeacherHome\";\nimport SectionsCard from \"../components/SectionsCard\";\nimport AddSectionDialog from \"../components/AddSectionDialog\";\nimport sectionServices from \"../server/services/classes\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  Fab,\n  Divider,\n  Box,\n  Snackbar,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport EnrolledStudentsDialog from \"./EnrolledStudentsDialog\";\n\nconst StudentsTeacher = () => {\n  const [openAddSection, setOpenAddSection] = useState(false);\n  const [sections, setSections] = useState();\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [classCode, setClassCode] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [enrolledStudents, setEnrolledStudents] = useState();\n  const [openEnrolledStudentsDialog, setOpenEnrolledStudentsDialog] = useState(\n    false\n  );\n\n  const handleDelete = classCode => {\n    sectionServices\n      .deleteClass(classCode)\n      .then(returnedData => {\n        getClasses();\n        setSnackbarSeverity(\"success\");\n        setSnackbarMessage(\"Class succesfully deleted\");\n        setOpenSnackbar(!openSnackbar);\n      })\n      .catch(err => {\n        console.log(\"Error :>> \", err.message);\n      });\n  };\n\n  const handleClickOpen = classCode => {\n    setOpen(true);\n    setClassCode(classCode);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    handleDelete(classCode);\n    handleClose();\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const handleStudentsDialogOpen = enrolledStudents => {\n    setEnrolledStudents(enrolledStudents);\n    setOpenEnrolledStudentsDialog(true);\n  };\n\n  const handleAdd = (\n    courseCode,\n    courseDesc,\n    section,\n    classCapacity,\n    classCode,\n    image\n  ) => {\n    const newSection = {\n      courseCode: courseCode,\n      courseDesc: courseDesc,\n      section: section,\n      classCapacity: classCapacity,\n      classCode: classCode,\n      image: image,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    sectionServices\n      .create(newSection)\n      .then(returnedData => {\n        if (returnedData === \"section already exists\") {\n          setSnackbarSeverity(\"error\");\n          setSnackbarMessage(\"A section with that subject already exists\");\n          setOpenSnackbar(!openSnackbar);\n        } else {\n          setSnackbarSeverity(\"success\");\n          setSnackbarMessage(\"Section created\");\n          setOpenSnackbar(!openSnackbar);\n          setSections([...sections, newSection]);\n        }\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  const getClasses = () => {\n    sectionServices\n      .getProfClass(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  useEffect(() => {}, [sections]);\n\n  const renderClasses = classesLength => {\n    if (classesLength) {\n      return sections\n        .slice(0)\n        .reverse()\n        .map((section, i) => {\n          return (\n            <SectionsCard\n              key={i}\n              section={section}\n              handleDialogOpen={handleClickOpen}\n              handleStudentsOpen={handleStudentsDialogOpen}\n            />\n          );\n        });\n    } else {\n      return (\n        <Box pt={8} style={{ marginBottom: \"3rem\" }}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom>\n            {`Awwww. You haven't created a class yet :(`}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\">\n            Create a class using the add button to get started\n          </Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      {/* Floating Action Button */}\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}\n        onClick={() => {\n          setOpenAddSection(true);\n        }}>\n        <AddIcon />\n      </Fab>\n\n      {/* Snackbar */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}>\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete class?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This wil delete this class and all its exams. This process is\n            unreversible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Add section Dialog */}\n      <AddSectionDialog\n        open={openAddSection}\n        setOpen={setOpenAddSection}\n        handleAdd={handleAdd}\n      />\n\n      {/* Enrolled Students Dialog */}\n      <EnrolledStudentsDialog\n        open={openEnrolledStudentsDialog}\n        setOpen={setOpenEnrolledStudentsDialog}\n        enrolledStudents={enrolledStudents}\n      />\n\n      {/* Start Hero Unit */}\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom>\n          Classes\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\">\n          Manage your students here by creating classes in which they can enroll\n          in\n        </Typography>\n        <div className={classes.heroButtons} style={{ marginTop: \"2rem\" }}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setOpenAddSection(true);\n                }}>\n                Create New Class\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      {/* End hero unit */}\n      <Divider style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }} />\n\n      {/* Contents */}\n      <Container\n        className={classes.cardGrid}\n        maxWidth=\"md\"\n        style={{ marginBottom: \"3rem\" }}>\n        <Grid container spacing={4}>\n          {sections ? (\n            renderClasses(sections.length)\n          ) : (\n            <Grid\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default StudentsTeacher;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStylesForgotPassword = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStylesForgotPassword;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\n\nconst ControlledSelect = ({\n  error,\n  control,\n  name,\n  label,\n  menu,\n  variant = \"outlined\",\n  required = false,\n}) => {\n  return (\n    <FormControl\n      style={{ minWidth: \"100%\" }}\n      error={Boolean(error[name])}\n      variant={variant}>\n      <InputLabel id={`${name}Label`}>{label}</InputLabel>\n      <Controller\n        as={\n          <Select required={required}>\n            <MenuItem value=\"\">None</MenuItem>\n            {menu.map((menu, i) => {\n              return (\n                <MenuItem key={i} value={menu.value}>\n                  {menu.label}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        }\n        name={name}\n        rules={{ required: `${label} is required` }}\n        control={control}\n        defaultValue=\"\"\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledSelect;\n","import React from \"react\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport { Controller } from \"react-hook-form\";\nimport { FormControl, FormHelperText } from \"@material-ui/core\";\n\nconst ControlledDateTimePicker = ({\n  selectedDate,\n  handleDateChange,\n  name,\n  error,\n  control,\n  label,\n  rules = {},\n  maxDate = null,\n  disableFuture = false,\n  openTo = \"date\",\n}) => {\n  return (\n    <FormControl style={{ width: \"100%\" }} error={Boolean(error[name])}>\n      <Controller\n        as={\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              name={name}\n              label={label}\n              value={selectedDate}\n              onChange={handleDateChange}\n              maxDate={maxDate}\n              inputVariant=\"outlined\"\n              showTodayButton\n              disablePast\n              disableFuture={disableFuture}\n              openTo={openTo}\n            />\n          </MuiPickersUtilsProvider>\n        }\n        name={name}\n        defaultValue={\"\"}\n        control={control}\n        rules={rules}\n      />\n      <FormHelperText>{error[name] && error[name].message}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default ControlledDateTimePicker;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"./ControlledSelect\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport Section from \"../server/services/classes\";\nimport ControlledDateTimePicker from \"../components/ControlledDateTimePicker\";\nimport DateAdd from \"date-fns/add\";\nimport DateSub from \"date-fns/sub\";\nimport IsAfter from \"date-fns/isAfter\";\nimport formatISO from \"date-fns/formatISO\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ForgotPasswordForm = ({ submitExamDetails, handleNext }) => {\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const [sections, setSections] = useState([]);\n  const [selectedDateSched, setSelectedDateSched] = useState(\n    DateAdd(new Date(), { days: 1 })\n  );\n  const [selectedDateDeadline, setSelectedDateDeadline] = useState(\n    DateAdd(new Date(), { days: 1, hours: 1, minutes: 30 })\n  );\n\n  const handleDateChangeSched = sched => {\n    setSelectedDateSched(sched);\n    setSelectedDateDeadline(DateAdd(sched, { hours: 1, minutes: 30 }));\n  };\n\n  const handleDateChangeDeadline = deadline => {\n    if (IsAfter(selectedDateSched, deadline)) {\n      setSelectedDateDeadline(deadline);\n      setSelectedDateSched(DateSub(deadline, { hours: 1, minutes: 30 }));\n    } else {\n      setSelectedDateDeadline(deadline);\n    }\n  };\n\n  const submitHandle = formData => {\n    formData.sched = formatISO(selectedDateSched);\n    formData.deadline = formatISO(selectedDateDeadline);\n    formData.uuid = uuidv4();\n\n    submitExamDetails(formData);\n    handleNext();\n  };\n\n  useEffect(() => {\n    Section.getAllProfClasses(localStorage.getItem(\"email\"))\n      .then(returnedData => {\n        setSections(returnedData);\n      })\n      .catch(error => {\n        console.log(\"Error :>> \", error);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(submitHandle)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Basic Exam Details\n        </Typography>\n        <Grid container spacing={3}>\n          {/* Exam name */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examName\"\n              label=\"Exam Name\"\n              error={errors}\n              control={control}\n              required={true}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Exam description */}\n          <Grid item xs={12}>\n            <ControlledTextField\n              name=\"examDesc\"\n              label=\"Exam Description\"\n              error={errors}\n              control={control}\n              required={true}\n              multiline={true}\n              rows={3}\n              rules={{ required: \"this is required\" }}\n            />\n          </Grid>\n\n          {/* Section */}\n          <Grid item xs={12}>\n            <ControlledSelect\n              name=\"classCode\"\n              error={errors}\n              control={control}\n              label=\"Class\"\n              menu={sections}\n            />\n          </Grid>\n\n          {/* Exam Date */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateSched}\n              handleDateChange={handleDateChangeSched}\n              name=\"sched\"\n              error={errors}\n              control={control}\n              label=\"Start of Examination\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n\n          {/* Exam Deadline */}\n          <Grid item xs={12}>\n            <ControlledDateTimePicker\n              selectedDate={selectedDateDeadline}\n              handleDateChange={handleDateChangeDeadline}\n              name=\"deadline\"\n              error={errors}\n              control={control}\n              label=\"Deadline of Examination\"\n              openTo=\"hours\"\n              maxDate={DateAdd(new Date(), { months: 6 })}\n            />\n          </Grid>\n        </Grid>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useForm } from \"react-hook-form\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst QuestionAdderDialog = ({ open, setOpen, handleAdd }) => {\n  const { control, handleSubmit, errors } = useForm();\n\n  const onSubmit = formData => {\n    handleAdd(formData);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle id=\"form-dialog-title\">Add Questions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a set of questions please specify what type of questions\n            you would like\n          </DialogContentText>\n\n          <Grid container spacing={2}>\n            {/* Question Type */}\n            <Grid item xs={12}>\n              <ControlledSelect\n                variant=\"standard\"\n                error={errors}\n                control={control}\n                name=\"type\"\n                label=\"Question Type\"\n                required={true}\n                menu={[\n                  { value: \"multichoice\", label: \"Multiple Choice\" },\n                  { value: \"trueorfalse\", label: \"True or False\" },\n                  { value: \"identification\", label: \"Identification\" },\n                  { value: \"essaytype\", label: \"Essay Type\" },\n                ]}\n              />\n            </Grid>\n\n            {/* Number of items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"noitems\"\n                label=\"Number of items\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n\n            {/* Points per items */}\n            <Grid item xs={12}>\n              <ControlledTextField\n                variant=\"standard\"\n                name=\"points\"\n                label=\"Points per item\"\n                type=\"number\"\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default QuestionAdderDialog;\n","import React from \"react\";\nimport ControlledTextField from \"../components/ControlledTextField\";\nimport ControlledSelect from \"../components/ControlledSelect\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst ExamPool = ({ question, errors, control, index }) => {\n  let questions = [];\n\n  switch (question.type) {\n    case \"multichoice\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (Multiple Choice)`}</Typography>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|multichoice`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c1`}\n                label={`Choice A`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c2`}\n                label={`Choice B`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c3`}\n                label={`Choice C`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Choice${i}|c4`}\n                label={`Choice D`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}|Answer${i}|multichoice`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"a\", label: \"A\" },\n                  { value: \"b\", label: \"B\" },\n                  { value: \"c\", label: \"C\" },\n                  { value: \"d\", label: \"D\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"trueorfalse\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              style={{\n                marginTop: \"2rem\",\n                marginLeft: \"1rem\",\n              }}>{`Question ${i} (True or False)`}</Typography>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|trueorfalse`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledSelect\n                name={`Set${index}|Answer${i}|trueorfalse`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n                menu={[\n                  { value: \"t\", label: \"True\" },\n                  { value: \"f\", label: \"False\" },\n                ]}\n              />\n            </Grid>\n          </Grid>\n        );\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"identification\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Identification)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|identification`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Answer${i}|identification`}\n                label={`Answer`}\n                error={errors}\n                control={control}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"enumeration\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|enumeration`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n\n            <Grid item xs={12}></Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    case \"essaytype\":\n      for (let i = 1; i <= question.noitems; i++) {\n        const questionItem = (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                style={{\n                  marginTop: \"2rem\",\n                  marginLeft: \"1rem\",\n                }}>{`Question ${i} (Essay Type)`}</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <ControlledTextField\n                name={`Set${index}|Question${i}|essaytype`}\n                label={`Question ${i}`}\n                error={errors}\n                control={control}\n                required={true}\n                multiline={true}\n                rows={5}\n              />\n            </Grid>\n          </Grid>\n        );\n\n        questions.push(questionItem);\n      }\n\n      break;\n\n    default:\n      return <div>Nothing rendered</div>;\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item>\n        <Typography\n          variant=\"h4\"\n          style={{\n            marginTop: \"2rem\",\n            marginLeft: \"1rem\",\n            marginBottom: \"-1rem\",\n          }}>\n          {`Set ${index + 1} [${question.points} points per item]`}\n        </Typography>\n      </Grid>\n      {questions.map((question, index) => {\n        return (\n          <Grid key={index} item xs={12}>\n            {question}\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default ExamPool;\n","import React, { useState } from \"react\";\nimport { Button, Typography, Fab, Divider } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useForm } from \"react-hook-form\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport QuestionAdderDialog from \"../components/QuestionAdderDialog\";\nimport ExamPool from \"./ExamPool\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ExamQuestionsForm = ({ submitExamQuestions, handleNext }) => {\n  const [questions, setQuestions] = useState([]);\n  const [openQuestionAdder, setOpenQuestionAdder] = useState(false);\n  const { handleSubmit, errors, control } = useForm();\n  const classes = useStylesForgotPassword();\n  const handleAddQuestions = () => {\n    setOpenQuestionAdder(true);\n  };\n\n  const handleAdd = newQuestion => {\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const onSubmit = formData => {\n    const totalItems = questions.reduce(\n      (acc, question) => parseInt(acc) + parseInt(question.noitems),\n      0\n    );\n\n    let transformedQuestions = [];\n    let formDataClone = formData;\n\n    for (let ii = 0; ii < totalItems; ii++) {\n      let dummyObj = {};\n      let choices = [];\n      let dummyIndex = 0;\n      let dummyI = 0;\n\n      outerloop: for (const key in formDataClone) {\n        if (formDataClone.hasOwnProperty(key)) {\n          for (let index = 0; index < questions.length; index++) {\n            for (let i = 1; i <= questions[index].noitems; i++) {\n              // Multiple choice\n              if (key === `Set${index}|Question${i}|multichoice`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.choices = choices;\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"multipleChoice\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|multichoice`];\n                choices[0] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c1`],\n                  value: \"a\",\n                };\n                choices[1] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c2`],\n                  value: \"b\",\n                };\n                choices[2] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c3`],\n                  value: \"c\",\n                };\n                choices[3] = {\n                  label: formDataClone[`Set${index}|Choice${i}|c4`],\n                  value: \"d\",\n                };\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[\n                  `Set${dummyIndex}|Question${dummyI}|multichoice`\n                ];\n                delete formDataClone[`Set${dummyIndex}|Answer${dummyI}|Answer`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c1`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c2`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c3`];\n                delete formDataClone[`Set${dummyIndex}|Choice${dummyI}|c4`];\n\n                break outerloop;\n              } // True or False\n              else if (key === `Set${index}|Question${i}|trueorfalse`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"trueOrFalse\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|trueorfalse`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|trueorfalse`];\n                delete formDataClone[`Set${index}|Answer${i}|trueorfalse`];\n\n                break outerloop;\n              } // Identification\n              else if (key === `Set${index}|Question${i}|identification`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"identification\";\n                dummyObj.question = formDataClone[key];\n                dummyObj.answer =\n                  formDataClone[`Set${index}|Answer${i}|identification`];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|identification`];\n                delete formDataClone[`Set${index}|Answer${i}|identification`];\n\n                break outerloop;\n              } // Essay Type\n              else if (key === `Set${index}|Question${i}|essaytype`) {\n                dummyObj.uuid = uuidv4();\n                dummyObj.points = questions[index].points;\n                dummyObj.type = \"essayType\";\n                dummyObj.question = formDataClone[key];\n\n                dummyI = i;\n                dummyIndex = index;\n\n                delete formDataClone[`Set${index}|Question${i}|essaytype`];\n\n                break outerloop;\n              }\n            }\n          }\n        }\n      }\n      transformedQuestions.push(dummyObj);\n    }\n\n    submitExamQuestions(transformedQuestions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <Fab\n        onClick={() => handleAddQuestions()}\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"large\"\n        style={{\n          margin: 0,\n          top: \"auto\",\n          right: \"2rem\",\n          bottom: \"5rem\",\n          position: \"fixed\",\n        }}>\n        <AddIcon />\n      </Fab>\n\n      <QuestionAdderDialog\n        handleAdd={handleAdd}\n        open={openQuestionAdder}\n        setOpen={setOpenQuestionAdder}\n      />\n\n      <form\n        className={classes.form}\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}>\n        <Typography variant=\"h6\" gutterBottom>\n          Question Pool\n        </Typography>\n        <Divider />\n        <div>\n          {questions.map((question, i) => {\n            return (\n              <ExamPool\n                key={i}\n                question={question}\n                errors={errors}\n                control={control}\n                index={i}\n              />\n            );\n          })}\n        </div>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst VerifyQuestions = ({ questions }) => {\n  let examQuestions = [];\n\n  for (let i = 0; i < questions.length; i++) {\n    if (questions[i].type === \"multipleChoice\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions.points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n\n          {/* Choices */}\n          {questions[i].choices.map((choice, i) => {\n            return (\n              <Grid item key={i}>\n                <Typography variant=\"body1\">\n                  {`${choice.value.toUpperCase()}.) ${choice.label}`}\n                </Typography>\n              </Grid>\n            );\n          })}\n\n          {/* Answer */}\n          <Grid item xs={12}>\n            <Typography\n              variant=\"body1\"\n              gutterBottom>{`Answer: ${questions[i].answer}`}</Typography>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"trueOrFalse\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            {/* Question */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" gutterBottom>\n                {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                  questions[i].points > 1 ? \"points\" : \"point\"\n                })`}\n              </Typography>\n            </Grid>\n\n            {/* Answer */}\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" gutterBottom>\n                {`Answer: ${questions[i].answer === \"t\" ? \"True\" : \"False\"}`}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"identification\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions[i].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n\n          {/* Answer */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`Answer: ${questions[i].answer}`}\n            </Typography>\n          </Grid>\n        </Grid>\n      );\n    } else if (questions[i].type === \"essayType\") {\n      examQuestions.push(\n        <Grid container spacing={1}>\n          {/* Question */}\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              {`${i + 1}.) ${questions[i].question} (${questions[i].points} ${\n                questions[i].points > 1 ? \"points\" : \"point\"\n              })`}\n            </Typography>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {examQuestions.map((qstn, i) => (\n        <div key={i}>{qstn}</div>\n      ))}\n    </Grid>\n  );\n};\n\nexport default VerifyQuestions;\n","import React from \"react\";\nimport { Button, Typography, Divider } from \"@material-ui/core\";\nimport useStylesForgotPassword from \"./styles/useStylesForgotPassword\";\nimport VerifyQuestions from \"./VerifyQuestions\";\n\nconst ExamQuestionsForm = ({ questions, handleNext, submitQuestions }) => {\n  const classes = useStylesForgotPassword();\n\n  const handleSubmit = () => {\n    submitQuestions(questions);\n    handleNext();\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>\n          Verify Questions\n        </Typography>\n\n        <Divider style={{ marginBottom: \"2rem\" }} />\n\n        <VerifyQuestions questions={questions} />\n\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}>\n            Next\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ExamQuestionsForm;\n","import React, { useState } from \"react\";\nimport ExamDetailsForm from \"../components/ExamDetailsForm\";\nimport ExamQuestionsForm from \"../components/ExamQuestionsForm\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport VerifyExamQuestions from \"../components/VerifyExamQuestions\";\nimport examServices from \"../server/services/exams\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter exam details\", \"Input question pool\", \"Verify exam \"];\n\nconst ForgotPassword = () => {\n  const [examDetails, setExamDetails] = useState({});\n  const [examQuestions, setExamQuestions] = useState([]);\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleSubmitExamDetails = examDetail => {\n    setExamDetails(examDetail);\n  };\n\n  const handleSubmitExamQuestions = examQuestion => {\n    setExamQuestions(examQuestion);\n  };\n\n  const handleSubmitQuestions = questions => {\n    const newExam = {\n      uuid: examDetails.uuid,\n      examName: examDetails.examName,\n      examDesc: examDetails.examDesc,\n      classCode: examDetails.classCode,\n      sched: examDetails.sched,\n      deadline: examDetails.deadline,\n      submittedExam: [],\n      isChecked: false,\n      questions: examQuestions,\n      prof: localStorage.getItem(\"email\"),\n    };\n\n    examServices\n      .create(newExam)\n      .then(returnedData => {\n        if (returnedData !== \"exam uuid already exists\") {\n          console.log(\"Exam inserted into database\");\n        }\n      })\n      .catch(error => {\n        console.log(\"error :>> \", error);\n      });\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <ExamDetailsForm\n            submitExamDetails={handleSubmitExamDetails}\n            handleNext={handleNext}\n          />\n        );\n      case 1:\n        return (\n          <ExamQuestionsForm\n            submitExamQuestions={handleSubmitExamQuestions}\n            handleNext={handleNext}\n          />\n        );\n\n      case 2:\n        return (\n          <VerifyExamQuestions\n            submitQuestions={handleSubmitQuestions}\n            questions={examQuestions}\n            handleNext={handleNext}\n          />\n        );\n      default:\n        throw new Error(\"Unknown step\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Exam Creation\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Exam has been uploaded to database\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  It is available for students to be taken at specified time.\n                  Exams can be modified only before it starts.{\" \"}\n                  <Link to=\"/teacher\">Click here to return to dashboard</Link>\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>{getStepContent(activeStep)}</React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Link } from \"react-router-dom\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport CreateIcon from \"@material-ui/icons/Create\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100vw\",\n    bottom: 0,\n    position: \"fixed\",\n    zIndex: 1,\n  },\n});\n\nexport default function TeacherBottomNav({ match }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}>\n      {/* <BottomNavigationAction\n        label=\"Dashboard\"\n        icon={<DashboardIcon />}\n        component={Link}\n        to={`${match.url}`}\n      /> */}\n      <BottomNavigationAction\n        label=\"Exams\"\n        icon={<CreateIcon />}\n        component={Link}\n        to={`${match.url}`}\n      />\n      <BottomNavigationAction\n        label=\"Classes\"\n        icon={<PeopleIcon />}\n        component={Link}\n        to={`${match.url}/students`}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useStylesTeacherHome from \"../components/styles/useStylesTeacherHome\";\nimport HomeDrawer from \"../components/HomeDrawer\";\nimport HomeAppBar from \"../components/HomeAppBar\";\nimport ExamTeacher from \"../components/ExamTeacher\";\nimport StudentsTeacher from \"../components/StudentsTeacher\";\nimport CreateExam from \"../pages/CreateExam\";\nimport BottomNav from \"../components/TeacherBottomNav\";\n\nconst TeacherHome = () => {\n  let match = useRouteMatch();\n  const classes = useStylesTeacherHome();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <HomeAppBar\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n        name={localStorage.getItem(\"lastName\")}\n      />\n\n      <HomeDrawer\n        open={open}\n        handleDrawerClose={handleDrawerClose}\n        match={match}\n      />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <BottomNav match={match} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* React Router */}\n          <Switch>\n            {/* <Route path={`${match.path}`} exact component={DashboardTeacher} /> */}\n            <Route path={`${match.path}`} exact>\n              <ExamTeacher match={match} />\n            </Route>\n            <Route\n              path={`${match.path}/students`}\n              exact\n              component={StudentsTeacher}\n            />\n            <Route\n              path={`${match.path}/createexam`}\n              exact\n              component={CreateExam}\n            />\n          </Switch>\n        </Container>\n        {/* <Box pt={8}>\n          <Copyright />\n        </Box> */}\n      </main>\n    </div>\n  );\n};\n\nexport default TeacherHome;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ForgotPasswordForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Account Details\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"E-Mail Address\"\n            fullWidth\n            autoComplete=\"shipping address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"idNumber\"\n            name=\"idNumber\"\n            label=\"ID Number\"\n            fullWidth\n            autoComplete=\"idNumber\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst PaymentForm = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        An email has been sent to your account\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"code\"\n            label=\"Enter verification code\"\n            placeholder=\"XXX-XXX\"\n            helperText=\"Please wait at least a minute before resending verification\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} md={6}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PaymentForm;\n","import React from \"react\";\nimport ForgotPasswordForm from \"../components/ForgotPasswordForm\";\nimport EmailVerificationForm from \"../components/EmailVerificationForm\";\nimport Copyright from \"../components/Copyright\";\nimport useStylesForgotPassword from \"../components/styles/useStylesForgotPassword\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst steps = [\"Enter account details\", \"Wait for email verification\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <ForgotPasswordForm />;\n    case 1:\n      return <EmailVerificationForm />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nconst ForgotPassword = () => {\n  const classes = useStylesForgotPassword();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Account Recovery\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Your account has been restored\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  You have succesfully restored your account\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}>\n                    {activeStep === steps.length - 1 ? \"Confirm\" : \"Next\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nconst Error404 = () => {\n  return (\n    <div>\n      <h1>404 ERROR</h1>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Student from \"../pages/Student\";\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport TeacherHome from \"../pages/TeacherHome\";\nimport ForgotPassword from \"../pages/ForgotPassword\";\nimport Error404 from \"../pages/Error404\";\n\nconst Router = () => {\n  let loggedIn = false;\n  let redirectURL = \"\";\n\n  if (localStorage.getItem(\"jwtCookie\")) {\n    loggedIn = true;\n    if (localStorage.getItem(\"isTeacher\") === \"true\") {\n      redirectURL = \"/teacher\";\n    } else {\n      redirectURL = \"/student\";\n    }\n  }\n\n  return (\n    <MemoryRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          {loggedIn ? <Redirect to={redirectURL} /> : <Home />}\n        </Route>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/student\" component={Student} />\n        <Route path=\"/teacher\" component={TeacherHome} />\n        <Route path=\"\" component={Error404} />\n      </Switch>\n    </MemoryRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport \"./App.css\";\nimport Router from \"./components/Router\";\n\nfunction App() {\n  return <Router></Router>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}